{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"size\", \"spacing\", \"color\", \"inactiveColor\"],\n  _excluded2 = [\"containerStyle\", \"animated\", \"horizontal\", \"animatedScrollOffset\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _times from \"lodash/times\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport PageControl from \"../pageControl\";\nimport * as presenter from \"./CarouselPresenter\";\nimport { CarouselProps, PageControlPosition } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { CarouselProps, PageControlPosition };\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n  function Carousel(props) {\n    var _this$props5, _this$props5$animated, _this$props6, _this$props6$animated, _props$pageHeight;\n    var _this;\n    _classCallCheck(this, Carousel);\n    _this = _callSuper(this, Carousel, [props]);\n    _this.carousel = React.createRef();\n    _this.onOrientationChanged = function () {\n      var _this$props = _this.props,\n        pageWidth = _this$props.pageWidth,\n        loop = _this$props.loop;\n      if (!pageWidth || loop) {\n        _this.orientationChange = true;\n        _this.setState({\n          pageWidth: _this.state.containerWidth || Constants.screenWidth\n        });\n      }\n    };\n    _this.getContainerMarginHorizontal = function () {\n      var _this$props$container = _this.props.containerMarginHorizontal,\n        containerMarginHorizontal = _this$props$container === void 0 ? 0 : _this$props$container;\n      return containerMarginHorizontal;\n    };\n    _this.getContainerPaddingVertical = function () {\n      var _this$props$container2 = _this.props.containerPaddingVertical,\n        containerPaddingVertical = _this$props$container2 === void 0 ? 0 : _this$props$container2;\n      return containerPaddingVertical;\n    };\n    _this.updateOffset = function () {\n      var _this$carousel;\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _presenter$calcOffset = presenter.calcOffset(_this.props, _this.state),\n        x = _presenter$calcOffset.x,\n        y = _presenter$calcOffset.y;\n      if ((_this$carousel = _this.carousel) != null && _this$carousel.current) {\n        _this.carousel.current.scrollTo({\n          x: x,\n          y: y,\n          animated: animated\n        });\n        if (Constants.isAndroid) {\n          _this.onMomentumScrollEnd();\n        }\n      }\n    };\n    _this.getSnapToOffsets = function () {\n      var _this$state = _this.state,\n        containerWidth = _this$state.containerWidth,\n        pageWidth = _this$state.pageWidth;\n      if (_this.shouldEnablePagination()) {\n        return undefined;\n      }\n      if (containerWidth) {\n        var spacings = pageWidth === containerWidth ? 0 : _this.getItemSpacings(_this.props);\n        var initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n        var snapToOffsets = _times(presenter.getChildrenLength(_this.props), function (index) {\n          return initialBreak + index * pageWidth + _this.getContainerMarginHorizontal();\n        });\n        return snapToOffsets;\n      }\n    };\n    _this.getInitialContentOffset = function (snapToOffsets) {\n      var _this$props2 = _this.props,\n        horizontal = _this$props2.horizontal,\n        initialPage = _this$props2.initialPage;\n      var initialOffset = _this.state.initialOffset;\n      var contentOffset = initialOffset;\n      if (snapToOffsets && initialPage !== undefined) {\n        var offset = initialPage === 0 ? 0 : snapToOffsets[initialPage - 1];\n        contentOffset = {\n          x: horizontal ? offset : 0,\n          y: horizontal ? 0 : offset\n        };\n      }\n      return contentOffset;\n    };\n    _this.onContentSizeChange = function () {\n      if (Constants.isAndroid) {\n        _this.updateOffset();\n      }\n    };\n    _this.onContainerLayout = function (_ref) {\n      var _ref$nativeEvent$layo = _ref.nativeEvent.layout,\n        containerWidth = _ref$nativeEvent$layo.width,\n        containerHeight = _ref$nativeEvent$layo.height;\n      var _this$props3 = _this.props,\n        _this$props3$pageWidt = _this$props3.pageWidth,\n        pageWidth = _this$props3$pageWidt === void 0 ? containerWidth : _this$props3$pageWidt,\n        _this$props3$pageHeig = _this$props3.pageHeight,\n        pageHeight = _this$props3$pageHeig === void 0 ? containerHeight : _this$props3$pageHeig,\n        horizontal = _this$props3.horizontal;\n      var initialOffset = presenter.calcOffset(_this.props, {\n        currentPage: _this.state.currentPage,\n        pageWidth: pageWidth,\n        pageHeight: pageHeight\n      });\n      if (horizontal && containerWidth || !horizontal && containerHeight) {\n        _this.setState({\n          containerWidth: containerWidth,\n          pageWidth: pageWidth,\n          pageHeight: pageHeight,\n          initialOffset: initialOffset\n        });\n      }\n    };\n    _this.onMomentumScrollEnd = function () {\n      var _this$state2 = _this.state,\n        currentStandingPage = _this$state2.currentStandingPage,\n        currentPage = _this$state2.currentPage;\n      var pagesCount = presenter.getChildrenLength(_this.props);\n      if (currentPage < pagesCount) {\n        _this.setState({\n          currentStandingPage: currentPage\n        });\n        if (currentStandingPage !== currentPage) {\n          _this.props.onChangePage == null ? void 0 : _this.props.onChangePage(currentPage, currentStandingPage, {\n            isAutoScrolled: _this.isAutoScrolled\n          });\n          _this.isAutoScrolled = false;\n        }\n      }\n    };\n    _this.onScroll = function (event) {\n      if (!_this.skippedInitialScroll) {\n        _this.skippedInitialScroll = true;\n        return;\n      }\n      var _this$props4 = _this.props,\n        loop = _this$props4.loop,\n        autoplay = _this$props4.autoplay,\n        horizontal = _this$props4.horizontal;\n      var _this$state3 = _this.state,\n        pageWidth = _this$state3.pageWidth,\n        pageHeight = _this$state3.pageHeight;\n      var offsetX = event.nativeEvent.contentOffset.x;\n      var offsetY = event.nativeEvent.contentOffset.y;\n      var offset = horizontal ? offsetX : offsetY;\n      var pageSize = horizontal ? pageWidth : pageHeight;\n      if (offset >= 0) {\n        if (!_this.orientationChange) {\n          var newPage = presenter.calcPageIndex(offset, _this.props, pageSize);\n          _this.setState({\n            currentPage: newPage\n          });\n        }\n        _this.orientationChange = false;\n      }\n      if (loop && presenter.isOutOfBounds(offsetX, _this.props, pageWidth)) {\n        _this.updateOffset();\n      }\n      if (autoplay) {\n        _this.resetAutoPlay();\n      }\n      _this.props.onScroll == null ? void 0 : _this.props.onScroll(event);\n    };\n    _this.onScrollEvent = Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: (_this$props5 = _this.props) == null ? void 0 : (_this$props5$animated = _this$props5.animatedScrollOffset) == null ? void 0 : _this$props5$animated.y,\n          x: (_this$props6 = _this.props) == null ? void 0 : (_this$props6$animated = _this$props6.animatedScrollOffset) == null ? void 0 : _this$props6$animated.x\n        }\n      }\n    }], {\n      useNativeDriver: true,\n      listener: _this.onScroll\n    });\n    _this.renderChild = function (child, key) {\n      if (child) {\n        var _this$state4 = _this.state,\n          pageWidth = _this$state4.pageWidth,\n          pageHeight = _this$state4.pageHeight;\n        var horizontal = _this.props.horizontal;\n        var paddingLeft = horizontal ? _this.shouldUsePageWidth() ? _this.getItemSpacings(_this.props) : undefined : 0;\n        var index = Number(key);\n        var length = presenter.getChildrenLength(_this.props);\n        var containerMarginHorizontal = _this.getContainerMarginHorizontal();\n        var marginLeft = index === 0 ? containerMarginHorizontal : 0;\n        var marginRight = index === length - 1 ? containerMarginHorizontal : 0;\n        var paddingVertical = _this.getContainerPaddingVertical();\n        return _jsxs(View, {\n          style: [{\n            width: pageWidth,\n            height: !horizontal ? pageHeight : undefined,\n            paddingLeft: paddingLeft,\n            marginLeft: marginLeft,\n            marginRight: marginRight,\n            paddingVertical: paddingVertical\n          }, Constants.isRTL && Constants.isAndroid && styles.invertedView],\n          collapsable: false,\n          children: [_this.shouldAllowAccessibilityLayout() && !Number.isNaN(index) && _jsx(View, {\n            style: styles.hiddenText,\n            children: _jsx(Text, {\n              children: `page ${index + 1} out of ${length}`\n            })\n          }), child]\n        }, key);\n      }\n    };\n    var defaultPageWidth = props.loop || !props.pageWidth ? Constants.screenWidth : props.pageWidth;\n    var _pageHeight = (_props$pageHeight = props.pageHeight) != null ? _props$pageHeight : Constants.screenHeight;\n    _this.isAutoScrolled = false;\n    _this.state = {\n      containerWidth: undefined,\n      currentPage: _this.shouldUsePageWidth() ? _this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage || 0,\n      pageWidth: defaultPageWidth,\n      pageHeight: _pageHeight,\n      initialOffset: presenter.calcOffset(props, {\n        currentPage: props.initialPage,\n        pageWidth: defaultPageWidth,\n        pageHeight: _pageHeight\n      }),\n      prevProps: props\n    };\n    return _this;\n  }\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n      if (this.props.autoplay) {\n        this.startAutoPlay();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var autoplay = this.props.autoplay;\n      if (autoplay && !prevProps.autoplay) {\n        this.startAutoPlay();\n      } else if (!autoplay && prevProps.autoplay) {\n        this.stopAutoPlay();\n      }\n    }\n  }, {\n    key: \"getItemSpacings\",\n    value: function getItemSpacings(props) {\n      var _props$itemSpacings = props.itemSpacings,\n        itemSpacings = _props$itemSpacings === void 0 ? 16 : _props$itemSpacings;\n      return itemSpacings;\n    }\n  }, {\n    key: \"startAutoPlay\",\n    value: function startAutoPlay() {\n      var _this2 = this;\n      this.autoplayTimer = setInterval(function () {\n        _this2.isAutoScrolled = true;\n        _this2.goToNextPage();\n      }, this.props.autoplayInterval);\n    }\n  }, {\n    key: \"stopAutoPlay\",\n    value: function stopAutoPlay() {\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n      }\n    }\n  }, {\n    key: \"resetAutoPlay\",\n    value: function resetAutoPlay() {\n      this.stopAutoPlay();\n      this.startAutoPlay();\n    }\n  }, {\n    key: \"goToPage\",\n    value: function goToPage(pageIndex) {\n      var _this3 = this;\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.setState({\n        currentPage: pageIndex\n      }, function () {\n        return _this3.updateOffset(animated);\n      });\n    }\n  }, {\n    key: \"goToNextPage\",\n    value: function goToNextPage() {\n      var currentPage = this.state.currentPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n      var loop = this.props.loop;\n      var nextPageIndex;\n      if (loop) {\n        if (currentPage === pagesCount + 1) {\n          this.goToPage(0, false);\n          return;\n        }\n        nextPageIndex = currentPage + 1;\n      } else {\n        nextPageIndex = Math.min(pagesCount - 1, currentPage + 1);\n      }\n      this.goToPage(nextPageIndex, true);\n    }\n  }, {\n    key: \"getCalcIndex\",\n    value: function getCalcIndex(index) {\n      if (Constants.isRTL && Constants.isAndroid) {\n        var length = presenter.getChildrenLength(this.props) - 1;\n        return length - index;\n      }\n      return index;\n    }\n  }, {\n    key: \"shouldUsePageWidth\",\n    value: function shouldUsePageWidth() {\n      var _this$props7 = this.props,\n        loop = _this$props7.loop,\n        pageWidth = _this$props7.pageWidth;\n      return !loop && pageWidth;\n    }\n  }, {\n    key: \"shouldEnablePagination\",\n    value: function shouldEnablePagination() {\n      var _this$props8 = this.props,\n        pagingEnabled = _this$props8.pagingEnabled,\n        horizontal = _this$props8.horizontal;\n      return horizontal ? pagingEnabled && !this.shouldUsePageWidth() : true;\n    }\n  }, {\n    key: \"shouldAllowAccessibilityLayout\",\n    value: function shouldAllowAccessibilityLayout() {\n      var allowAccessibleLayout = this.props.allowAccessibleLayout;\n      return allowAccessibleLayout && Constants.accessibility.isScreenReaderEnabled;\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this4 = this;\n      var _this$props9 = this.props,\n        propsChildren = _this$props9.children,\n        loop = _this$props9.loop;\n      var length = presenter.getChildrenLength(this.props);\n      var children = Constants.isRTL && Constants.isAndroid ? React.Children.toArray(propsChildren).reverse() : propsChildren;\n      var childrenArray = React.Children.map(children, function (child, index) {\n        return _this4.renderChild(child, `${index}`);\n      });\n      if (loop && childrenArray) {\n        childrenArray.unshift(this.renderChild(children[length - 1], `${length - 1}-clone`));\n        childrenArray.push(this.renderChild(children[0], `${0}-clone`));\n      }\n      return childrenArray;\n    }\n  }, {\n    key: \"renderPageControl\",\n    value: function renderPageControl() {\n      var _this$props10 = this.props,\n        pageControlPosition = _this$props10.pageControlPosition,\n        _this$props10$pageCon = _this$props10.pageControlProps,\n        pageControlProps = _this$props10$pageCon === void 0 ? {} : _this$props10$pageCon;\n      var currentStandingPage = this.state.currentStandingPage;\n      if (pageControlPosition) {\n        var _pageControlProps$siz = pageControlProps.size,\n          size = _pageControlProps$siz === void 0 ? 6 : _pageControlProps$siz,\n          _pageControlProps$spa = pageControlProps.spacing,\n          spacing = _pageControlProps$spa === void 0 ? 8 : _pageControlProps$spa,\n          _pageControlProps$col = pageControlProps.color,\n          color = _pageControlProps$col === void 0 ? Colors.$backgroundNeutralHeavy : _pageControlProps$col,\n          _pageControlProps$ina = pageControlProps.inactiveColor,\n          inactiveColor = _pageControlProps$ina === void 0 ? Colors.$backgroundDisabled : _pageControlProps$ina,\n          others = _objectWithoutProperties(pageControlProps, _excluded);\n        var pagesCount = presenter.getChildrenLength(this.props);\n        var containerStyle = pageControlPosition === PageControlPosition.UNDER ? {\n          marginVertical: 16 - this.getContainerPaddingVertical()\n        } : styles.pageControlContainerStyle;\n        return _jsx(PageControl, _objectSpread(_objectSpread({\n          size: size,\n          spacing: spacing,\n          containerStyle: containerStyle,\n          inactiveColor: inactiveColor,\n          color: color\n        }, others), {}, {\n          numOfPages: pagesCount,\n          currentPage: currentStandingPage\n        }));\n      }\n    }\n  }, {\n    key: \"renderCounter\",\n    value: function renderCounter() {\n      var _this$props11 = this.props,\n        pageWidth = _this$props11.pageWidth,\n        showCounter = _this$props11.showCounter,\n        counterTextStyle = _this$props11.counterTextStyle;\n      var currentStandingPage = this.state.currentStandingPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n      if (showCounter && !pageWidth) {\n        return _jsx(View, {\n          center: true,\n          style: styles.counter,\n          children: _jsxs(Text, {\n            grey80: true,\n            text90: true,\n            style: [{\n              fontWeight: 'bold'\n            }, counterTextStyle],\n            children: [currentStandingPage + 1, \"/\", pagesCount]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderAccessibleLayout\",\n    value: function renderAccessibleLayout() {\n      var _this5 = this;\n      var _this$props12 = this.props,\n        containerStyle = _this$props12.containerStyle,\n        children = _this$props12.children,\n        testID = _this$props12.testID;\n      return _jsx(View, {\n        style: containerStyle,\n        onLayout: this.onContainerLayout,\n        children: _jsx(ScrollView, {\n          testID: testID,\n          ref: this.carousel,\n          showsVerticalScrollIndicator: false,\n          pagingEnabled: true,\n          onContentSizeChange: this.onContentSizeChange,\n          onScroll: this.onScroll,\n          onMomentumScrollEnd: this.onMomentumScrollEnd,\n          children: React.Children.map(children, function (child, index) {\n            return _this5.renderChild(child, `${index}`);\n          })\n        })\n      });\n    }\n  }, {\n    key: \"renderCarousel\",\n    value: function renderCarousel() {\n      var _this$props13 = this.props,\n        containerStyle = _this$props13.containerStyle,\n        animated = _this$props13.animated,\n        horizontal = _this$props13.horizontal,\n        animatedScrollOffset = _this$props13.animatedScrollOffset,\n        style = _this$props13.style,\n        others = _objectWithoutProperties(_this$props13, _excluded2);\n      var scrollContainerStyle = this.shouldUsePageWidth() ? {\n        paddingRight: this.getItemSpacings(this.props)\n      } : undefined;\n      var snapToOffsets = this.getSnapToOffsets();\n      var marginBottom = Math.max(0, this.getContainerPaddingVertical() - 16);\n      var ScrollContainer = animatedScrollOffset ? Animated.ScrollView : ScrollView;\n      var contentOffset = this.getInitialContentOffset(snapToOffsets);\n      var _style = Constants.isRTL && Constants.isAndroid ? [styles.invertedView, style] : style;\n      return _jsxs(View, {\n        animated: animated,\n        style: [{\n          marginBottom: marginBottom\n        }, containerStyle],\n        onLayout: this.onContainerLayout,\n        children: [_jsx(ScrollContainer, _objectSpread(_objectSpread({\n          showsHorizontalScrollIndicator: false,\n          showsVerticalScrollIndicator: false,\n          decelerationRate: \"fast\",\n          scrollEventThrottle: 200\n        }, others), {}, {\n          ref: this.carousel,\n          onScroll: animatedScrollOffset ? this.onScrollEvent : this.onScroll,\n          contentContainerStyle: scrollContainerStyle,\n          horizontal: horizontal,\n          pagingEnabled: this.shouldEnablePagination(),\n          snapToOffsets: snapToOffsets,\n          contentOffset: contentOffset,\n          onMomentumScrollEnd: this.onMomentumScrollEnd,\n          style: _style,\n          children: this.renderChildren()\n        })), this.renderPageControl(), this.renderCounter()]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.shouldAllowAccessibilityLayout() ? this.renderAccessibleLayout() : this.renderCarousel();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var currentPage = prevState.currentPage,\n        prevProps = prevState.prevProps;\n      var pageWidth = prevProps.pageWidth,\n        pageHeight = prevProps.pageHeight;\n      var nextPageWidth = nextProps.pageWidth,\n        nextPageHeight = nextProps.pageHeight;\n      if (!_isUndefined(nextPageWidth) && pageWidth !== nextPageWidth || !_isUndefined(nextPageHeight) && pageHeight !== nextPageHeight) {\n        var _pageWidth = nextPageWidth;\n        var _pageHeight2 = nextPageHeight;\n        return {\n          pageWidth: _pageWidth,\n          initialOffset: presenter.calcOffset(prevProps, {\n            currentPage: currentPage,\n            pageWidth: _pageWidth,\n            pageHeight: _pageHeight2\n          }),\n          prevProps: nextProps\n        };\n      }\n      if (prevProps.containerMarginHorizontal !== nextProps.containerMarginHorizontal || prevProps.loop !== nextProps.loop) {\n        return {\n          prevProps: nextProps\n        };\n      }\n      return null;\n    }\n  }]);\n  return Carousel;\n}(Component);\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = {\n  initialPage: 0,\n  pagingEnabled: true,\n  autoplay: false,\n  autoplayInterval: 4000,\n  horizontal: true\n};\nCarousel.pageControlPositions = PageControlPosition;\nexport { Carousel };\nexport default asBaseComponent(Carousel);\nvar styles = StyleSheet.create({\n  counter: {\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    borderRadius: 20,\n    backgroundColor: Colors.rgba(Colors.black, 0.6),\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  pageControlContainerStyle: {\n    position: 'absolute',\n    bottom: 16,\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    position: 'absolute',\n    width: 1\n  },\n  invertedView: {\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});","map":{"version":3,"names":["_times","_isUndefined","React","Component","Animated","ScrollView","StyleSheet","Colors","asBaseComponent","Constants","View","Text","PageControl","presenter","CarouselProps","PageControlPosition","jsx","_jsx","jsxs","_jsxs","Carousel","_Component","_inherits","props","_this$props5","_this$props5$animated","_this$props6","_this$props6$animated","_props$pageHeight","_this","_classCallCheck","_callSuper","carousel","createRef","onOrientationChanged","_this$props","pageWidth","loop","orientationChange","setState","state","containerWidth","screenWidth","getContainerMarginHorizontal","_this$props$container","containerMarginHorizontal","getContainerPaddingVertical","_this$props$container2","containerPaddingVertical","updateOffset","_this$carousel","animated","arguments","length","undefined","_presenter$calcOffset","calcOffset","x","y","current","scrollTo","isAndroid","onMomentumScrollEnd","getSnapToOffsets","_this$state","shouldEnablePagination","spacings","getItemSpacings","initialBreak","snapToOffsets","getChildrenLength","index","getInitialContentOffset","_this$props2","horizontal","initialPage","initialOffset","contentOffset","offset","onContentSizeChange","onContainerLayout","_ref","_ref$nativeEvent$layo","nativeEvent","layout","width","containerHeight","height","_this$props3","_this$props3$pageWidt","_this$props3$pageHeig","pageHeight","currentPage","_this$state2","currentStandingPage","pagesCount","onChangePage","isAutoScrolled","onScroll","event","skippedInitialScroll","_this$props4","autoplay","_this$state3","offsetX","offsetY","pageSize","newPage","calcPageIndex","isOutOfBounds","resetAutoPlay","onScrollEvent","animatedScrollOffset","useNativeDriver","listener","renderChild","child","key","_this$state4","paddingLeft","shouldUsePageWidth","Number","marginLeft","marginRight","paddingVertical","style","isRTL","styles","invertedView","collapsable","children","shouldAllowAccessibilityLayout","isNaN","hiddenText","defaultPageWidth","screenHeight","getCalcIndex","prevProps","_createClass","value","componentDidMount","dimensionsChangeListener","addDimensionsEventListener","startAutoPlay","componentWillUnmount","removeDimensionsEventListener","autoplayTimer","clearInterval","componentDidUpdate","stopAutoPlay","_props$itemSpacings","itemSpacings","_this2","setInterval","goToNextPage","autoplayInterval","goToPage","pageIndex","_this3","nextPageIndex","Math","min","_this$props7","_this$props8","pagingEnabled","allowAccessibleLayout","accessibility","isScreenReaderEnabled","renderChildren","_this4","_this$props9","propsChildren","Children","toArray","reverse","childrenArray","map","unshift","push","renderPageControl","_this$props10","pageControlPosition","_this$props10$pageCon","pageControlProps","_pageControlProps$siz","size","_pageControlProps$spa","spacing","_pageControlProps$col","color","$backgroundNeutralHeavy","_pageControlProps$ina","inactiveColor","$backgroundDisabled","others","_objectWithoutProperties","_excluded","containerStyle","UNDER","marginVertical","pageControlContainerStyle","_objectSpread","numOfPages","renderCounter","_this$props11","showCounter","counterTextStyle","center","counter","grey80","text90","fontWeight","renderAccessibleLayout","_this5","_this$props12","testID","onLayout","ref","showsVerticalScrollIndicator","renderCarousel","_this$props13","_excluded2","scrollContainerStyle","paddingRight","marginBottom","max","ScrollContainer","_style","showsHorizontalScrollIndicator","decelerationRate","scrollEventThrottle","contentContainerStyle","render","getDerivedStateFromProps","nextProps","prevState","nextPageWidth","nextPageHeight","displayName","defaultProps","pageControlPositions","create","paddingHorizontal","borderRadius","backgroundColor","rgba","black","position","top","right","bottom","alignSelf","transform","scaleX"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/carousel/index.js"],"sourcesContent":["import _times from \"lodash/times\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { Component } from 'react';\nimport { Animated, ScrollView, StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport PageControl from \"../pageControl\";\nimport * as presenter from \"./CarouselPresenter\";\nimport { CarouselProps, PageControlPosition } from \"./types\";\nexport { CarouselProps, PageControlPosition };\n/**\n * @description: Carousel for scrolling pages horizontally\n * @gif: https://user-images.githubusercontent.com/1780255/107120258-40b5bc80-6895-11eb-9596-8065d3a940ff.gif, https://user-images.githubusercontent.com/1780255/107120257-3eebf900-6895-11eb-9800-402e9e0dc692.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.tsx\n * @extends: ScrollView\n * @extendsLink: https://reactnative.dev/docs/scrollview\n * @notes: This is a screen width Component\n */\nclass Carousel extends Component {\n  static displayName = 'Carousel';\n  static defaultProps = {\n    initialPage: 0,\n    pagingEnabled: true,\n    autoplay: false,\n    autoplayInterval: 4000,\n    horizontal: true\n  };\n  static pageControlPositions = PageControlPosition;\n  carousel = React.createRef();\n  constructor(props) {\n    super(props);\n    const defaultPageWidth = props.loop || !props.pageWidth ? Constants.screenWidth : props.pageWidth;\n    const pageHeight = props.pageHeight ?? Constants.screenHeight;\n    this.isAutoScrolled = false;\n    this.state = {\n      containerWidth: undefined,\n      // @ts-ignore (defaultProps)\n      currentPage: this.shouldUsePageWidth() ? this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage || 0,\n      pageWidth: defaultPageWidth,\n      pageHeight,\n      initialOffset: presenter.calcOffset(props, {\n        // @ts-ignore (defaultProps)\n        currentPage: props.initialPage,\n        pageWidth: defaultPageWidth,\n        pageHeight\n      }),\n      prevProps: props\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage,\n      prevProps\n    } = prevState;\n    const {\n      pageWidth,\n      pageHeight\n    } = prevProps;\n    const {\n      pageWidth: nextPageWidth,\n      pageHeight: nextPageHeight\n    } = nextProps;\n    if (!_isUndefined(nextPageWidth) && pageWidth !== nextPageWidth || !_isUndefined(nextPageHeight) && pageHeight !== nextPageHeight) {\n      const pageWidth = nextPageWidth;\n      const pageHeight = nextPageHeight;\n      return {\n        pageWidth,\n        initialOffset: presenter.calcOffset(prevProps, {\n          currentPage,\n          pageWidth,\n          pageHeight\n        }),\n        prevProps: nextProps\n      };\n    }\n\n    // for presenter.calcOffset() props parameter\n    if (prevProps.containerMarginHorizontal !== nextProps.containerMarginHorizontal || prevProps.loop !== nextProps.loop) {\n      return {\n        prevProps: nextProps\n      };\n    }\n    return null;\n  }\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n    if (this.props.autoplay) {\n      this.startAutoPlay();\n    }\n  }\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      autoplay\n    } = this.props;\n    if (autoplay && !prevProps.autoplay) {\n      this.startAutoPlay();\n    } else if (!autoplay && prevProps.autoplay) {\n      this.stopAutoPlay();\n    }\n  }\n  onOrientationChanged = () => {\n    const {\n      pageWidth,\n      loop\n    } = this.props;\n    if (!pageWidth || loop) {\n      this.orientationChange = true;\n      // HACK: setting to containerWidth for Android's call when view disappear\n      this.setState({\n        pageWidth: this.state.containerWidth || Constants.screenWidth\n      });\n    }\n  };\n  getItemSpacings(props) {\n    const {\n      itemSpacings = 16\n    } = props;\n    return itemSpacings;\n  }\n  getContainerMarginHorizontal = () => {\n    const {\n      containerMarginHorizontal = 0\n    } = this.props;\n    return containerMarginHorizontal;\n  };\n\n  // TODO: RN 61.5 - try to remove this from the children and move to the ScrollView's contentContainerStyle\n  // style={{overflow: 'visible'}} does not work in ScrollView on Android, maybe it will be fixed in the future\n  getContainerPaddingVertical = () => {\n    const {\n      containerPaddingVertical = 0\n    } = this.props;\n    return containerPaddingVertical;\n  };\n  updateOffset = (animated = false) => {\n    const {\n      x,\n      y\n    } = presenter.calcOffset(this.props, this.state);\n    if (this.carousel?.current) {\n      this.carousel.current.scrollTo({\n        x,\n        y,\n        animated\n      });\n      if (Constants.isAndroid) {\n        // this is done to handle onMomentumScrollEnd not being called in Android:\n        // https://github.com/facebook/react-native/issues/11693\n        // https://github.com/facebook/react-native/issues/19246\n        this.onMomentumScrollEnd();\n      }\n    }\n  };\n  startAutoPlay() {\n    this.autoplayTimer = setInterval(() => {\n      this.isAutoScrolled = true;\n      this.goToNextPage();\n    }, this.props.autoplayInterval);\n  }\n  stopAutoPlay() {\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer);\n    }\n  }\n  resetAutoPlay() {\n    this.stopAutoPlay();\n    this.startAutoPlay();\n  }\n  goToPage(pageIndex, animated = true) {\n    this.setState({\n      currentPage: pageIndex\n    }, () => this.updateOffset(animated));\n  }\n  goToNextPage() {\n    const {\n      currentPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n    const {\n      loop\n    } = this.props;\n    let nextPageIndex;\n    if (loop) {\n      if (currentPage === pagesCount + 1) {\n        this.goToPage(0, false);\n        return;\n      }\n      nextPageIndex = currentPage + 1;\n    } else {\n      nextPageIndex = Math.min(pagesCount - 1, currentPage + 1);\n    }\n    this.goToPage(nextPageIndex, true);\n    // // in case of a loop, after we advanced right to the cloned first page,\n    // // we return silently to the real first page\n    // if (loop && currentPage === pagesCount) {\n    //   this.goToPage(0, false);\n    // }\n  }\n  getCalcIndex(index) {\n    // to handle scrollView index issue in Android's RTL layout\n    if (Constants.isRTL && Constants.isAndroid) {\n      const length = presenter.getChildrenLength(this.props) - 1;\n      return length - index;\n    }\n    return index;\n  }\n\n  // TODO: currently this returns pagesCount offsets, not starting from 0; look into changing this into (pagesCount - 1) or to have the 1st item as 0\n  getSnapToOffsets = () => {\n    const {\n      containerWidth,\n      pageWidth\n    } = this.state;\n    if (this.shouldEnablePagination()) {\n      return undefined;\n    }\n    if (containerWidth) {\n      const spacings = pageWidth === containerWidth ? 0 : this.getItemSpacings(this.props);\n      const initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n      const snapToOffsets = _times(presenter.getChildrenLength(this.props), index => initialBreak + index * pageWidth + this.getContainerMarginHorizontal());\n      return snapToOffsets;\n    }\n  };\n  getInitialContentOffset = snapToOffsets => {\n    const {\n      horizontal,\n      initialPage\n    } = this.props;\n    const {\n      initialOffset\n    } = this.state;\n    let contentOffset = initialOffset;\n    if (snapToOffsets && initialPage !== undefined) {\n      const offset = initialPage === 0 ? 0 : snapToOffsets[initialPage - 1];\n      contentOffset = {\n        x: horizontal ? offset : 0,\n        y: horizontal ? 0 : offset\n      };\n    }\n    return contentOffset;\n  };\n  shouldUsePageWidth() {\n    const {\n      loop,\n      pageWidth\n    } = this.props;\n    return !loop && pageWidth;\n  }\n  shouldEnablePagination() {\n    const {\n      pagingEnabled,\n      horizontal\n    } = this.props;\n    return horizontal ? pagingEnabled && !this.shouldUsePageWidth() : true;\n  }\n  shouldAllowAccessibilityLayout() {\n    const {\n      allowAccessibleLayout\n    } = this.props;\n    return allowAccessibleLayout && Constants.accessibility.isScreenReaderEnabled;\n  }\n  onContentSizeChange = () => {\n    // this is to handle initial scroll position (content offset)\n    if (Constants.isAndroid) {\n      this.updateOffset();\n    }\n  };\n  onContainerLayout = ({\n    nativeEvent: {\n      layout: {\n        width: containerWidth,\n        height: containerHeight\n      }\n    }\n  }) => {\n    const {\n      pageWidth = containerWidth,\n      pageHeight = containerHeight,\n      horizontal\n    } = this.props;\n    const initialOffset = presenter.calcOffset(this.props, {\n      currentPage: this.state.currentPage,\n      pageWidth,\n      pageHeight\n    });\n\n    // NOTE: This is to avoid resetting containerWidth to 0 - an issue that happens\n    // on Android in some case when onLayout is re-triggered\n    if (horizontal && containerWidth || !horizontal && containerHeight) {\n      this.setState({\n        containerWidth,\n        pageWidth,\n        pageHeight,\n        initialOffset\n      });\n    }\n  };\n  onMomentumScrollEnd = () => {\n    // finished full page scroll\n    const {\n      currentStandingPage,\n      currentPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n    if (currentPage < pagesCount) {\n      this.setState({\n        currentStandingPage: currentPage\n      });\n      if (currentStandingPage !== currentPage) {\n        this.props.onChangePage?.(currentPage, currentStandingPage, {\n          isAutoScrolled: this.isAutoScrolled\n        });\n        this.isAutoScrolled = false;\n      }\n    }\n  };\n  onScroll = event => {\n    if (!this.skippedInitialScroll) {\n      this.skippedInitialScroll = true;\n      return;\n    }\n    const {\n      loop,\n      autoplay,\n      horizontal\n    } = this.props;\n    const {\n      pageWidth,\n      pageHeight\n    } = this.state;\n    const offsetX = event.nativeEvent.contentOffset.x;\n    const offsetY = event.nativeEvent.contentOffset.y;\n    const offset = horizontal ? offsetX : offsetY;\n    const pageSize = horizontal ? pageWidth : pageHeight;\n    if (offset >= 0) {\n      if (!this.orientationChange) {\n        // Avoid new calculation on orientation change\n        const newPage = presenter.calcPageIndex(offset, this.props, pageSize);\n        this.setState({\n          currentPage: newPage\n        });\n      }\n      this.orientationChange = false;\n    }\n    if (loop && presenter.isOutOfBounds(offsetX, this.props, pageWidth)) {\n      this.updateOffset();\n    }\n    if (autoplay) {\n      // reset the timer to avoid auto scroll immediately after manual one\n      this.resetAutoPlay();\n    }\n    this.props.onScroll?.(event);\n  };\n  onScrollEvent = Animated.event([{\n    nativeEvent: {\n      contentOffset:\n      // @ts-ignore\n      {\n        y: this.props?.animatedScrollOffset?.y,\n        x: this.props?.animatedScrollOffset?.x\n      }\n    }\n  }], {\n    useNativeDriver: true,\n    listener: this.onScroll\n  });\n  renderChild = (child, key) => {\n    if (child) {\n      const {\n        pageWidth,\n        pageHeight\n      } = this.state;\n      const {\n        horizontal\n      } = this.props;\n      const paddingLeft = horizontal ? this.shouldUsePageWidth() ? this.getItemSpacings(this.props) : undefined : 0;\n      const index = Number(key);\n      const length = presenter.getChildrenLength(this.props);\n      const containerMarginHorizontal = this.getContainerMarginHorizontal();\n      const marginLeft = index === 0 ? containerMarginHorizontal : 0;\n      const marginRight = index === length - 1 ? containerMarginHorizontal : 0;\n      const paddingVertical = this.getContainerPaddingVertical();\n      return <View style={[{\n        width: pageWidth,\n        height: !horizontal ? pageHeight : undefined,\n        paddingLeft,\n        marginLeft,\n        marginRight,\n        paddingVertical\n      }, Constants.isRTL && Constants.isAndroid && styles.invertedView]} key={key} collapsable={false}>\n          {this.shouldAllowAccessibilityLayout() && !Number.isNaN(index) && <View style={styles.hiddenText}>\n              <Text>{`page ${index + 1} out of ${length}`}</Text>\n            </View>}\n          {child}\n        </View>;\n    }\n  };\n  renderChildren() {\n    const {\n      children: propsChildren,\n      loop\n    } = this.props;\n    const length = presenter.getChildrenLength(this.props);\n    const children = Constants.isRTL && Constants.isAndroid ? React.Children.toArray(propsChildren).reverse() : propsChildren;\n    const childrenArray = React.Children.map(children, (child, index) => {\n      return this.renderChild(child, `${index}`);\n    });\n    if (loop && childrenArray) {\n      // @ts-ignore\n      childrenArray.unshift(this.renderChild(children[length - 1], `${length - 1}-clone`));\n      // @ts-ignore\n      childrenArray.push(this.renderChild(children[0], `${0}-clone`));\n    }\n    return childrenArray;\n  }\n  renderPageControl() {\n    const {\n      pageControlPosition,\n      pageControlProps = {}\n    } = this.props;\n    const {\n      currentStandingPage\n    } = this.state;\n    if (pageControlPosition) {\n      const {\n        size = 6,\n        spacing = 8,\n        color = Colors.$backgroundNeutralHeavy,\n        inactiveColor = Colors.$backgroundDisabled,\n        ...others\n      } = pageControlProps;\n      const pagesCount = presenter.getChildrenLength(this.props);\n      const containerStyle = pageControlPosition === PageControlPosition.UNDER ? {\n        marginVertical: 16 - this.getContainerPaddingVertical()\n      } : styles.pageControlContainerStyle;\n      return <PageControl size={size} spacing={spacing} containerStyle={containerStyle} inactiveColor={inactiveColor} color={color} {...others} numOfPages={pagesCount} currentPage={currentStandingPage} />;\n    }\n  }\n  renderCounter() {\n    const {\n      pageWidth,\n      showCounter,\n      counterTextStyle\n    } = this.props;\n    const {\n      currentStandingPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n    if (showCounter && !pageWidth) {\n      return <View center style={styles.counter}>\n          <Text grey80 text90 style={[{\n          fontWeight: 'bold'\n        }, counterTextStyle]}>\n            {currentStandingPage + 1}/{pagesCount}\n          </Text>\n        </View>;\n    }\n  }\n  renderAccessibleLayout() {\n    const {\n      containerStyle,\n      children,\n      testID\n    } = this.props;\n    return <View style={containerStyle} onLayout={this.onContainerLayout}>\n        <ScrollView testID={testID} ref={this.carousel} showsVerticalScrollIndicator={false} pagingEnabled onContentSizeChange={this.onContentSizeChange} onScroll={this.onScroll} onMomentumScrollEnd={this.onMomentumScrollEnd}>\n          {React.Children.map(children, (child, index) => {\n          return this.renderChild(child, `${index}`);\n        })}\n        </ScrollView>\n      </View>;\n  }\n  renderCarousel() {\n    const {\n      containerStyle,\n      animated,\n      horizontal,\n      animatedScrollOffset,\n      style,\n      ...others\n    } = this.props;\n    const scrollContainerStyle = this.shouldUsePageWidth() ? {\n      paddingRight: this.getItemSpacings(this.props)\n    } : undefined;\n    const snapToOffsets = this.getSnapToOffsets();\n    const marginBottom = Math.max(0, this.getContainerPaddingVertical() - 16);\n    const ScrollContainer = animatedScrollOffset ? Animated.ScrollView : ScrollView;\n    const contentOffset = this.getInitialContentOffset(snapToOffsets);\n    const _style = Constants.isRTL && Constants.isAndroid ? [styles.invertedView, style] : style;\n    return <View animated={animated} style={[{\n      marginBottom\n    }, containerStyle]} onLayout={this.onContainerLayout}>\n        <ScrollContainer showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false} decelerationRate=\"fast\" scrollEventThrottle={200} {...others} ref={this.carousel} onScroll={animatedScrollOffset ? this.onScrollEvent : this.onScroll} contentContainerStyle={scrollContainerStyle} horizontal={horizontal} pagingEnabled={this.shouldEnablePagination()} snapToOffsets={snapToOffsets} contentOffset={contentOffset}\n      // onContentSizeChange={this.onContentSizeChange}\n      onMomentumScrollEnd={this.onMomentumScrollEnd} style={_style}>\n          {this.renderChildren()}\n        </ScrollContainer>\n        {this.renderPageControl()}\n        {this.renderCounter()}\n      </View>;\n  }\n  render() {\n    return this.shouldAllowAccessibilityLayout() ? this.renderAccessibleLayout() : this.renderCarousel();\n  }\n}\nexport { Carousel }; // For tests\nexport default asBaseComponent(Carousel);\nconst styles = StyleSheet.create({\n  counter: {\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    borderRadius: 20,\n    backgroundColor: Colors.rgba(Colors.black, 0.6),\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  pageControlContainerStyle: {\n    position: 'absolute',\n    bottom: 16,\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    position: 'absolute',\n    width: 1\n  },\n  invertedView: {\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}