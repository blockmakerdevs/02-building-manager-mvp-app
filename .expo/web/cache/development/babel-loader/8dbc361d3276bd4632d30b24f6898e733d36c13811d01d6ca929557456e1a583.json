{"ast":null,"code":"import _times from \"lodash/times\";\nimport getWeek from 'date-fns/getWeek';\nexport var HOUR_IN_MS = 60 * 60 * 1000;\nvar DAY_IN_MS = 24 * HOUR_IN_MS;\nvar WEEK_IN_MS = 7 * DAY_IN_MS;\nfunction getNumberOfWeeksInMonth(year, month, firstDayOfWeek) {\n  var numberOfDaysInMonth = new Date(year, month + 1, 0).getDate();\n  var dayOfTheWeek = new Date(year, month, 1).getDay();\n  var fixedDayOfTheWeek = (7 - (firstDayOfWeek - dayOfTheWeek)) % 7;\n  var numberOfWeeks = Math.ceil((numberOfDaysInMonth + fixedDayOfTheWeek) / 7);\n  return numberOfWeeks;\n}\nexport function getWeekNumbersOfMonth(year, month, firstDayOfWeek) {\n  if (month < 0 || month > 11) {\n    throw new Error('getWeekNumbersOfMonth util received an invalid month');\n  }\n  var firstDayOfMonth = new Date(year, month, 1);\n  var firstWeekNumber = getWeek(firstDayOfMonth, {\n    weekStartsOn: firstDayOfWeek\n  });\n  var numberOfWeeks = getNumberOfWeeksInMonth(year, month, firstDayOfWeek);\n  var weekNumbers = [];\n  _times(numberOfWeeks, function (i) {\n    return weekNumbers.push(i + firstWeekNumber);\n  });\n  return weekNumbers;\n}\nfunction getFirstDayInTheWeek(date, firstDayOfWeek) {\n  var result = date.timestamp - DAY_IN_MS * ((date.dayOfTheWeek - firstDayOfWeek) % 7);\n  var dayInMonth = getDateObject(result).day;\n  if (dayInMonth > 1 && dayInMonth <= 7) {\n    result -= WEEK_IN_MS;\n  }\n  return result;\n}\nfunction getFirstDayInTheYear(year, firstDayOfWeek) {\n  var dayInFirstWeekOfYear = getDateObject({\n    year: year,\n    month: 0,\n    day: 1\n  });\n  return getFirstDayInTheWeek(dayInFirstWeekOfYear, firstDayOfWeek);\n}\nexport function getDaysOfWeekNumber(year, weekNumber, firstDayOfWeek) {\n  var result = new Array(7).fill(null);\n  var firstDayOfYear = getFirstDayInTheYear(year, firstDayOfWeek);\n  var firstDayInRelevantWeek = firstDayOfYear + (weekNumber - 1) * WEEK_IN_MS;\n  for (var day = 0; day <= 6; ++day) {\n    result[day] = firstDayInRelevantWeek + DAY_IN_MS * day;\n  }\n  return result;\n}\nexport function getDateObject(date) {\n  'worklet';\n\n  var isNumberType = typeof date === 'number';\n  var d = isNumberType ? new Date(date) : new Date(date.year, date.month, date.day);\n  return {\n    day: d.getDate(),\n    month: d.getMonth(),\n    year: d.getFullYear(),\n    dayOfTheWeek: d.getDay(),\n    timestamp: isNumberType ? date : d.getTime()\n  };\n}\nexport function addMonths(date, count) {\n  'worklet';\n\n  var useFirstDay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (count === 0) {\n    return date;\n  }\n  var d = new Date(date);\n  var month = d.getMonth();\n  d.setMonth(month + count);\n  if (useFirstDay) {\n    d.setDate(1);\n  }\n  return d.getTime();\n}\nexport function addYears(date, count) {\n  'worklet';\n\n  if (count === 0) {\n    return date;\n  }\n  var d = new Date(date);\n  var year = d.getFullYear();\n  return d.setFullYear(year + count);\n}\nexport function getMonthForIndex(index) {\n  'worklet';\n\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  if (index >= 0 && index < 12) {\n    return months[index];\n  }\n}\nfunction getWeekDaysNames(format) {\n  switch (format) {\n    case 1:\n      return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    case 2:\n      return ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n    default:\n      return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  }\n}\nexport function getWeekDayNames() {\n  'worklet';\n\n  var firstDayOfWeek = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var format = arguments.length > 1 ? arguments[1] : undefined;\n  var weekDaysNames = getWeekDaysNames(format);\n  var dayShift = firstDayOfWeek % 7;\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n  return weekDaysNames;\n}\nexport function isPastDate(date) {\n  var today = new Date();\n  var d = new Date(date);\n  if (today.getFullYear() > d.getFullYear()) {\n    return true;\n  }\n  if (today.getFullYear() === d.getFullYear()) {\n    if (today.getMonth() > d.getMonth()) {\n      return true;\n    }\n    if (today.getMonth() === d.getMonth()) {\n      if (today.getDate() > d.getDate()) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nexport function isSameDay(d1, d2) {\n  'worklet';\n\n  var diff = Math.abs(d1 - d2);\n  if (diff > DAY_IN_MS) {\n    return false;\n  }\n  var a = getDateObject(d1);\n  var b = getDateObject(d2);\n  if (a.year === b.year) {\n    if (a.month === b.month) {\n      if (a.day === b.day) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nexport function isSameMonth(d1, d2) {\n  'worklet';\n\n  var timestamp1 = typeof d1 === 'number' ? d1 : d1.timestamp;\n  var timestamp2 = typeof d2 === 'number' ? d2 : d2.timestamp;\n  var diff = Math.abs(timestamp1 - timestamp2);\n  if (diff > DAY_IN_MS * 31) {\n    return false;\n  }\n  var a = typeof d1 === 'number' ? getDateObject(d1) : d1;\n  var b = typeof d2 === 'number' ? getDateObject(d2) : d2;\n  if (a.year === b.year) {\n    if (a.month === b.month) {\n      return true;\n    }\n  }\n  return false;\n}\nexport var _forTesting = {\n  getFirstDayInTheYear: getFirstDayInTheYear\n};","map":{"version":3,"names":["_times","getWeek","HOUR_IN_MS","DAY_IN_MS","WEEK_IN_MS","getNumberOfWeeksInMonth","year","month","firstDayOfWeek","numberOfDaysInMonth","Date","getDate","dayOfTheWeek","getDay","fixedDayOfTheWeek","numberOfWeeks","Math","ceil","getWeekNumbersOfMonth","Error","firstDayOfMonth","firstWeekNumber","weekStartsOn","weekNumbers","i","push","getFirstDayInTheWeek","date","result","timestamp","dayInMonth","getDateObject","day","getFirstDayInTheYear","dayInFirstWeekOfYear","getDaysOfWeekNumber","weekNumber","Array","fill","firstDayOfYear","firstDayInRelevantWeek","isNumberType","d","getMonth","getFullYear","getTime","addMonths","count","useFirstDay","arguments","length","undefined","setMonth","setDate","addYears","setFullYear","getMonthForIndex","index","months","getWeekDaysNames","format","getWeekDayNames","weekDaysNames","dayShift","slice","concat","isPastDate","today","isSameDay","d1","d2","diff","abs","a","b","isSameMonth","timestamp1","timestamp2","_forTesting"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/incubator/Calendar/helpers/DateUtils.js"],"sourcesContent":["import _times from \"lodash/times\";\nimport getWeek from 'date-fns/getWeek';\nexport const HOUR_IN_MS = 60 * 60 * 1000;\nconst DAY_IN_MS = 24 * HOUR_IN_MS;\nconst WEEK_IN_MS = 7 * DAY_IN_MS;\nfunction getNumberOfWeeksInMonth(year, month, firstDayOfWeek) {\n  const numberOfDaysInMonth = new Date(year, month + 1, 0).getDate();\n  const dayOfTheWeek = new Date(year, month, 1).getDay();\n\n  // Modify day in the week based on the first day of the week\n  const fixedDayOfTheWeek = (7 - (firstDayOfWeek - dayOfTheWeek)) % 7;\n  const numberOfWeeks = Math.ceil((numberOfDaysInMonth + fixedDayOfTheWeek) / 7);\n  return numberOfWeeks;\n}\nexport function getWeekNumbersOfMonth(year, month, firstDayOfWeek) {\n  if (month < 0 || month > 11) {\n    throw new Error('getWeekNumbersOfMonth util received an invalid month');\n  }\n  const firstDayOfMonth = new Date(year, month, 1);\n  const firstWeekNumber = getWeek(firstDayOfMonth, {\n    weekStartsOn: firstDayOfWeek\n  });\n  const numberOfWeeks = getNumberOfWeeksInMonth(year, month, firstDayOfWeek);\n  const weekNumbers = [];\n  _times(numberOfWeeks, i => weekNumbers.push(i + firstWeekNumber));\n  return weekNumbers;\n}\nfunction getFirstDayInTheWeek(date, firstDayOfWeek) {\n  let result = date.timestamp - DAY_IN_MS * ((date.dayOfTheWeek - firstDayOfWeek) % 7);\n  const dayInMonth = getDateObject(result).day;\n  if (dayInMonth > 1 && dayInMonth <= 7) {\n    result -= WEEK_IN_MS;\n  }\n  return result;\n}\nfunction getFirstDayInTheYear(year, firstDayOfWeek) {\n  const dayInFirstWeekOfYear = getDateObject({\n    year,\n    month: 0,\n    day: 1\n  });\n  return getFirstDayInTheWeek(dayInFirstWeekOfYear, firstDayOfWeek);\n}\n\n// TODO: Fix to use Default behavior for week number\nexport function getDaysOfWeekNumber(year, weekNumber, firstDayOfWeek) {\n  const result = new Array(7).fill(null);\n  const firstDayOfYear = getFirstDayInTheYear(year, firstDayOfWeek);\n  const firstDayInRelevantWeek = firstDayOfYear + (weekNumber - 1) * WEEK_IN_MS;\n  for (let day = 0; day <= 6; ++day) {\n    result[day] = firstDayInRelevantWeek + DAY_IN_MS * day;\n  }\n  return result;\n}\n\n/* Worklets */\n\nexport function getDateObject(date) {\n  'worklet';\n\n  const isNumberType = typeof date === 'number';\n  const d = isNumberType ? new Date(date) : new Date(date.year, date.month, date.day);\n  return {\n    day: d.getDate(),\n    month: d.getMonth(),\n    year: d.getFullYear(),\n    dayOfTheWeek: d.getDay(),\n    timestamp: isNumberType ? date : d.getTime()\n  };\n}\nexport function addMonths(date, count, useFirstDay = false) {\n  'worklet';\n\n  if (count === 0) {\n    return date;\n  }\n  const d = new Date(date);\n  const month = d.getMonth();\n  d.setMonth(month + count);\n  if (useFirstDay) {\n    // feature: setting the new month to the first day of the month\n    d.setDate(1);\n  }\n  return d.getTime();\n}\nexport function addYears(date, count) {\n  'worklet';\n\n  if (count === 0) {\n    return date;\n  }\n  const d = new Date(date);\n  const year = d.getFullYear();\n  return d.setFullYear(year + count);\n}\nexport function getMonthForIndex(index) {\n  'worklet';\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  if (index >= 0 && index < 12) {\n    return months[index];\n  }\n}\nfunction getWeekDaysNames(format) {\n  //TODO: localize\n  switch (format) {\n    case 1:\n      return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    case 2:\n      return ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n    default:\n      return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  }\n}\nexport function getWeekDayNames(firstDayOfWeek = 0, format) {\n  //TODO: consider 'options' param\n  'worklet';\n\n  let weekDaysNames = getWeekDaysNames(format);\n  const dayShift = firstDayOfWeek % 7;\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n  return weekDaysNames;\n}\nexport function isPastDate(date) {\n  const today = new Date(); // TODO: try to move this somewhere so we don't need to create a new Date each time\n  const d = new Date(date);\n  if (today.getFullYear() > d.getFullYear()) {\n    return true;\n  }\n  if (today.getFullYear() === d.getFullYear()) {\n    if (today.getMonth() > d.getMonth()) {\n      return true;\n    }\n    if (today.getMonth() === d.getMonth()) {\n      if (today.getDate() > d.getDate()) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nexport function isSameDay(d1, d2) {\n  'worklet';\n\n  const diff = Math.abs(d1 - d2);\n  if (diff > DAY_IN_MS) {\n    return false;\n  }\n  const a = getDateObject(d1);\n  const b = getDateObject(d2);\n  if (a.year === b.year) {\n    if (a.month === b.month) {\n      if (a.day === b.day) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nexport function isSameMonth(d1, d2) {\n  'worklet';\n\n  const timestamp1 = typeof d1 === 'number' ? d1 : d1.timestamp;\n  const timestamp2 = typeof d2 === 'number' ? d2 : d2.timestamp;\n  const diff = Math.abs(timestamp1 - timestamp2);\n  if (diff > DAY_IN_MS * 31) {\n    return false;\n  }\n  const a = typeof d1 === 'number' ? getDateObject(d1) : d1;\n  const b = typeof d2 === 'number' ? getDateObject(d2) : d2;\n  if (a.year === b.year) {\n    if (a.month === b.month) {\n      return true;\n    }\n  }\n  return false;\n}\nexport const _forTesting = {\n  getFirstDayInTheYear\n}; // exporting private functions for testing only"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}