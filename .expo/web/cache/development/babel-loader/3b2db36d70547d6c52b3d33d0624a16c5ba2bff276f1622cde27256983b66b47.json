{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"modifiers\", \"containerProps\", \"fieldStyle\", \"dynamicFieldStyle\", \"containerStyle\", \"floatingPlaceholder\", \"floatingPlaceholderColor\", \"floatingPlaceholderStyle\", \"floatOnFocus\", \"placeholderTextColor\", \"hint\", \"label\", \"labelColor\", \"labelStyle\", \"labelProps\", \"leadingAccessory\", \"trailingAccessory\", \"bottomAccessory\", \"enableErrors\", \"validationMessageStyle\", \"validationMessagePosition\", \"retainValidationSpace\", \"showCharCounter\", \"charCounterStyle\", \"placeholder\", \"children\", \"centered\", \"readonly\", \"showMandatoryIndication\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _omit from \"lodash/omit\";\nimport _trim from \"lodash/trim\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { asBaseComponent, Constants, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport { useMeasure } from \"../../hooks\";\nimport { TextFieldProps, ValidationMessagePosition, FieldContextType, TextFieldMethods, TextFieldRef, Validator, ValidationMessagePositionType, MandatoryIndication } from \"./types\";\nimport { shouldHidePlaceholder } from \"./Presenter\";\nimport Input from \"./Input\";\nimport ValidationMessage from \"./ValidationMessage\";\nimport Label from \"./Label\";\nimport FieldContext from \"./FieldContext\";\nimport useFieldState from \"./useFieldState\";\nimport usePreset from \"./usePreset\";\nimport FloatingPlaceholder from \"./FloatingPlaceholder\";\nimport CharCounter from \"./CharCounter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TextField = function TextField(props) {\n  var _usePreset = usePreset(props),\n    modifiers = _usePreset.modifiers,\n    containerProps = _usePreset.containerProps,\n    fieldStyleProp = _usePreset.fieldStyle,\n    dynamicFieldStyle = _usePreset.dynamicFieldStyle,\n    containerStyle = _usePreset.containerStyle,\n    floatingPlaceholder = _usePreset.floatingPlaceholder,\n    floatingPlaceholderColor = _usePreset.floatingPlaceholderColor,\n    floatingPlaceholderStyle = _usePreset.floatingPlaceholderStyle,\n    floatOnFocus = _usePreset.floatOnFocus,\n    placeholderTextColor = _usePreset.placeholderTextColor,\n    hint = _usePreset.hint,\n    label = _usePreset.label,\n    labelColor = _usePreset.labelColor,\n    labelStyle = _usePreset.labelStyle,\n    labelProps = _usePreset.labelProps,\n    leadingAccessory = _usePreset.leadingAccessory,\n    trailingAccessory = _usePreset.trailingAccessory,\n    bottomAccessory = _usePreset.bottomAccessory,\n    enableErrors = _usePreset.enableErrors,\n    validationMessageStyle = _usePreset.validationMessageStyle,\n    _usePreset$validation = _usePreset.validationMessagePosition,\n    validationMessagePosition = _usePreset$validation === void 0 ? ValidationMessagePosition.BOTTOM : _usePreset$validation,\n    _usePreset$retainVali = _usePreset.retainValidationSpace,\n    retainValidationSpace = _usePreset$retainVali === void 0 ? true : _usePreset$retainVali,\n    showCharCounter = _usePreset.showCharCounter,\n    charCounterStyle = _usePreset.charCounterStyle,\n    placeholder = _usePreset.placeholder,\n    children = _usePreset.children,\n    centered = _usePreset.centered,\n    _usePreset$readonly = _usePreset.readonly,\n    readonly = _usePreset$readonly === void 0 ? false : _usePreset$readonly,\n    showMandatoryIndication = _usePreset.showMandatoryIndication,\n    others = _objectWithoutProperties(_usePreset, _excluded);\n  var _useMeasure = useMeasure(),\n    leadingAccessoryRef = _useMeasure.ref,\n    leadingAccessoryMeasurements = _useMeasure.measurements;\n  var _useFieldState = useFieldState(others),\n    onFocus = _useFieldState.onFocus,\n    onBlur = _useFieldState.onBlur,\n    onChangeText = _useFieldState.onChangeText,\n    fieldState = _useFieldState.fieldState,\n    validateField = _useFieldState.validateField,\n    checkValidity = _useFieldState.checkValidity;\n  var context = useMemo(function () {\n    return _objectSpread(_objectSpread({}, fieldState), {}, {\n      disabled: others.editable === false,\n      readonly: readonly,\n      validateField: validateField,\n      checkValidity: checkValidity\n    });\n  }, [fieldState, others.editable, readonly, validateField, checkValidity]);\n  var leadingAccessoryClone = useMemo(function () {\n    if (leadingAccessory) {\n      return React.cloneElement(leadingAccessory, {\n        ref: leadingAccessoryRef\n      });\n    }\n  }, [leadingAccessory]);\n  var margins = modifiers.margins,\n    paddings = modifiers.paddings,\n    typography = modifiers.typography,\n    positionStyle = modifiers.positionStyle,\n    color = modifiers.color;\n  var typographyStyle = useMemo(function () {\n    return _omit(typography, 'lineHeight');\n  }, [typography]);\n  var colorStyle = useMemo(function () {\n    return color && {\n      color: color\n    };\n  }, [color]);\n  var _floatingPlaceholderStyle = useMemo(function () {\n    return [typographyStyle, floatingPlaceholderStyle];\n  }, [typographyStyle, floatingPlaceholderStyle]);\n  var fieldStyle = [fieldStyleProp, dynamicFieldStyle == null ? void 0 : dynamicFieldStyle(context, {\n    preset: props.preset\n  })];\n  var hidePlaceholder = shouldHidePlaceholder(props, fieldState.isFocused);\n  var retainTopMessageSpace = !floatingPlaceholder && _isEmpty(_trim(label));\n  var centeredContainerStyle = centered && styles.centeredContainer;\n  var _labelStyle = useMemo(function () {\n    return centered ? [labelStyle, styles.centeredLabel] : labelStyle;\n  }, [labelStyle, centered]);\n  var _validationMessageStyle = useMemo(function () {\n    return centered ? [validationMessageStyle, styles.centeredValidationMessage] : validationMessageStyle;\n  }, [validationMessageStyle, centered]);\n  var hasValue = fieldState.value !== undefined;\n  var inputStyle = useMemo(function () {\n    return [typographyStyle, colorStyle, others.style, hasValue && centered && styles.centeredInput];\n  }, [typographyStyle, colorStyle, others.style, centered, hasValue]);\n  var dummyPlaceholderStyle = useMemo(function () {\n    return [inputStyle, styles.dummyPlaceholder];\n  }, [inputStyle]);\n  return _jsx(FieldContext.Provider, {\n    value: context,\n    children: _jsxs(View, _objectSpread(_objectSpread({}, containerProps), {}, {\n      style: [margins, positionStyle, containerStyle, centeredContainerStyle],\n      children: [_jsx(Label, {\n        label: label,\n        labelColor: labelColor,\n        labelStyle: _labelStyle,\n        labelProps: labelProps,\n        floatingPlaceholder: floatingPlaceholder,\n        validationMessagePosition: validationMessagePosition,\n        testID: `${props.testID}.label`,\n        showMandatoryIndication: showMandatoryIndication\n      }), validationMessagePosition === ValidationMessagePosition.TOP && _jsx(ValidationMessage, {\n        enableErrors: enableErrors,\n        validate: others.validate,\n        validationMessage: others.validationMessage,\n        validationMessageStyle: _validationMessageStyle,\n        retainValidationSpace: retainValidationSpace && retainTopMessageSpace,\n        testID: `${props.testID}.validationMessage`\n      }), _jsxs(View, {\n        style: [paddings, fieldStyle],\n        row: true,\n        centerV: true,\n        centerH: centered,\n        children: [leadingAccessoryClone, children || _jsxs(View, _objectSpread(_objectSpread({}, Constants.isWeb ? {\n          flex: true\n        } : {\n          flexG: true\n        }), {}, {\n          children: [Constants.isAndroid && centered && _jsx(Text, {\n            \"marginR-s1\": true,\n            style: dummyPlaceholderStyle,\n            children: placeholder\n          }), floatingPlaceholder && _jsx(FloatingPlaceholder, {\n            defaultValue: others.defaultValue,\n            placeholder: placeholder,\n            floatingPlaceholderStyle: _floatingPlaceholderStyle,\n            floatingPlaceholderColor: floatingPlaceholderColor,\n            floatOnFocus: floatOnFocus,\n            validationMessagePosition: validationMessagePosition,\n            extraOffset: leadingAccessoryMeasurements == null ? void 0 : leadingAccessoryMeasurements.width,\n            testID: `${props.testID}.floatingPlaceholder`,\n            showMandatoryIndication: showMandatoryIndication\n          }), _jsx(Input, _objectSpread(_objectSpread({\n            placeholderTextColor: hidePlaceholder ? 'transparent' : placeholderTextColor,\n            value: fieldState.value\n          }, others), {}, {\n            readonly: readonly,\n            style: inputStyle,\n            onFocus: onFocus,\n            onBlur: onBlur,\n            onChangeText: onChangeText,\n            placeholder: placeholder,\n            hint: hint,\n            showMandatoryIndication: showMandatoryIndication && !label\n          }))]\n        })), trailingAccessory]\n      }), _jsxs(View, {\n        row: true,\n        spread: true,\n        children: [validationMessagePosition === ValidationMessagePosition.BOTTOM && _jsx(ValidationMessage, {\n          enableErrors: enableErrors,\n          validate: others.validate,\n          validationMessage: others.validationMessage,\n          validationMessageStyle: _validationMessageStyle,\n          retainValidationSpace: retainValidationSpace,\n          testID: `${props.testID}.validationMessage`\n        }), bottomAccessory, showCharCounter && _jsx(CharCounter, {\n          maxLength: others.maxLength,\n          charCounterStyle: charCounterStyle,\n          testID: `${props.testID}.charCounter`\n        })]\n      })]\n    }))\n  });\n};\nTextField.displayName = 'TextField';\nTextField.validationMessagePositions = ValidationMessagePosition;\nexport { TextFieldProps, FieldContextType, TextFieldMethods, TextFieldRef, ValidationMessagePosition as TextFieldValidationMessagePosition, Validator as TextFieldValidator, ValidationMessagePositionType as TextFieldValidationMessagePositionType, MandatoryIndication as TextFieldMandatoryIndication };\nexport default asBaseComponent(forwardRef(TextField), {\n  modifiersOptions: {\n    margins: true,\n    paddings: true,\n    typography: true,\n    position: true,\n    color: true\n  }\n});\nvar styles = StyleSheet.create({\n  centeredContainer: {\n    alignSelf: 'center'\n  },\n  centeredLabel: {\n    textAlign: 'center'\n  },\n  centeredInput: {\n    textAlign: 'center'\n  },\n  centeredValidationMessage: {\n    textAlign: 'center'\n  },\n  dummyPlaceholder: {\n    height: 0\n  }\n});","map":{"version":3,"names":["_omit","_trim","_isEmpty","React","useMemo","StyleSheet","asBaseComponent","Constants","forwardRef","View","Text","useMeasure","TextFieldProps","ValidationMessagePosition","FieldContextType","TextFieldMethods","TextFieldRef","Validator","ValidationMessagePositionType","MandatoryIndication","shouldHidePlaceholder","Input","ValidationMessage","Label","FieldContext","useFieldState","usePreset","FloatingPlaceholder","CharCounter","jsx","_jsx","jsxs","_jsxs","TextField","props","_usePreset","modifiers","containerProps","fieldStyleProp","fieldStyle","dynamicFieldStyle","containerStyle","floatingPlaceholder","floatingPlaceholderColor","floatingPlaceholderStyle","floatOnFocus","placeholderTextColor","hint","label","labelColor","labelStyle","labelProps","leadingAccessory","trailingAccessory","bottomAccessory","enableErrors","validationMessageStyle","_usePreset$validation","validationMessagePosition","BOTTOM","_usePreset$retainVali","retainValidationSpace","showCharCounter","charCounterStyle","placeholder","children","centered","_usePreset$readonly","readonly","showMandatoryIndication","others","_objectWithoutProperties","_excluded","_useMeasure","leadingAccessoryRef","ref","leadingAccessoryMeasurements","measurements","_useFieldState","onFocus","onBlur","onChangeText","fieldState","validateField","checkValidity","context","_objectSpread","disabled","editable","leadingAccessoryClone","cloneElement","margins","paddings","typography","positionStyle","color","typographyStyle","colorStyle","_floatingPlaceholderStyle","preset","hidePlaceholder","isFocused","retainTopMessageSpace","centeredContainerStyle","styles","centeredContainer","_labelStyle","centeredLabel","_validationMessageStyle","centeredValidationMessage","hasValue","value","undefined","inputStyle","style","centeredInput","dummyPlaceholderStyle","dummyPlaceholder","Provider","testID","TOP","validate","validationMessage","row","centerV","centerH","isWeb","flex","flexG","isAndroid","defaultValue","extraOffset","width","spread","maxLength","displayName","validationMessagePositions","TextFieldValidationMessagePosition","TextFieldValidator","TextFieldValidationMessagePositionType","TextFieldMandatoryIndication","modifiersOptions","position","create","alignSelf","textAlign","height"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/textField/index.js"],"sourcesContent":["import _omit from \"lodash/omit\";\nimport _trim from \"lodash/trim\";\nimport _isEmpty from \"lodash/isEmpty\";\n/**\n * Known issues with React Native TextInput component\n * 1. iOS - input inner padding is off in multiline mode\n * 2. Android - input has minHeight that can't be overridden with zero padding (unlike iOS)\n * 3. Passing typography preset that includes lineHeight usually cause alignment issues with\n * other elements (leading/trailing accessories). It usually best to set lineHeight with undefined\n */\nimport React, { useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { asBaseComponent, Constants, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport { useMeasure } from \"../../hooks\";\nimport { TextFieldProps, ValidationMessagePosition, FieldContextType, TextFieldMethods, TextFieldRef, Validator, ValidationMessagePositionType, MandatoryIndication } from \"./types\";\nimport { shouldHidePlaceholder } from \"./Presenter\";\nimport Input from \"./Input\";\nimport ValidationMessage from \"./ValidationMessage\";\nimport Label from \"./Label\";\nimport FieldContext from \"./FieldContext\";\nimport useFieldState from \"./useFieldState\";\nimport usePreset from \"./usePreset\";\nimport FloatingPlaceholder from \"./FloatingPlaceholder\";\nimport CharCounter from \"./CharCounter\";\n/**\n * @description: A controlled, customizable TextField with validation support\n * @extends: TextInput\n * @extendsLink: https://reactnative.dev/docs/textinput\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/IncubatorTextFieldScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/FloatingPlaceholder.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/Validation.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/ColorByState.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/CharCounter.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/Hint.gif?raw=true\n */\nconst TextField = props => {\n  const {\n    modifiers,\n    // General\n    containerProps,\n    fieldStyle: fieldStyleProp,\n    dynamicFieldStyle,\n    containerStyle,\n    floatingPlaceholder,\n    floatingPlaceholderColor,\n    floatingPlaceholderStyle,\n    floatOnFocus,\n    placeholderTextColor,\n    hint,\n    // Label\n    label,\n    labelColor,\n    labelStyle,\n    labelProps,\n    // Accessory Buttons\n    leadingAccessory,\n    trailingAccessory,\n    bottomAccessory,\n    // Validation\n    enableErrors,\n    // TODO: rename to enableValidation\n    validationMessageStyle,\n    validationMessagePosition = ValidationMessagePosition.BOTTOM,\n    retainValidationSpace = true,\n    // Char Counter\n    showCharCounter,\n    charCounterStyle,\n    // Input\n    placeholder,\n    children,\n    centered,\n    readonly = false,\n    showMandatoryIndication,\n    ...others\n  } = usePreset(props);\n  const {\n    ref: leadingAccessoryRef,\n    measurements: leadingAccessoryMeasurements\n  } = useMeasure();\n  const {\n    onFocus,\n    onBlur,\n    onChangeText,\n    fieldState,\n    validateField,\n    checkValidity\n  } = useFieldState(others);\n  const context = useMemo(() => {\n    return {\n      ...fieldState,\n      disabled: others.editable === false,\n      readonly,\n      validateField,\n      checkValidity\n    };\n  }, [fieldState, others.editable, readonly, validateField, checkValidity]);\n  const leadingAccessoryClone = useMemo(() => {\n    if (leadingAccessory) {\n      return React.cloneElement(leadingAccessory, {\n        ref: leadingAccessoryRef\n      });\n    }\n  }, [leadingAccessory]);\n  const {\n    margins,\n    paddings,\n    typography,\n    positionStyle,\n    color\n  } = modifiers;\n  const typographyStyle = useMemo(() => _omit(typography, 'lineHeight'), [typography]);\n  const colorStyle = useMemo(() => color && {\n    color\n  }, [color]);\n  const _floatingPlaceholderStyle = useMemo(() => [typographyStyle, floatingPlaceholderStyle], [typographyStyle, floatingPlaceholderStyle]);\n  const fieldStyle = [fieldStyleProp, dynamicFieldStyle?.(context, {\n    preset: props.preset\n  })];\n  const hidePlaceholder = shouldHidePlaceholder(props, fieldState.isFocused);\n  const retainTopMessageSpace = !floatingPlaceholder && _isEmpty(_trim(label));\n  const centeredContainerStyle = centered && styles.centeredContainer;\n  const _labelStyle = useMemo(() => centered ? [labelStyle, styles.centeredLabel] : labelStyle, [labelStyle, centered]);\n  const _validationMessageStyle = useMemo(() => {\n    return centered ? [validationMessageStyle, styles.centeredValidationMessage] : validationMessageStyle;\n  }, [validationMessageStyle, centered]);\n  const hasValue = fieldState.value !== undefined;\n  const inputStyle = useMemo(() => {\n    return [typographyStyle, colorStyle, others.style, hasValue && centered && styles.centeredInput];\n  }, [typographyStyle, colorStyle, others.style, centered, hasValue]);\n  const dummyPlaceholderStyle = useMemo(() => {\n    return [inputStyle, styles.dummyPlaceholder];\n  }, [inputStyle]);\n  return <FieldContext.Provider value={context}>\n      <View {...containerProps} style={[margins, positionStyle, containerStyle, centeredContainerStyle]}>\n        <Label label={label} labelColor={labelColor} labelStyle={_labelStyle} labelProps={labelProps} floatingPlaceholder={floatingPlaceholder} validationMessagePosition={validationMessagePosition} testID={`${props.testID}.label`} showMandatoryIndication={showMandatoryIndication} />\n        {validationMessagePosition === ValidationMessagePosition.TOP && <ValidationMessage enableErrors={enableErrors} validate={others.validate} validationMessage={others.validationMessage} validationMessageStyle={_validationMessageStyle} retainValidationSpace={retainValidationSpace && retainTopMessageSpace} testID={`${props.testID}.validationMessage`} />}\n        <View style={[paddings, fieldStyle]} row centerV centerH={centered}>\n          {/* <View row centerV> */}\n          {leadingAccessoryClone}\n\n          {/* Note: We're passing flexG to the View to support properly inline behavior - so the input will be rendered correctly in a row container.\n            Known Issue: This slightly push the trailing accessory when entering a long text\n           */}\n          {children || <View {...Constants.isWeb ? {\n          flex: true\n        } : {\n          flexG: true\n        }}>\n              {/* Note: Render dummy placeholder for Android center issues */}\n              {Constants.isAndroid && centered && <Text marginR-s1 style={dummyPlaceholderStyle}>\n                  {placeholder}\n                </Text>}\n              {floatingPlaceholder && <FloatingPlaceholder defaultValue={others.defaultValue} placeholder={placeholder} floatingPlaceholderStyle={_floatingPlaceholderStyle} floatingPlaceholderColor={floatingPlaceholderColor} floatOnFocus={floatOnFocus} validationMessagePosition={validationMessagePosition} extraOffset={leadingAccessoryMeasurements?.width} testID={`${props.testID}.floatingPlaceholder`} showMandatoryIndication={showMandatoryIndication} />}\n              <Input placeholderTextColor={hidePlaceholder ? 'transparent' : placeholderTextColor} value={fieldState.value} {...others} readonly={readonly} style={inputStyle} onFocus={onFocus} onBlur={onBlur} onChangeText={onChangeText} placeholder={placeholder} hint={hint} showMandatoryIndication={showMandatoryIndication && !label} />\n            </View>}\n          {trailingAccessory}\n          {/* </View> */}\n        </View>\n        <View row spread>\n          {validationMessagePosition === ValidationMessagePosition.BOTTOM && <ValidationMessage enableErrors={enableErrors} validate={others.validate} validationMessage={others.validationMessage} validationMessageStyle={_validationMessageStyle} retainValidationSpace={retainValidationSpace} testID={`${props.testID}.validationMessage`} />}\n          {bottomAccessory}\n          {showCharCounter && <CharCounter maxLength={others.maxLength} charCounterStyle={charCounterStyle} testID={`${props.testID}.charCounter`} />}\n        </View>\n      </View>\n    </FieldContext.Provider>;\n};\nTextField.displayName = 'TextField';\nTextField.validationMessagePositions = ValidationMessagePosition;\nexport { TextFieldProps, FieldContextType, TextFieldMethods, TextFieldRef, ValidationMessagePosition as TextFieldValidationMessagePosition, Validator as TextFieldValidator, ValidationMessagePositionType as TextFieldValidationMessagePositionType, MandatoryIndication as TextFieldMandatoryIndication };\nexport default asBaseComponent(forwardRef(TextField), {\n  modifiersOptions: {\n    margins: true,\n    paddings: true,\n    typography: true,\n    position: true,\n    color: true\n  }\n});\nconst styles = StyleSheet.create({\n  centeredContainer: {\n    alignSelf: 'center'\n  },\n  centeredLabel: {\n    textAlign: 'center'\n  },\n  centeredInput: {\n    textAlign: 'center'\n  },\n  centeredValidationMessage: {\n    textAlign: 'center'\n  },\n  dummyPlaceholder: {\n    height: 0\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}