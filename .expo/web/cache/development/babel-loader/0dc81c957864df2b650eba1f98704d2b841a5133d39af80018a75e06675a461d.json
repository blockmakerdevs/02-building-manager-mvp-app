{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _map from \"lodash/map\";\nimport React, { useCallback } from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { runOnJS, useAnimatedReaction, useAnimatedStyle, useSharedValue, withSpring, withTiming } from 'react-native-reanimated';\nimport { useDidUpdate } from \"../../hooks\";\nimport { animationConfig } from \"./usePresenter\";\nimport View from \"../view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction SortableItem(props) {\n  var data = props.data,\n    id = props.id,\n    itemsOrder = props.itemsOrder,\n    onChange = props.onChange,\n    style = props.style,\n    getItemOrderById = props.getItemOrderById,\n    getOrderByPosition = props.getOrderByPosition,\n    getIdByItemOrder = props.getIdByItemOrder,\n    getTranslationByOrderChange = props.getTranslationByOrderChange,\n    updateItemLayout = props.updateItemLayout;\n  var initialIndex = useSharedValue(_map(data, 'id').indexOf(id));\n  var currIndex = useSharedValue(initialIndex.value);\n  var translateX = useSharedValue(0);\n  var translateY = useSharedValue(0);\n  var isDragging = useSharedValue(false);\n  var tempItemsOrder = useSharedValue(itemsOrder.value);\n  var tempTranslateX = useSharedValue(0);\n  var tempTranslateY = useSharedValue(0);\n  useDidUpdate(function () {\n    var newItemIndex = _map(data, 'id').indexOf(id);\n    initialIndex.value = newItemIndex;\n    currIndex.value = newItemIndex;\n    translateX.value = 0;\n    translateY.value = 0;\n  }, [data]);\n  useAnimatedReaction(function () {\n    return getItemOrderById(itemsOrder.value, id);\n  }, function (newOrder, prevOrder) {\n    if (prevOrder === null || newOrder === prevOrder) {\n      return;\n    }\n    currIndex.value = newOrder;\n    if (!isDragging.value) {\n      var translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n      translateX.value = withTiming(translation.x, animationConfig);\n      translateY.value = withTiming(translation.y, animationConfig);\n    }\n  }, []);\n  var onLayout = useCallback(function (event) {\n    'worklet';\n\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    updateItemLayout({\n      width: width,\n      height: height\n    });\n  }, []);\n  var dragOnLongPressGesture = Gesture.Pan().activateAfterLongPress(250).onStart(function () {\n    isDragging.value = true;\n    var translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n    translateX.value = translation.x;\n    translateY.value = translation.y;\n    tempTranslateX.value = translateX.value;\n    tempTranslateY.value = translateY.value;\n    tempItemsOrder.value = itemsOrder.value;\n  }).onUpdate(function (event) {\n    translateX.value = tempTranslateX.value + event.translationX;\n    translateY.value = tempTranslateY.value + event.translationY;\n    var oldOrder = getItemOrderById(itemsOrder.value, id);\n    var newOrder = getOrderByPosition(translateX.value, translateY.value) + initialIndex.value;\n    if (oldOrder !== newOrder) {\n      var itemIdToSwap = getIdByItemOrder(itemsOrder.value, newOrder);\n      if (itemIdToSwap !== undefined) {\n        var newItemsOrder = _toConsumableArray(itemsOrder.value);\n        newItemsOrder[newOrder] = id;\n        newItemsOrder[oldOrder] = itemIdToSwap;\n        itemsOrder.value = newItemsOrder;\n      }\n    }\n  }).onEnd(function () {\n    var translation = getTranslationByOrderChange(getItemOrderById(itemsOrder.value, id), getItemOrderById(tempItemsOrder.value, id));\n    translateX.value = withTiming(tempTranslateX.value + translation.x, animationConfig);\n    translateY.value = withTiming(tempTranslateY.value + translation.y, animationConfig);\n  }).onFinalize(function () {\n    if (isDragging.value) {\n      isDragging.value = false;\n      if (tempItemsOrder.value.toString() !== itemsOrder.value.toString()) {\n        runOnJS(onChange)();\n      }\n    }\n  });\n  var animatedStyle = useAnimatedStyle(function () {\n    var scale = withSpring(isDragging.value ? 1.1 : 1);\n    var zIndex = isDragging.value ? 100 : withTiming(0, animationConfig);\n    return {\n      zIndex: zIndex,\n      transform: [{\n        translateX: translateX.value\n      }, {\n        translateY: translateY.value\n      }, {\n        scale: scale\n      }]\n    };\n  });\n  return _jsx(View, {\n    reanimated: true,\n    style: [style, animatedStyle],\n    onLayout: onLayout,\n    children: _jsx(GestureDetector, {\n      gesture: dragOnLongPressGesture,\n      children: _jsx(View, {\n        children: props.children\n      })\n    })\n  });\n}\nexport default React.memo(SortableItem);","map":{"version":3,"names":["_map","React","useCallback","Gesture","GestureDetector","runOnJS","useAnimatedReaction","useAnimatedStyle","useSharedValue","withSpring","withTiming","useDidUpdate","animationConfig","View","jsx","_jsx","SortableItem","props","data","id","itemsOrder","onChange","style","getItemOrderById","getOrderByPosition","getIdByItemOrder","getTranslationByOrderChange","updateItemLayout","initialIndex","indexOf","currIndex","value","translateX","translateY","isDragging","tempItemsOrder","tempTranslateX","tempTranslateY","newItemIndex","newOrder","prevOrder","translation","x","y","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","width","height","dragOnLongPressGesture","Pan","activateAfterLongPress","onStart","onUpdate","translationX","translationY","oldOrder","itemIdToSwap","undefined","newItemsOrder","_toConsumableArray","onEnd","onFinalize","toString","animatedStyle","scale","zIndex","transform","reanimated","children","gesture","memo"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/sortableGridList/SortableItem.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport React, { useCallback } from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { runOnJS, useAnimatedReaction, useAnimatedStyle, useSharedValue, withSpring, withTiming } from 'react-native-reanimated';\nimport { useDidUpdate } from \"../../hooks\";\nimport { animationConfig } from \"./usePresenter\";\nimport View from \"../view\";\nfunction SortableItem(props) {\n  const {\n    data,\n    id,\n    itemsOrder,\n    onChange,\n    style,\n    getItemOrderById,\n    getOrderByPosition,\n    getIdByItemOrder,\n    getTranslationByOrderChange,\n    updateItemLayout\n  } = props;\n  const initialIndex = useSharedValue(_map(data, 'id').indexOf(id));\n  const currIndex = useSharedValue(initialIndex.value);\n  const translateX = useSharedValue(0);\n  const translateY = useSharedValue(0);\n  const isDragging = useSharedValue(false);\n  const tempItemsOrder = useSharedValue(itemsOrder.value);\n  const tempTranslateX = useSharedValue(0);\n  const tempTranslateY = useSharedValue(0);\n\n  // const dataManuallyChanged = useSharedValue(false);\n\n  useDidUpdate(() => {\n    // dataManuallyChanged.value = true;\n    const newItemIndex = _map(data, 'id').indexOf(id);\n    initialIndex.value = newItemIndex;\n    currIndex.value = newItemIndex;\n    translateX.value = 0;\n    translateY.value = 0;\n  }, [data]);\n\n  // useAnimatedReaction(() => itemsOrder.value,\n  //   (currItemsOrder, prevItemsOrder) => {\n  //     // Note: Unfortunately itemsOrder sharedValue is being initialized on each render\n  //     // Therefore I added this extra check here that compares current and previous values\n  //     // See open issue: https://github.com/software-mansion/react-native-reanimated/issues/3224\n  //     if (prevItemsOrder === null || currItemsOrder.join(',') === prevItemsOrder.join(',')) {\n  //       return;\n  //     } else {\n  //       const newOrder = getItemOrderById(currItemsOrder, id);\n  //       const prevOrder = getItemOrderById(prevItemsOrder, id);\n\n  //       /* In case the order of the item has returned back to its initial index we reset its position */\n  //       if (newOrder === initialIndex.value) {\n  //         /* Reset without an animation when the change is due to manual data change */\n  //         if (dataManuallyChanged.value) {\n  //           translateX.value = 0;\n  //           translateY.value = 0;\n  //           /* Reset with an animation when the change id due to user reordering */\n  //         } else {\n  //           translateX.value = withTiming(0, animationConfig);\n  //           translateY.value = withTiming(0, animationConfig);\n  //         }\n  //         dataManuallyChanged.value = false;\n  //         /* Handle an order change, animate item to its new position  */\n  //       } else if (newOrder !== prevOrder) {\n  //         // const translation = getTranslationByOrderChange(newOrder, prevOrder);\n  //         const translation = getTranslationByOrderChange(newOrder, initialIndex.value);\n  //         translateX.value = withTiming(/* translateX.value +  */translation.x, animationConfig);\n  //         translateY.value = withTiming(/* translateY.value +  */translation.y, animationConfig);\n  //         // translateX.value = withTiming(0, animationConfig);\n  //         // translateY.value = withTiming(0, animationConfig);\n  //       }\n  //     }\n  //   });\n\n  useAnimatedReaction(() => getItemOrderById(itemsOrder.value, id), (newOrder, prevOrder) => {\n    if (prevOrder === null || newOrder === prevOrder) {\n      return;\n    }\n    currIndex.value = newOrder;\n    if (!isDragging.value) {\n      const translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n      translateX.value = withTiming(translation.x, animationConfig);\n      translateY.value = withTiming(translation.y, animationConfig);\n    }\n  }, []);\n  const onLayout = useCallback(event => {\n    'worklet';\n\n    const {\n      width,\n      height\n    } = event.nativeEvent.layout;\n    updateItemLayout({\n      width,\n      height\n    });\n  }, []);\n  const dragOnLongPressGesture = Gesture.Pan().activateAfterLongPress(250).onStart(() => {\n    isDragging.value = true;\n    const translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n    translateX.value = translation.x;\n    translateY.value = translation.y;\n    tempTranslateX.value = translateX.value;\n    tempTranslateY.value = translateY.value;\n    tempItemsOrder.value = itemsOrder.value;\n  }).onUpdate(event => {\n    translateX.value = tempTranslateX.value + event.translationX;\n    translateY.value = tempTranslateY.value + event.translationY;\n\n    // Swapping items\n    const oldOrder = getItemOrderById(itemsOrder.value, id);\n    const newOrder = getOrderByPosition(translateX.value, translateY.value) + initialIndex.value;\n    if (oldOrder !== newOrder) {\n      const itemIdToSwap = getIdByItemOrder(itemsOrder.value, newOrder);\n      if (itemIdToSwap !== undefined) {\n        const newItemsOrder = [...itemsOrder.value];\n        newItemsOrder[newOrder] = id;\n        newItemsOrder[oldOrder] = itemIdToSwap;\n        itemsOrder.value = newItemsOrder;\n      }\n    }\n  }).onEnd(() => {\n    const translation = getTranslationByOrderChange(getItemOrderById(itemsOrder.value, id), getItemOrderById(tempItemsOrder.value, id));\n    translateX.value = withTiming(tempTranslateX.value + translation.x, animationConfig);\n    translateY.value = withTiming(tempTranslateY.value + translation.y, animationConfig);\n  }).onFinalize(() => {\n    if (isDragging.value) {\n      isDragging.value = false;\n      if (tempItemsOrder.value.toString() !== itemsOrder.value.toString()) {\n        runOnJS(onChange)();\n      }\n    }\n  });\n\n  // @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881)\n  const animatedStyle = useAnimatedStyle(() => {\n    const scale = withSpring(isDragging.value ? 1.1 : 1);\n    const zIndex = isDragging.value ? 100 : withTiming(0, animationConfig);\n    return {\n      zIndex,\n      transform: [{\n        translateX: translateX.value\n      }, {\n        translateY: translateY.value\n      }, {\n        scale\n      }]\n    };\n  });\n  return (\n    // @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881)\n    <View reanimated style={[style, animatedStyle]} onLayout={onLayout}>\n      <GestureDetector gesture={dragOnLongPressGesture}>\n        <View>{props.children}</View>\n      </GestureDetector>\n    </View>\n  );\n}\nexport default React.memo(SortableItem);"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,OAAO,EAAEC,eAAe,QAAQ,8BAA8B;AACvE,SAASC,OAAO,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,UAAU,EAAEC,UAAU,QAAQ,yBAAyB;AAChI,SAASC,YAAY;AACrB,SAASC,eAAe;AACxB,OAAOC,IAAI;AAAgB,SAAAC,GAAA,IAAAC,IAAA;AAC3B,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,IACEC,IAAI,GAUFD,KAAK,CAVPC,IAAI;IACJC,EAAE,GASAF,KAAK,CATPE,EAAE;IACFC,UAAU,GAQRH,KAAK,CARPG,UAAU;IACVC,QAAQ,GAONJ,KAAK,CAPPI,QAAQ;IACRC,KAAK,GAMHL,KAAK,CANPK,KAAK;IACLC,gBAAgB,GAKdN,KAAK,CALPM,gBAAgB;IAChBC,kBAAkB,GAIhBP,KAAK,CAJPO,kBAAkB;IAClBC,gBAAgB,GAGdR,KAAK,CAHPQ,gBAAgB;IAChBC,2BAA2B,GAEzBT,KAAK,CAFPS,2BAA2B;IAC3BC,gBAAgB,GACdV,KAAK,CADPU,gBAAgB;EAElB,IAAMC,YAAY,GAAGpB,cAAc,CAACR,IAAI,CAACkB,IAAI,EAAE,IAAI,CAAC,CAACW,OAAO,CAACV,EAAE,CAAC,CAAC;EACjE,IAAMW,SAAS,GAAGtB,cAAc,CAACoB,YAAY,CAACG,KAAK,CAAC;EACpD,IAAMC,UAAU,GAAGxB,cAAc,CAAC,CAAC,CAAC;EACpC,IAAMyB,UAAU,GAAGzB,cAAc,CAAC,CAAC,CAAC;EACpC,IAAM0B,UAAU,GAAG1B,cAAc,CAAC,KAAK,CAAC;EACxC,IAAM2B,cAAc,GAAG3B,cAAc,CAACY,UAAU,CAACW,KAAK,CAAC;EACvD,IAAMK,cAAc,GAAG5B,cAAc,CAAC,CAAC,CAAC;EACxC,IAAM6B,cAAc,GAAG7B,cAAc,CAAC,CAAC,CAAC;EAIxCG,YAAY,CAAC,YAAM;IAEjB,IAAM2B,YAAY,GAAGtC,IAAI,CAACkB,IAAI,EAAE,IAAI,CAAC,CAACW,OAAO,CAACV,EAAE,CAAC;IACjDS,YAAY,CAACG,KAAK,GAAGO,YAAY;IACjCR,SAAS,CAACC,KAAK,GAAGO,YAAY;IAC9BN,UAAU,CAACD,KAAK,GAAG,CAAC;IACpBE,UAAU,CAACF,KAAK,GAAG,CAAC;EACtB,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAqCVZ,mBAAmB,CAAC;IAAA,OAAMiB,gBAAgB,CAACH,UAAU,CAACW,KAAK,EAAEZ,EAAE,CAAC;EAAA,GAAE,UAACoB,QAAQ,EAAEC,SAAS,EAAK;IACzF,IAAIA,SAAS,KAAK,IAAI,IAAID,QAAQ,KAAKC,SAAS,EAAE;MAChD;IACF;IACAV,SAAS,CAACC,KAAK,GAAGQ,QAAQ;IAC1B,IAAI,CAACL,UAAU,CAACH,KAAK,EAAE;MACrB,IAAMU,WAAW,GAAGf,2BAA2B,CAACI,SAAS,CAACC,KAAK,EAAEH,YAAY,CAACG,KAAK,CAAC;MACpFC,UAAU,CAACD,KAAK,GAAGrB,UAAU,CAAC+B,WAAW,CAACC,CAAC,EAAE9B,eAAe,CAAC;MAC7DqB,UAAU,CAACF,KAAK,GAAGrB,UAAU,CAAC+B,WAAW,CAACE,CAAC,EAAE/B,eAAe,CAAC;IAC/D;EACF,CAAC,EAAE,EAAE,CAAC;EACN,IAAMgC,QAAQ,GAAG1C,WAAW,CAAC,UAAA2C,KAAK,EAAI;IACpC,SAAS;;IAET,IAAAC,qBAAA,GAGID,KAAK,CAACE,WAAW,CAACC,MAAM;MAF1BC,KAAK,GAAAH,qBAAA,CAALG,KAAK;MACLC,MAAM,GAAAJ,qBAAA,CAANI,MAAM;IAERvB,gBAAgB,CAAC;MACfsB,KAAK,EAALA,KAAK;MACLC,MAAM,EAANA;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,sBAAsB,GAAGhD,OAAO,CAACiD,GAAG,CAAC,CAAC,CAACC,sBAAsB,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,YAAM;IACrFpB,UAAU,CAACH,KAAK,GAAG,IAAI;IACvB,IAAMU,WAAW,GAAGf,2BAA2B,CAACI,SAAS,CAACC,KAAK,EAAEH,YAAY,CAACG,KAAK,CAAC;IACpFC,UAAU,CAACD,KAAK,GAAGU,WAAW,CAACC,CAAC;IAChCT,UAAU,CAACF,KAAK,GAAGU,WAAW,CAACE,CAAC;IAChCP,cAAc,CAACL,KAAK,GAAGC,UAAU,CAACD,KAAK;IACvCM,cAAc,CAACN,KAAK,GAAGE,UAAU,CAACF,KAAK;IACvCI,cAAc,CAACJ,KAAK,GAAGX,UAAU,CAACW,KAAK;EACzC,CAAC,CAAC,CAACwB,QAAQ,CAAC,UAAAV,KAAK,EAAI;IACnBb,UAAU,CAACD,KAAK,GAAGK,cAAc,CAACL,KAAK,GAAGc,KAAK,CAACW,YAAY;IAC5DvB,UAAU,CAACF,KAAK,GAAGM,cAAc,CAACN,KAAK,GAAGc,KAAK,CAACY,YAAY;IAG5D,IAAMC,QAAQ,GAAGnC,gBAAgB,CAACH,UAAU,CAACW,KAAK,EAAEZ,EAAE,CAAC;IACvD,IAAMoB,QAAQ,GAAGf,kBAAkB,CAACQ,UAAU,CAACD,KAAK,EAAEE,UAAU,CAACF,KAAK,CAAC,GAAGH,YAAY,CAACG,KAAK;IAC5F,IAAI2B,QAAQ,KAAKnB,QAAQ,EAAE;MACzB,IAAMoB,YAAY,GAAGlC,gBAAgB,CAACL,UAAU,CAACW,KAAK,EAAEQ,QAAQ,CAAC;MACjE,IAAIoB,YAAY,KAAKC,SAAS,EAAE;QAC9B,IAAMC,aAAa,GAAAC,kBAAA,CAAO1C,UAAU,CAACW,KAAK,CAAC;QAC3C8B,aAAa,CAACtB,QAAQ,CAAC,GAAGpB,EAAE;QAC5B0C,aAAa,CAACH,QAAQ,CAAC,GAAGC,YAAY;QACtCvC,UAAU,CAACW,KAAK,GAAG8B,aAAa;MAClC;IACF;EACF,CAAC,CAAC,CAACE,KAAK,CAAC,YAAM;IACb,IAAMtB,WAAW,GAAGf,2BAA2B,CAACH,gBAAgB,CAACH,UAAU,CAACW,KAAK,EAAEZ,EAAE,CAAC,EAAEI,gBAAgB,CAACY,cAAc,CAACJ,KAAK,EAAEZ,EAAE,CAAC,CAAC;IACnIa,UAAU,CAACD,KAAK,GAAGrB,UAAU,CAAC0B,cAAc,CAACL,KAAK,GAAGU,WAAW,CAACC,CAAC,EAAE9B,eAAe,CAAC;IACpFqB,UAAU,CAACF,KAAK,GAAGrB,UAAU,CAAC2B,cAAc,CAACN,KAAK,GAAGU,WAAW,CAACE,CAAC,EAAE/B,eAAe,CAAC;EACtF,CAAC,CAAC,CAACoD,UAAU,CAAC,YAAM;IAClB,IAAI9B,UAAU,CAACH,KAAK,EAAE;MACpBG,UAAU,CAACH,KAAK,GAAG,KAAK;MACxB,IAAII,cAAc,CAACJ,KAAK,CAACkC,QAAQ,CAAC,CAAC,KAAK7C,UAAU,CAACW,KAAK,CAACkC,QAAQ,CAAC,CAAC,EAAE;QACnE5D,OAAO,CAACgB,QAAQ,CAAC,CAAC,CAAC;MACrB;IACF;EACF,CAAC,CAAC;EAGF,IAAM6C,aAAa,GAAG3D,gBAAgB,CAAC,YAAM;IAC3C,IAAM4D,KAAK,GAAG1D,UAAU,CAACyB,UAAU,CAACH,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;IACpD,IAAMqC,MAAM,GAAGlC,UAAU,CAACH,KAAK,GAAG,GAAG,GAAGrB,UAAU,CAAC,CAAC,EAAEE,eAAe,CAAC;IACtE,OAAO;MACLwD,MAAM,EAANA,MAAM;MACNC,SAAS,EAAE,CAAC;QACVrC,UAAU,EAAEA,UAAU,CAACD;MACzB,CAAC,EAAE;QACDE,UAAU,EAAEA,UAAU,CAACF;MACzB,CAAC,EAAE;QACDoC,KAAK,EAALA;MACF,CAAC;IACH,CAAC;EACH,CAAC,CAAC;EACF,OAEEpD,IAAA,CAACF,IAAI;IAACyD,UAAU;IAAChD,KAAK,EAAE,CAACA,KAAK,EAAE4C,aAAa,CAAE;IAACtB,QAAQ,EAAEA,QAAS;IAAA2B,QAAA,EACjExD,IAAA,CAACX,eAAe;MAACoE,OAAO,EAAErB,sBAAuB;MAAAoB,QAAA,EAC/CxD,IAAA,CAACF,IAAI;QAAA0D,QAAA,EAAEtD,KAAK,CAACsD;MAAQ,CAAO;IAAC,CACd;EAAC,CACd,CAAC;AAEX;AACA,eAAetE,KAAK,CAACwE,IAAI,CAACzD,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}