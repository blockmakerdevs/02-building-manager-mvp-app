{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"source\", \"recorderTag\"],\n  _excluded2 = [\"tintColor\", \"style\", \"width\", \"height\", \"supportRTL\", \"cover\", \"aspectRatio\", \"overlayType\", \"overlayIntensity\", \"overlayColor\", \"customOverlayContent\", \"modifiers\", \"recorderTag\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport React, { PureComponent } from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { getAsset, isSvg } from \"../../utils/imageUtils\";\nimport Overlay from \"../overlay\";\nimport SvgImage from \"../svgImage\";\nimport View from \"../view\";\nimport { Colors } from \"../../style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Image = function (_PureComponent) {\n  _inherits(Image, _PureComponent);\n  function Image(props) {\n    var _this;\n    _classCallCheck(this, Image);\n    _this = _callSuper(this, Image, [props]);\n    _this.onError = function (event) {\n      if (event.nativeEvent.error) {\n        _this.setState({\n          error: true\n        });\n        _this.props.onError == null ? void 0 : _this.props.onError(event);\n      }\n    };\n    _this.renderSvg = function () {\n      var _this$props = _this.props,\n        source = _this$props.source,\n        recorderTag = _this$props.recorderTag,\n        others = _objectWithoutProperties(_this$props, _excluded);\n      return _jsx(SvgImage, _objectSpread({\n        data: source,\n        fsTagName: recorderTag\n      }, others));\n    };\n    _this.renderImageWithContainer = function () {\n      var _this$props2 = _this.props,\n        style = _this$props2.style,\n        cover = _this$props2.cover,\n        modifiers = _this$props2.modifiers,\n        width = _this$props2.width,\n        height = _this$props2.height;\n      var margins = modifiers.margins;\n      return _jsx(View, {\n        style: [{\n          width: width,\n          height: height\n        }, margins, style, styles.errorImageContainer, cover && styles.coverImage],\n        children: _this.renderImage(true)\n      });\n    };\n    _this.renderImage = function (useImageInsideContainer) {\n      var error = _this.state.error;\n      var source = error ? _this.getVerifiedSource(_this.props.errorSource) : _this.getImageSource();\n      var _this$props3 = _this.props,\n        tintColor = _this$props3.tintColor,\n        style = _this$props3.style,\n        width = _this$props3.width,\n        height = _this$props3.height,\n        supportRTL = _this$props3.supportRTL,\n        cover = _this$props3.cover,\n        aspectRatio = _this$props3.aspectRatio,\n        overlayType = _this$props3.overlayType,\n        overlayIntensity = _this$props3.overlayIntensity,\n        overlayColor = _this$props3.overlayColor,\n        customOverlayContent = _this$props3.customOverlayContent,\n        modifiers = _this$props3.modifiers,\n        recorderTag = _this$props3.recorderTag,\n        others = _objectWithoutProperties(_this$props3, _excluded2);\n      var shouldFlipRTL = supportRTL && Constants.isRTL;\n      var ImageView = _this.shouldUseImageBackground() ? ImageBackground : RNImage;\n      var margins = modifiers.margins;\n      return _jsx(ImageView, _objectSpread(_objectSpread({\n        style: [tintColor && {\n          tintColor: tintColor\n        }, shouldFlipRTL && styles.rtlFlipped, width && {\n          width: width\n        }, height && {\n          height: height\n        }, cover && styles.coverImage, _this.isGif() && styles.gifImage, aspectRatio && {\n          aspectRatio: aspectRatio\n        }, !useImageInsideContainer && margins, useImageInsideContainer && styles.containImage, style, useImageInsideContainer && styles.shrink],\n        accessible: false,\n        accessibilityRole: 'image',\n        fsTagName: recorderTag\n      }, others), {}, {\n        onError: _this.onError,\n        source: source,\n        children: (overlayType || customOverlayContent) && _jsx(Overlay, {\n          type: overlayType,\n          intensity: overlayIntensity,\n          color: overlayColor,\n          customContent: customOverlayContent\n        })\n      }));\n    };\n    _this.sourceTransformer = _this.props.sourceTransformer;\n    _this.state = {\n      error: false,\n      prevSource: props.source\n    };\n    return _this;\n  }\n  _createClass(Image, [{\n    key: \"isGif\",\n    value: function isGif() {\n      if (Constants.isAndroid) {\n        var source = this.props.source;\n        var url = _get(source, 'uri');\n        var isGif = /(http(s?):)([/|.|\\w|\\s|-])*\\.gif/.test(url != null ? url : '');\n        return isGif;\n      }\n    }\n  }, {\n    key: \"shouldUseImageBackground\",\n    value: function shouldUseImageBackground() {\n      var _this$props4 = this.props,\n        overlayType = _this$props4.overlayType,\n        customOverlayContent = _this$props4.customOverlayContent;\n      return !!overlayType || this.isGif() || !_isUndefined(customOverlayContent);\n    }\n  }, {\n    key: \"getVerifiedSource\",\n    value: function getVerifiedSource(source) {\n      if (_get(source, 'uri') === null || _get(source, 'uri') === '') {\n        return _objectSpread(_objectSpread({}, source), {}, {\n          uri: undefined\n        });\n      }\n      return source;\n    }\n  }, {\n    key: \"getImageSource\",\n    value: function getImageSource() {\n      var _this$props5 = this.props,\n        assetName = _this$props5.assetName,\n        assetGroup = _this$props5.assetGroup,\n        source = _this$props5.source;\n      if (!_isUndefined(assetName)) {\n        return getAsset(assetName, assetGroup);\n      }\n      if (this.sourceTransformer) {\n        return this.sourceTransformer(this.props);\n      }\n      return this.getVerifiedSource(source);\n    }\n  }, {\n    key: \"renderRegularImage\",\n    value: function renderRegularImage() {\n      var error = this.state.error;\n      var useBackgroundContainer = this.props.useBackgroundContainer;\n      if (error || useBackgroundContainer) {\n        return this.renderImageWithContainer();\n      } else {\n        return this.renderImage(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var source = this.props.source;\n      if (isSvg(source)) {\n        return this.renderSvg();\n      } else {\n        return this.renderRegularImage();\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.source !== prevState.prevSource) {\n        return {\n          error: false,\n          prevSource: nextProps.source\n        };\n      }\n      return null;\n    }\n  }]);\n  return Image;\n}(PureComponent);\nImage.displayName = 'Image';\nImage.defaultProps = {\n  assetGroup: 'icons'\n};\nImage.overlayTypes = Overlay.overlayTypes;\nImage.overlayIntensityType = Overlay.intensityTypes;\nvar styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  coverImage: {\n    width: '100%',\n    aspectRatio: 16 / 8\n  },\n  gifImage: {\n    overflow: 'hidden'\n  },\n  errorImageContainer: {\n    backgroundColor: Colors.grey70,\n    zIndex: -1\n  },\n  shrink: {\n    flexShrink: 1\n  },\n  containImage: {\n    resizeMode: 'contain'\n  }\n});\nhoistNonReactStatic(Image, RNImage);\nexport { Image };\nexport default asBaseComponent(Image, {\n  modifiersOptions: {\n    margins: true\n  }\n});","map":{"version":3,"names":["_isUndefined","_get","React","PureComponent","hoistNonReactStatic","StyleSheet","RNImage","ImageBackground","Constants","asBaseComponent","getAsset","isSvg","Overlay","SvgImage","View","Colors","jsx","_jsx","Image","_PureComponent","_inherits","props","_this","_classCallCheck","_callSuper","onError","event","nativeEvent","error","setState","renderSvg","_this$props","source","recorderTag","others","_objectWithoutProperties","_excluded","_objectSpread","data","fsTagName","renderImageWithContainer","_this$props2","style","cover","modifiers","width","height","margins","styles","errorImageContainer","coverImage","children","renderImage","useImageInsideContainer","state","getVerifiedSource","errorSource","getImageSource","_this$props3","tintColor","supportRTL","aspectRatio","overlayType","overlayIntensity","overlayColor","customOverlayContent","_excluded2","shouldFlipRTL","isRTL","ImageView","shouldUseImageBackground","rtlFlipped","isGif","gifImage","containImage","shrink","accessible","accessibilityRole","type","intensity","color","customContent","sourceTransformer","prevSource","_createClass","key","value","isAndroid","url","test","_this$props4","uri","undefined","_this$props5","assetName","assetGroup","renderRegularImage","useBackgroundContainer","render","getDerivedStateFromProps","nextProps","prevState","displayName","defaultProps","overlayTypes","overlayIntensityType","intensityTypes","create","transform","scaleX","overflow","backgroundColor","grey70","zIndex","flexShrink","resizeMode","modifiersOptions"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/image/index.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport React, { PureComponent } from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport { StyleSheet, Image as RNImage, ImageBackground } from 'react-native';\n// @ts-expect-error No typings available for 'deprecated-react-native-prop-types'\n\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { getAsset, isSvg } from \"../../utils/imageUtils\";\nimport Overlay from \"../overlay\";\nimport SvgImage from \"../svgImage\";\nimport View from \"../view\";\nimport { Colors } from \"../../style\";\n/**\n * @description: Image wrapper with extra functionality like source transform and assets support\n * @extends: Image\n * @extendsLink: https://reactnative.dev/docs/image\n * @notes: please note that for SVG support you need to add both\n * `react-native-svg` and `react-native-svg-transformer`,\n * and also configure them (see `metro.config.js`)\n */\nclass Image extends PureComponent {\n  static displayName = 'Image';\n  static defaultProps = {\n    assetGroup: 'icons'\n  };\n  static overlayTypes = Overlay.overlayTypes;\n  static overlayIntensityType = Overlay.intensityTypes;\n  constructor(props) {\n    super(props);\n    this.sourceTransformer = this.props.sourceTransformer;\n    this.state = {\n      error: false,\n      prevSource: props.source\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.source !== prevState.prevSource) {\n      return {\n        error: false,\n        prevSource: nextProps.source\n      };\n    }\n    return null;\n  }\n  isGif() {\n    if (Constants.isAndroid) {\n      const {\n        source\n      } = this.props;\n      const url = _get(source, 'uri');\n      const isGif = /(http(s?):)([/|.|\\w|\\s|-])*\\.gif/.test(url ?? '');\n      return isGif;\n    }\n  }\n  shouldUseImageBackground() {\n    const {\n      overlayType,\n      customOverlayContent\n    } = this.props;\n    return !!overlayType || this.isGif() || !_isUndefined(customOverlayContent);\n  }\n  getVerifiedSource(source) {\n    if (_get(source, 'uri') === null || _get(source, 'uri') === '') {\n      // @ts-ignore\n      return {\n        ...source,\n        uri: undefined\n      };\n    }\n    return source;\n  }\n  getImageSource() {\n    const {\n      assetName,\n      assetGroup,\n      source\n    } = this.props;\n    if (!_isUndefined(assetName)) {\n      return getAsset(assetName, assetGroup);\n    }\n    if (this.sourceTransformer) {\n      return this.sourceTransformer(this.props);\n    }\n    return this.getVerifiedSource(source);\n  }\n  onError = event => {\n    if (event.nativeEvent.error) {\n      this.setState({\n        error: true\n      });\n      this.props.onError?.(event);\n    }\n  };\n  renderSvg = () => {\n    const {\n      source,\n      recorderTag,\n      ...others\n    } = this.props;\n    return <SvgImage data={source} fsTagName={recorderTag} {...others} />;\n  };\n  renderImageWithContainer = () => {\n    const {\n      style,\n      cover,\n      modifiers,\n      width,\n      height\n    } = this.props;\n    const {\n      margins\n    } = modifiers;\n    return <View style={[{\n      width,\n      height\n    }, margins, style, styles.errorImageContainer, cover && styles.coverImage]}>\n        {this.renderImage(true)}\n      </View>;\n  };\n  renderImage = useImageInsideContainer => {\n    const {\n      error\n    } = this.state;\n    const source = error ? this.getVerifiedSource(this.props.errorSource) : this.getImageSource();\n    const {\n      tintColor,\n      style,\n      width,\n      height,\n      supportRTL,\n      cover,\n      aspectRatio,\n      overlayType,\n      overlayIntensity,\n      overlayColor,\n      customOverlayContent,\n      modifiers,\n      recorderTag,\n      ...others\n    } = this.props;\n    const shouldFlipRTL = supportRTL && Constants.isRTL;\n    const ImageView = this.shouldUseImageBackground() ? ImageBackground : RNImage;\n    const {\n      margins\n    } = modifiers;\n    return (\n      // @ts-ignore\n      <ImageView style={[tintColor && {\n        tintColor\n      }, shouldFlipRTL && styles.rtlFlipped, width && {\n        width\n      }, height && {\n        height\n      }, cover && styles.coverImage, this.isGif() && styles.gifImage, aspectRatio && {\n        aspectRatio\n      }, !useImageInsideContainer && margins, useImageInsideContainer && styles.containImage, style, useImageInsideContainer && styles.shrink]} accessible={false} accessibilityRole={'image'} fsTagName={recorderTag} {...others} onError={this.onError} source={source}>\n        {(overlayType || customOverlayContent) && <Overlay type={overlayType} intensity={overlayIntensity} color={overlayColor} customContent={customOverlayContent} />}\n      </ImageView>\n    );\n  };\n  renderRegularImage() {\n    const {\n      error\n    } = this.state;\n    const {\n      useBackgroundContainer\n    } = this.props;\n    if (error || useBackgroundContainer) {\n      return this.renderImageWithContainer();\n    } else {\n      return this.renderImage(false);\n    }\n  }\n  render() {\n    const {\n      source\n    } = this.props;\n    if (isSvg(source)) {\n      return this.renderSvg();\n    } else {\n      return this.renderRegularImage();\n    }\n  }\n}\nconst styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  coverImage: {\n    width: '100%',\n    aspectRatio: 16 / 8\n  },\n  gifImage: {\n    overflow: 'hidden'\n  },\n  errorImageContainer: {\n    backgroundColor: Colors.grey70,\n    zIndex: -1\n  },\n  shrink: {\n    flexShrink: 1\n  },\n  containImage: {\n    resizeMode: 'contain'\n  }\n});\nhoistNonReactStatic(Image, RNImage);\nexport { Image };\nexport default asBaseComponent(Image, {\n  modifiersOptions: {\n    margins: true\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}