{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"initialValue\", \"formatter\", \"containerStyle\", \"renderMaskedText\", \"onChangeText\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _isFunction from \"lodash/isFunction\";\nimport _identity from \"lodash/identity\";\nimport React, { useCallback, useEffect, useRef, useState, useImperativeHandle, forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction MaskedInput(props, ref) {\n  var initialValue = props.initialValue,\n    _props$formatter = props.formatter,\n    formatter = _props$formatter === void 0 ? _identity : _props$formatter,\n    containerStyle = props.containerStyle,\n    renderMaskedText = props.renderMaskedText,\n    onChangeText = props.onChangeText,\n    others = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var inputRef = useRef();\n  var keyboardDidHideListener = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      isFocused: function isFocused() {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.isFocused();\n      },\n      focus: focus,\n      blur: function blur() {\n        var _inputRef$current2;\n        return (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.blur();\n      },\n      clear: function clear() {\n        var _inputRef$current3;\n        (_inputRef$current3 = inputRef.current) == null ? void 0 : _inputRef$current3.clear();\n        setValue('');\n        onChangeText == null ? void 0 : onChangeText('');\n      }\n    };\n  });\n  useEffect(function () {\n    if (initialValue !== value) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n  useEffect(function () {\n    keyboardDidHideListener.current = Keyboard.addListener('keyboardDidHide', function () {\n      var _inputRef$current4;\n      if ((_inputRef$current4 = inputRef.current) != null && _inputRef$current4.isFocused()) {\n        var _inputRef$current5;\n        (_inputRef$current5 = inputRef.current) == null ? void 0 : _inputRef$current5.blur();\n      }\n    });\n    return function () {\n      return keyboardDidHideListener.current.remove();\n    };\n  }, []);\n  var _onChangeText = useCallback(function (value) {\n    var _formatter;\n    var formattedValue = (_formatter = formatter(value)) != null ? _formatter : '';\n    setValue(formattedValue);\n    onChangeText == null ? void 0 : onChangeText(formattedValue);\n  }, [onChangeText, formatter]);\n  var focus = useCallback(function () {\n    var _inputRef$current6;\n    (_inputRef$current6 = inputRef.current) == null ? void 0 : _inputRef$current6.focus();\n  }, []);\n  var _renderMaskedText = function _renderMaskedText() {\n    if (_isFunction(renderMaskedText)) {\n      return renderMaskedText(value);\n    }\n    return _jsx(Text, {\n      children: value\n    });\n  };\n  return _jsxs(TouchableOpacity, {\n    style: containerStyle,\n    activeOpacity: 1,\n    onPress: focus,\n    children: [_jsx(TextInput, _objectSpread(_objectSpread({}, others), {}, {\n      value: value,\n      ref: inputRef,\n      style: styles.hiddenInput,\n      enableErrors: false,\n      hideUnderline: true,\n      placeholder: \"\",\n      caretHidden: true,\n      multiline: false,\n      onChangeText: _onChangeText\n    })), _jsx(View, {\n      style: styles.maskedInputWrapper,\n      children: _renderMaskedText()\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  hiddenInput: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    zIndex: 1,\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  }),\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});\nMaskedInput.displayName = 'MaskedInput';\nexport default forwardRef(MaskedInput);","map":{"version":3,"names":["_isFunction","_identity","React","useCallback","useEffect","useRef","useState","useImperativeHandle","forwardRef","StyleSheet","Keyboard","TextInput","View","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","MaskedInput","props","ref","initialValue","_props$formatter","formatter","containerStyle","renderMaskedText","onChangeText","others","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","value","setValue","inputRef","keyboardDidHideListener","isFocused","_inputRef$current","current","focus","blur","_inputRef$current2","clear","_inputRef$current3","addListener","_inputRef$current4","_inputRef$current5","remove","_onChangeText","_formatter","formattedValue","_inputRef$current6","_renderMaskedText","children","style","activeOpacity","onPress","_objectSpread","styles","hiddenInput","enableErrors","hideUnderline","placeholder","caretHidden","multiline","maskedInputWrapper","create","absoluteFillObject","zIndex","color","backgroundColor","height","undefined","displayName"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/maskedInput/new.js"],"sourcesContent":["import _isFunction from \"lodash/isFunction\";\nimport _identity from \"lodash/identity\";\nimport React, { useCallback, useEffect, useRef, useState, useImperativeHandle, forwardRef } from 'react';\nimport { StyleSheet, Keyboard, TextInput } from 'react-native';\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\n/**\n * @description: Mask Input to create custom looking inputs with custom formats\n * @gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.tsx\n */\nfunction MaskedInput(props, ref) {\n  const {\n    initialValue,\n    formatter = _identity,\n    containerStyle,\n    renderMaskedText,\n    onChangeText,\n    ...others\n  } = props;\n  const [value, setValue] = useState(initialValue);\n  const inputRef = useRef();\n  const keyboardDidHideListener = useRef();\n  useImperativeHandle(ref, () => {\n    return {\n      isFocused: () => inputRef.current?.isFocused(),\n      focus,\n      blur: () => inputRef.current?.blur(),\n      clear: () => {\n        inputRef.current?.clear();\n        setValue('');\n        // NOTE: This fixes an RN issue - when triggering imperative clear method, it doesn't call onChangeText\n        onChangeText?.('');\n      }\n    };\n  });\n  useEffect(() => {\n    if (initialValue !== value) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n  useEffect(() => {\n    keyboardDidHideListener.current = Keyboard.addListener('keyboardDidHide', () => {\n      if (inputRef.current?.isFocused()) {\n        inputRef.current?.blur();\n      }\n    });\n    return () => keyboardDidHideListener.current.remove();\n  }, []);\n  const _onChangeText = useCallback(value => {\n    const formattedValue = formatter(value) ?? '';\n    setValue(formattedValue);\n    onChangeText?.(formattedValue);\n  }, [onChangeText, formatter]);\n  const focus = useCallback(() => {\n    inputRef.current?.focus();\n  }, []);\n  const _renderMaskedText = () => {\n    if (_isFunction(renderMaskedText)) {\n      return renderMaskedText(value);\n    }\n    return <Text>{value}</Text>;\n  };\n  return <TouchableOpacity style={containerStyle} activeOpacity={1} onPress={focus}>\n      <TextInput {...others} value={value}\n    // @ts-expect-error\n    ref={inputRef} style={styles.hiddenInput} enableErrors={false} hideUnderline placeholder=\"\" caretHidden multiline={false} onChangeText={_onChangeText} />\n      <View style={styles.maskedInputWrapper}>{_renderMaskedText()}</View>\n    </TouchableOpacity>;\n}\nconst styles = StyleSheet.create({\n  hiddenInput: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1,\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  },\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});\nMaskedInput.displayName = 'MaskedInput';\nexport default forwardRef(MaskedInput);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}