{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _times from \"lodash/times\";\nimport _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MAX_SHOWN_PAGES = 7;\nvar NUM_LARGE_INDICATORS = 3;\nvar DEFAULT_INDICATOR_COLOR = Colors.$iconPrimary;\nfunction getColorStyle(isCurrentPage, color, inactiveColor) {\n  var activeColor = color || DEFAULT_INDICATOR_COLOR;\n  return {\n    borderColor: isCurrentPage ? activeColor : inactiveColor || activeColor,\n    backgroundColor: isCurrentPage ? activeColor : inactiveColor || 'transparent'\n  };\n}\nfunction getSizeStyle(size, index, currentPage, enlargeActive) {\n  var temp = enlargeActive ? index === currentPage ? size + 2 : size : size;\n  return {\n    width: temp,\n    height: temp,\n    borderRadius: temp / 2\n  };\n}\nfunction getNumberOfPagesShown(props) {\n  return Math.min(MAX_SHOWN_PAGES, props.numOfPages);\n}\nvar PageControl = function (_PureComponent) {\n  _inherits(PageControl, _PureComponent);\n  function PageControl(props) {\n    var _this;\n    _classCallCheck(this, PageControl);\n    _this = _callSuper(this, PageControl, [props]);\n    _this.onPagePress = function (_ref) {\n      var index = _ref.customValue;\n      PageControl.animate(_this.props);\n      _this.props.onPagePress == null ? void 0 : _this.props.onPagePress(index);\n    };\n    _this.state = {\n      numOfPagesShown: getNumberOfPagesShown(props),\n      largeIndicatorsOffset: 0,\n      pagesOffset: 0,\n      prevPage: undefined\n    };\n    if (Array.isArray(props.size)) {\n      if (props.size[0] >= props.size[1] || props.size[1] >= props.size[2]) {\n        console.warn('It is recommended that largeSize > mediumSize > smallSize, currently: smallSize=', props.size[0], 'mediumSize=', props.size[1], 'largeSize=', props.size[2]);\n      }\n    }\n    return _this;\n  }\n  _createClass(PageControl, [{\n    key: \"getSize\",\n    value: function getSize(index) {\n      var largeIndicatorsOffset = this.state.largeIndicatorsOffset;\n      var numOfPages = this.props.numOfPages;\n      var mediumSize,\n        smallSize,\n        _this$props$size = this.props.size,\n        size = _this$props$size === void 0 ? PageControl.DEFAULT_SIZE : _this$props$size;\n      if (Array.isArray(size)) {\n        smallSize = size[0];\n        mediumSize = size[1];\n        size = size[2];\n      } else {\n        mediumSize = size * 2 / 3;\n        smallSize = size / 3;\n      }\n      if (index < 0 || index > numOfPages - 1) {\n        return undefined;\n      } else if (index >= largeIndicatorsOffset && index < largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n        return size;\n      } else if (index === largeIndicatorsOffset - 1 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n        return mediumSize;\n      } else if (index === largeIndicatorsOffset - 2 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS + 1) {\n        return smallSize;\n      }\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator(index, size, enlargeActive) {\n      var _this$props = this.props,\n        currentPage = _this$props.currentPage,\n        color = _this$props.color,\n        inactiveColor = _this$props.inactiveColor,\n        onPagePress = _this$props.onPagePress,\n        _this$props$spacing = _this$props.spacing,\n        spacing = _this$props$spacing === void 0 ? PageControl.DEFAULT_SPACING : _this$props$spacing;\n      return _jsx(TouchableOpacity, {\n        customValue: index,\n        onPress: onPagePress && this.onPagePress,\n        style: [styles.pageIndicator, {\n          marginHorizontal: spacing / 2\n        }, getColorStyle(index === currentPage, color, inactiveColor), getSizeStyle(size, index, currentPage, enlargeActive)]\n      }, index);\n    }\n  }, {\n    key: \"renderDifferentSizeIndicators\",\n    value: function renderDifferentSizeIndicators() {\n      var _this2 = this;\n      var _this$state = this.state,\n        numOfPagesShown = _this$state.numOfPagesShown,\n        pagesOffset = _this$state.pagesOffset;\n      return _map(_times(numOfPagesShown), function (index) {\n        var adjustedIndex = index + pagesOffset;\n        var adjustedSize = _this2.getSize(adjustedIndex);\n        if (adjustedSize) {\n          return _this2.renderIndicator(adjustedIndex, adjustedSize, false);\n        } else {\n          return null;\n        }\n      });\n    }\n  }, {\n    key: \"renderSameSizeIndicators\",\n    value: function renderSameSizeIndicators() {\n      var _this3 = this;\n      var _this$props2 = this.props,\n        numOfPages = _this$props2.numOfPages,\n        _this$props2$size = _this$props2.size,\n        sizeFromProps = _this$props2$size === void 0 ? PageControl.DEFAULT_SIZE : _this$props2$size,\n        enlargeActive = _this$props2.enlargeActive;\n      var size = Array.isArray(sizeFromProps) ? sizeFromProps[2] : sizeFromProps;\n      return _map(_times(numOfPages), function (index) {\n        return _this3.renderIndicator(index, size, enlargeActive);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        containerStyle = _this$props3.containerStyle,\n        testID = _this$props3.testID;\n      return _jsx(View, {\n        style: [styles.container, containerStyle],\n        inaccessible: true,\n        testID: testID,\n        children: PageControl.showLimitedVersion(this.props) ? this.renderDifferentSizeIndicators() : this.renderSameSizeIndicators()\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var currentPage = nextProps.currentPage;\n      var prevLargeIndicatorsOffset = prevState.largeIndicatorsOffset,\n        prevPage = prevState.prevPage;\n      var newState = {};\n      if (currentPage !== prevPage) {\n        newState.prevPage = currentPage;\n        if (currentPage >= prevLargeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n          PageControl.animate(nextProps);\n          newState.pagesOffset = Math.max(0, currentPage - NUM_LARGE_INDICATORS - 1);\n          newState.largeIndicatorsOffset = currentPage - NUM_LARGE_INDICATORS + 1;\n        } else if (currentPage < prevLargeIndicatorsOffset) {\n          PageControl.animate(nextProps);\n          newState.pagesOffset = Math.max(0, currentPage - 2);\n          newState.largeIndicatorsOffset = currentPage;\n        }\n      }\n      return _isEmpty(newState) ? null : newState;\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(props) {\n      if (PageControl.showLimitedVersion(props)) {\n        LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.linear), {}, {\n          duration: 100\n        }));\n      }\n    }\n  }, {\n    key: \"showLimitedVersion\",\n    value: function showLimitedVersion(_ref2) {\n      var limitShownPages = _ref2.limitShownPages,\n        numOfPages = _ref2.numOfPages;\n      return limitShownPages && numOfPages > 5;\n    }\n  }]);\n  return PageControl;\n}(PureComponent);\nPageControl.displayName = 'PageControl';\nPageControl.DEFAULT_SIZE = 10;\nPageControl.DEFAULT_SPACING = 4;\nPageControl.defaultProps = {\n  enlargeActive: false\n};\nexport default asBaseComponent(forwardRef(PageControl));\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pageIndicator: {\n    backgroundColor: 'transparent',\n    borderWidth: 1\n  }\n});","map":{"version":3,"names":["_times","_map","_isEmpty","React","PureComponent","StyleSheet","LayoutAnimation","asBaseComponent","forwardRef","Colors","TouchableOpacity","View","jsx","_jsx","MAX_SHOWN_PAGES","NUM_LARGE_INDICATORS","DEFAULT_INDICATOR_COLOR","$iconPrimary","getColorStyle","isCurrentPage","color","inactiveColor","activeColor","borderColor","backgroundColor","getSizeStyle","size","index","currentPage","enlargeActive","temp","width","height","borderRadius","getNumberOfPagesShown","props","Math","min","numOfPages","PageControl","_PureComponent","_inherits","_this","_classCallCheck","_callSuper","onPagePress","_ref","customValue","animate","state","numOfPagesShown","largeIndicatorsOffset","pagesOffset","prevPage","undefined","Array","isArray","console","warn","_createClass","key","value","getSize","mediumSize","smallSize","_this$props$size","DEFAULT_SIZE","renderIndicator","_this$props","_this$props$spacing","spacing","DEFAULT_SPACING","onPress","style","styles","pageIndicator","marginHorizontal","renderDifferentSizeIndicators","_this2","_this$state","adjustedIndex","adjustedSize","renderSameSizeIndicators","_this3","_this$props2","_this$props2$size","sizeFromProps","render","_this$props3","containerStyle","testID","container","inaccessible","children","showLimitedVersion","getDerivedStateFromProps","nextProps","prevState","prevLargeIndicatorsOffset","newState","max","configureNext","_objectSpread","Presets","linear","duration","_ref2","limitShownPages","displayName","defaultProps","create","flexDirection","alignItems","justifyContent","borderWidth"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/pageControl/index.js"],"sourcesContent":["import _times from \"lodash/times\";\nimport _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, LayoutAnimation } from 'react-native';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nconst MAX_SHOWN_PAGES = 7;\nconst NUM_LARGE_INDICATORS = 3;\nconst DEFAULT_INDICATOR_COLOR = Colors.$iconPrimary;\nfunction getColorStyle(isCurrentPage, color, inactiveColor) {\n  const activeColor = color || DEFAULT_INDICATOR_COLOR;\n  return {\n    borderColor: isCurrentPage ? activeColor : inactiveColor || activeColor,\n    backgroundColor: isCurrentPage ? activeColor : inactiveColor || 'transparent'\n  };\n}\nfunction getSizeStyle(size, index, currentPage, enlargeActive) {\n  const temp = enlargeActive ? index === currentPage ? size + 2 : size : size;\n  return {\n    width: temp,\n    height: temp,\n    borderRadius: temp / 2\n  };\n}\nfunction getNumberOfPagesShown(props) {\n  return Math.min(MAX_SHOWN_PAGES, props.numOfPages);\n}\n/**\n * @description: Page indicator, typically used in paged scroll-views\n * @gif: https://user-images.githubusercontent.com/1780255/107114259-2e278d00-686d-11eb-866c-59f3d410d6c3.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.tsx\n */\nclass PageControl extends PureComponent {\n  static displayName = 'PageControl';\n  static DEFAULT_SIZE = 10;\n  static DEFAULT_SPACING = 4;\n  static defaultProps = {\n    enlargeActive: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      numOfPagesShown: getNumberOfPagesShown(props),\n      largeIndicatorsOffset: 0,\n      pagesOffset: 0,\n      prevPage: undefined\n    };\n    if (Array.isArray(props.size)) {\n      if (props.size[0] >= props.size[1] || props.size[1] >= props.size[2]) {\n        console.warn('It is recommended that largeSize > mediumSize > smallSize, currently: smallSize=', props.size[0], 'mediumSize=', props.size[1], 'largeSize=', props.size[2]);\n      }\n    }\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage\n    } = nextProps;\n    const {\n      largeIndicatorsOffset: prevLargeIndicatorsOffset,\n      prevPage\n    } = prevState;\n    const newState = {};\n    if (currentPage !== prevPage) {\n      newState.prevPage = currentPage;\n      if (currentPage >= prevLargeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n        PageControl.animate(nextProps);\n        newState.pagesOffset = Math.max(0, currentPage - NUM_LARGE_INDICATORS - 1);\n        newState.largeIndicatorsOffset = currentPage - NUM_LARGE_INDICATORS + 1;\n      } else if (currentPage < prevLargeIndicatorsOffset) {\n        PageControl.animate(nextProps);\n        newState.pagesOffset = Math.max(0, currentPage - 2);\n        newState.largeIndicatorsOffset = currentPage;\n      }\n    }\n    return _isEmpty(newState) ? null : newState;\n  }\n  static animate(props) {\n    if (PageControl.showLimitedVersion(props)) {\n      LayoutAnimation.configureNext({\n        ...LayoutAnimation.Presets.linear,\n        duration: 100\n      });\n    }\n  }\n  static showLimitedVersion({\n    limitShownPages,\n    numOfPages\n  }) {\n    return limitShownPages && numOfPages > 5;\n  }\n  getSize(index) {\n    const {\n      largeIndicatorsOffset\n    } = this.state;\n    const {\n      numOfPages\n    } = this.props;\n    let mediumSize,\n      smallSize,\n      {\n        size = PageControl.DEFAULT_SIZE\n      } = this.props;\n    if (Array.isArray(size)) {\n      smallSize = size[0];\n      mediumSize = size[1];\n      size = size[2];\n    } else {\n      mediumSize = size * 2 / 3;\n      smallSize = size / 3;\n    }\n    if (index < 0 || index > numOfPages - 1) {\n      return undefined;\n    } else if (index >= largeIndicatorsOffset && index < largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n      return size;\n    } else if (index === largeIndicatorsOffset - 1 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n      return mediumSize;\n    } else if (index === largeIndicatorsOffset - 2 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS + 1) {\n      return smallSize;\n    }\n  }\n  onPagePress = ({\n    customValue: index\n  }) => {\n    PageControl.animate(this.props);\n    this.props.onPagePress?.(index);\n  };\n  renderIndicator(index, size, enlargeActive) {\n    const {\n      currentPage,\n      color,\n      inactiveColor,\n      onPagePress,\n      spacing = PageControl.DEFAULT_SPACING\n    } = this.props;\n    return <TouchableOpacity customValue={index} onPress={onPagePress && this.onPagePress} key={index} style={[styles.pageIndicator, {\n      marginHorizontal: spacing / 2\n    }, getColorStyle(index === currentPage, color, inactiveColor), getSizeStyle(size, index, currentPage, enlargeActive)]} />;\n  }\n  renderDifferentSizeIndicators() {\n    const {\n      numOfPagesShown,\n      pagesOffset\n    } = this.state;\n    return _map(_times(numOfPagesShown), index => {\n      const adjustedIndex = index + pagesOffset;\n      const adjustedSize = this.getSize(adjustedIndex);\n      if (adjustedSize) {\n        return this.renderIndicator(adjustedIndex, adjustedSize, false);\n      } else {\n        return null;\n      }\n    });\n  }\n  renderSameSizeIndicators() {\n    const {\n      numOfPages,\n      size: sizeFromProps = PageControl.DEFAULT_SIZE,\n      enlargeActive\n    } = this.props;\n    const size = Array.isArray(sizeFromProps) ? sizeFromProps[2] : sizeFromProps;\n    return _map(_times(numOfPages), index => this.renderIndicator(index, size, enlargeActive));\n  }\n  render() {\n    const {\n      containerStyle,\n      testID\n    } = this.props;\n    return <View style={[styles.container, containerStyle]} inaccessible testID={testID}>\n        {PageControl.showLimitedVersion(this.props) ? this.renderDifferentSizeIndicators() : this.renderSameSizeIndicators()}\n      </View>;\n  }\n}\nexport default asBaseComponent(forwardRef(PageControl));\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pageIndicator: {\n    backgroundColor: 'transparent',\n    borderWidth: 1\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}