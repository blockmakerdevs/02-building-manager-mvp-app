{"ast":null,"code":"import React, { useRef, useEffect, useCallback, useMemo } from 'react';\nimport View from \"../view\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OverlayFadingBackground = function OverlayFadingBackground(_ref) {\n  var testID = _ref.testID,\n    dialogVisibility = _ref.dialogVisibility,\n    modalVisibility = _ref.modalVisibility,\n    overlayBackgroundColor = _ref.overlayBackgroundColor,\n    propsOnFadeDone = _ref.onFadeDone,\n    fadeOut = _ref.fadeOut;\n  var fadeAnimation = useRef(new Animated.Value(0)).current;\n  var isAnimating = useRef(false);\n  var onFadeDone = useCallback(function () {\n    isAnimating.current = false;\n    propsOnFadeDone == null ? void 0 : propsOnFadeDone();\n  }, [propsOnFadeDone]);\n  var animateFading = useCallback(function (toValue) {\n    isAnimating.current = true;\n    Animated.timing(fadeAnimation, {\n      toValue: toValue,\n      duration: 400,\n      useNativeDriver: true\n    }).start(onFadeDone);\n  }, [fadeAnimation, onFadeDone]);\n  useEffect(function () {\n    if (!isAnimating.current && (!dialogVisibility || fadeOut)) {\n      animateFading(0);\n    }\n  }, [dialogVisibility, animateFading, fadeOut]);\n  useEffect(function () {\n    if (modalVisibility) {\n      animateFading(1);\n    }\n  }, [modalVisibility, animateFading]);\n  var style = useMemo(function () {\n    return {\n      opacity: fadeAnimation,\n      backgroundColor: overlayBackgroundColor\n    };\n  }, [overlayBackgroundColor, fadeAnimation]);\n  return _jsx(View, {\n    testID: testID,\n    absF: true,\n    animated: true,\n    style: style,\n    pointerEvents: \"none\"\n  });\n};\nOverlayFadingBackground.displayName = 'IGNORE';\nexport default OverlayFadingBackground;","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useMemo","View","Animated","jsx","_jsx","OverlayFadingBackground","_ref","testID","dialogVisibility","modalVisibility","overlayBackgroundColor","propsOnFadeDone","onFadeDone","fadeOut","fadeAnimation","Value","current","isAnimating","animateFading","toValue","timing","duration","useNativeDriver","start","style","opacity","backgroundColor","absF","animated","pointerEvents","displayName"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/dialog/OverlayFadingBackground.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useMemo } from 'react';\nimport View from \"../view\";\nimport { Animated } from 'react-native';\nconst OverlayFadingBackground = ({\n  testID,\n  dialogVisibility,\n  modalVisibility,\n  overlayBackgroundColor,\n  onFadeDone: propsOnFadeDone,\n  fadeOut\n}) => {\n  const fadeAnimation = useRef(new Animated.Value(0)).current;\n  const isAnimating = useRef(false);\n  const onFadeDone = useCallback(() => {\n    isAnimating.current = false;\n    propsOnFadeDone?.();\n  }, [propsOnFadeDone]);\n  const animateFading = useCallback(toValue => {\n    isAnimating.current = true;\n    Animated.timing(fadeAnimation, {\n      toValue,\n      duration: 400,\n      useNativeDriver: true\n    }).start(onFadeDone);\n  }, [fadeAnimation, onFadeDone]);\n  useEffect(() => {\n    if (!isAnimating.current && (!dialogVisibility || fadeOut)) {\n      animateFading(0);\n    }\n  }, [dialogVisibility, animateFading, fadeOut]);\n  useEffect(() => {\n    if (modalVisibility) {\n      animateFading(1);\n    }\n  }, [modalVisibility, animateFading]);\n  const style = useMemo(() => {\n    return {\n      opacity: fadeAnimation,\n      backgroundColor: overlayBackgroundColor\n    };\n  }, [overlayBackgroundColor, fadeAnimation]);\n  return <View testID={testID} absF animated style={style} pointerEvents=\"none\" />;\n};\nOverlayFadingBackground.displayName = 'IGNORE';\nexport default OverlayFadingBackground;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACtE,OAAOC,IAAI;AAAgB,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE3B,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAAC,IAAA,EAOvB;EAAA,IANJC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,gBAAgB,GAAAF,IAAA,CAAhBE,gBAAgB;IAChBC,eAAe,GAAAH,IAAA,CAAfG,eAAe;IACfC,sBAAsB,GAAAJ,IAAA,CAAtBI,sBAAsB;IACVC,eAAe,GAAAL,IAAA,CAA3BM,UAAU;IACVC,OAAO,GAAAP,IAAA,CAAPO,OAAO;EAEP,IAAMC,aAAa,GAAGjB,MAAM,CAAC,IAAIK,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAC3D,IAAMC,WAAW,GAAGpB,MAAM,CAAC,KAAK,CAAC;EACjC,IAAMe,UAAU,GAAGb,WAAW,CAAC,YAAM;IACnCkB,WAAW,CAACD,OAAO,GAAG,KAAK;IAC3BL,eAAe,oBAAfA,eAAe,CAAG,CAAC;EACrB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EACrB,IAAMO,aAAa,GAAGnB,WAAW,CAAC,UAAAoB,OAAO,EAAI;IAC3CF,WAAW,CAACD,OAAO,GAAG,IAAI;IAC1Bd,QAAQ,CAACkB,MAAM,CAACN,aAAa,EAAE;MAC7BK,OAAO,EAAPA,OAAO;MACPE,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAACX,UAAU,CAAC;EACtB,CAAC,EAAE,CAACE,aAAa,EAAEF,UAAU,CAAC,CAAC;EAC/Bd,SAAS,CAAC,YAAM;IACd,IAAI,CAACmB,WAAW,CAACD,OAAO,KAAK,CAACR,gBAAgB,IAAIK,OAAO,CAAC,EAAE;MAC1DK,aAAa,CAAC,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACV,gBAAgB,EAAEU,aAAa,EAAEL,OAAO,CAAC,CAAC;EAC9Cf,SAAS,CAAC,YAAM;IACd,IAAIW,eAAe,EAAE;MACnBS,aAAa,CAAC,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACT,eAAe,EAAES,aAAa,CAAC,CAAC;EACpC,IAAMM,KAAK,GAAGxB,OAAO,CAAC,YAAM;IAC1B,OAAO;MACLyB,OAAO,EAAEX,aAAa;MACtBY,eAAe,EAAEhB;IACnB,CAAC;EACH,CAAC,EAAE,CAACA,sBAAsB,EAAEI,aAAa,CAAC,CAAC;EAC3C,OAAOV,IAAA,CAACH,IAAI;IAACM,MAAM,EAAEA,MAAO;IAACoB,IAAI;IAACC,QAAQ;IAACJ,KAAK,EAAEA,KAAM;IAACK,aAAa,EAAC;EAAM,CAAE,CAAC;AAClF,CAAC;AACDxB,uBAAuB,CAACyB,WAAW,GAAG,QAAQ;AAC9C,eAAezB,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}