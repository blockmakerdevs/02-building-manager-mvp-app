{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"overlayBackgroundColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useMemo, useCallback, useImperativeHandle, forwardRef, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport hoistStatics from 'hoist-non-react-statics';\nimport { Extrapolation, interpolate, runOnJS, useAnimatedStyle, useSharedValue, withSpring, withTiming } from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { Spacings, Colors, BorderRadiuses } from \"../../style\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Modal from \"../../components/modal\";\nimport { extractAlignmentsValues } from \"../../commons/modifiers\";\nimport useHiddenLocation from \"../hooks/useHiddenLocation\";\nimport DialogHeader from \"./DialogHeader\";\nimport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps };\nvar THRESHOLD_VELOCITY = 750;\nvar Dialog = function Dialog(props, ref) {\n  var _props$visible = props.visible,\n    visible = _props$visible === void 0 ? false : _props$visible,\n    headerProps = props.headerProps,\n    containerStyle = props.containerStyle,\n    containerProps = props.containerProps,\n    width = props.width,\n    height = props.height,\n    onDismiss = props.onDismiss,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? DialogDirectionsEnum.DOWN : _props$direction,\n    ignoreBackgroundPress = props.ignoreBackgroundPress,\n    _props$modalProps = props.modalProps,\n    modalProps = _props$modalProps === void 0 ? {} : _props$modalProps,\n    useSafeArea = props.useSafeArea,\n    testID = props.testID,\n    children = props.children;\n  var _modalProps$overlayBa = modalProps.overlayBackgroundColor,\n    overlayBackgroundColor = _modalProps$overlayBa === void 0 ? Colors.rgba(Colors.$backgroundInverted, 0.3) : _modalProps$overlayBa,\n    otherModalProps = _objectWithoutProperties(modalProps, _excluded);\n  var visibility = useSharedValue(0);\n  var initialTranslation = useSharedValue(0);\n  var _useState = useState(visible),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisibility = _useState2[0],\n    setModalVisibility = _useState2[1];\n  var _useHiddenLocation = useHiddenLocation(),\n    setRef = _useHiddenLocation.setRef,\n    onLayout = _useHiddenLocation.onLayout,\n    _hiddenLocation = _useHiddenLocation.hiddenLocation;\n  var hiddenLocation = _hiddenLocation[direction];\n  var wasMeasured = _hiddenLocation.wasMeasured;\n  var isVertical = useMemo(function () {\n    'worklet';\n\n    return direction === DialogDirectionsEnum.DOWN || direction === DialogDirectionsEnum.UP;\n  }, [direction]);\n  var getTranslationInterpolation = useCallback(function (value) {\n    'worklet';\n\n    return interpolate(value, [0, 1], [hiddenLocation, 0], Extrapolation.CLAMP);\n  }, [hiddenLocation]);\n  var getTranslationReverseInterpolation = useCallback(function (value) {\n    'worklet';\n\n    return interpolate(value, [hiddenLocation, 0], [0, 1]);\n  }, [hiddenLocation]);\n  var _onDismiss = useCallback(function () {\n    'worklet';\n\n    runOnJS(setModalVisibility)(false);\n  }, []);\n  var close = useCallback(function () {\n    'worklet';\n\n    visibility.value = withTiming(0, undefined, _onDismiss);\n  }, [_onDismiss]);\n  var open = useCallback(function () {\n    'worklet';\n\n    visibility.value = withSpring(1);\n  }, []);\n  useEffect(function () {\n    if (visible) {\n      setModalVisibility(true);\n    } else if (wasMeasured && modalVisibility) {\n      close();\n    }\n  }, [visible, wasMeasured]);\n  useDidUpdate(function () {\n    if (wasMeasured) {\n      if (modalVisibility) {\n        open();\n      } else if (Constants.isAndroid) {\n        onDismiss == null ? void 0 : onDismiss();\n      }\n    }\n  }, [modalVisibility, wasMeasured]);\n  var alignmentStyle = useMemo(function () {\n    return _objectSpread({\n      flex: 1,\n      alignItems: 'center'\n    }, extractAlignmentsValues(props));\n  }, []);\n  var animatedStyle = useAnimatedStyle(function () {\n    if (isVertical) {\n      return {\n        transform: [{\n          translateY: getTranslationInterpolation(visibility.value)\n        }]\n      };\n    } else {\n      return {\n        transform: [{\n          translateX: getTranslationInterpolation(visibility.value)\n        }]\n      };\n    }\n  });\n  var style = useMemo(function () {\n    return [styles.defaultDialogStyle, {\n      backgroundColor: Colors.$backgroundDefault\n    }, containerStyle, animatedStyle, width ? {\n      width: width\n    } : undefined, height ? {\n      height: height\n    } : undefined];\n  }, [containerStyle, width, height]);\n  var shouldClose = function shouldClose(event) {\n    'worklet';\n\n    var wasPannedOverThreshold = Math.abs(getTranslationInterpolation(visibility.value)) >= Math.abs(hiddenLocation / 3);\n    var velocity;\n    switch (direction) {\n      case DialogDirectionsEnum.DOWN:\n      default:\n        velocity = event.velocityY;\n        break;\n      case DialogDirectionsEnum.UP:\n        velocity = -event.velocityY;\n        break;\n      case DialogDirectionsEnum.LEFT:\n        velocity = -event.velocityX;\n        break;\n      case DialogDirectionsEnum.RIGHT:\n        velocity = event.velocityX;\n        break;\n    }\n    var wasFlung = velocity >= THRESHOLD_VELOCITY;\n    return wasPannedOverThreshold || wasFlung;\n  };\n  var panGesture = Gesture.Pan().onStart(function (event) {\n    initialTranslation.value = getTranslationReverseInterpolation(isVertical ? event.translationY : event.translationX) - visibility.value;\n  }).onUpdate(function (event) {\n    visibility.value = getTranslationReverseInterpolation(isVertical ? event.translationY : event.translationX) - initialTranslation.value;\n  }).onEnd(function (event) {\n    if (shouldClose(event)) {\n      close();\n    } else {\n      open();\n    }\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      dismiss: close\n    };\n  });\n  var renderDialog = function renderDialog() {\n    return _jsx(GestureDetector, {\n      gesture: panGesture,\n      children: _jsxs(View, _objectSpread(_objectSpread({}, containerProps), {}, {\n        reanimated: true,\n        style: style,\n        onLayout: onLayout,\n        ref: setRef,\n        testID: testID,\n        children: [headerProps && _jsx(DialogHeader, _objectSpread({}, headerProps)), children]\n      }))\n    });\n  };\n  var overlayStyle = useAnimatedStyle(function () {\n    return {\n      opacity: visibility.value,\n      backgroundColor: overlayBackgroundColor\n    };\n  }, [overlayBackgroundColor]);\n  var renderOverlayView = function renderOverlayView() {\n    return _jsx(View, {\n      testID: `${testID}.overlayFadingBackground`,\n      absF: true,\n      reanimated: true,\n      style: overlayStyle,\n      pointerEvents: \"none\"\n    });\n  };\n  return _jsxs(Modal, _objectSpread(_objectSpread({\n    transparent: true,\n    animationType: 'none'\n  }, otherModalProps), {}, {\n    testID: `${testID}.modal`,\n    useGestureHandlerRootView: true,\n    visible: modalVisibility,\n    onBackgroundPress: ignoreBackgroundPress ? undefined : close,\n    onRequestClose: ignoreBackgroundPress ? undefined : close,\n    onDismiss: onDismiss,\n    children: [renderOverlayView(), _jsx(View, {\n      useSafeArea: useSafeArea,\n      pointerEvents: 'box-none',\n      style: alignmentStyle,\n      children: renderDialog()\n    })]\n  }));\n};\nDialog.displayName = 'Incubator.Dialog';\nDialog.directions = DialogDirectionsEnum;\nDialog.Header = DialogHeader;\nvar _Dialog = forwardRef(Dialog);\nhoistStatics(_Dialog, Dialog);\nexport default asBaseComponent(_Dialog);\nvar styles = StyleSheet.create({\n  defaultDialogStyle: {\n    marginBottom: Spacings.s5,\n    maxHeight: '60%',\n    width: 250,\n    borderRadius: BorderRadiuses.br20,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["React","useMemo","useCallback","useImperativeHandle","forwardRef","useEffect","useState","StyleSheet","hoistStatics","Extrapolation","interpolate","runOnJS","useAnimatedStyle","useSharedValue","withSpring","withTiming","Gesture","GestureDetector","Spacings","Colors","BorderRadiuses","useDidUpdate","asBaseComponent","Constants","View","Modal","extractAlignmentsValues","useHiddenLocation","DialogHeader","DialogProps","DialogDirections","DialogDirectionsEnum","DialogHeaderProps","jsx","_jsx","jsxs","_jsxs","THRESHOLD_VELOCITY","Dialog","props","ref","_props$visible","visible","headerProps","containerStyle","containerProps","width","height","onDismiss","_props$direction","direction","DOWN","ignoreBackgroundPress","_props$modalProps","modalProps","useSafeArea","testID","children","_modalProps$overlayBa","overlayBackgroundColor","rgba","$backgroundInverted","otherModalProps","_objectWithoutProperties","_excluded","visibility","initialTranslation","_useState","_useState2","_slicedToArray","modalVisibility","setModalVisibility","_useHiddenLocation","setRef","onLayout","_hiddenLocation","hiddenLocation","wasMeasured","isVertical","UP","getTranslationInterpolation","value","CLAMP","getTranslationReverseInterpolation","_onDismiss","close","undefined","open","isAndroid","alignmentStyle","_objectSpread","flex","alignItems","animatedStyle","transform","translateY","translateX","style","styles","defaultDialogStyle","backgroundColor","$backgroundDefault","shouldClose","event","wasPannedOverThreshold","Math","abs","velocity","velocityY","LEFT","velocityX","RIGHT","wasFlung","panGesture","Pan","onStart","translationY","translationX","onUpdate","onEnd","dismiss","renderDialog","gesture","reanimated","overlayStyle","opacity","renderOverlayView","absF","pointerEvents","transparent","animationType","useGestureHandlerRootView","onBackgroundPress","onRequestClose","displayName","directions","Header","_Dialog","create","marginBottom","s5","maxHeight","borderRadius","br20","overflow"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/incubator/Dialog/index.js"],"sourcesContent":["import React, { useMemo, useCallback, useImperativeHandle, forwardRef, useEffect, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { Extrapolation, interpolate, runOnJS, useAnimatedStyle, useSharedValue, withSpring, withTiming } from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { Spacings, Colors, BorderRadiuses } from \"../../style\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Modal from \"../../components/modal\";\nimport { extractAlignmentsValues } from \"../../commons/modifiers\";\nimport useHiddenLocation from \"../hooks/useHiddenLocation\";\nimport DialogHeader from \"./DialogHeader\";\nimport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps } from \"./types\";\nexport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps };\nconst THRESHOLD_VELOCITY = 750;\nconst Dialog = (props, ref) => {\n  const {\n    visible = false,\n    headerProps,\n    containerStyle,\n    containerProps,\n    width,\n    height,\n    onDismiss,\n    direction = DialogDirectionsEnum.DOWN,\n    ignoreBackgroundPress,\n    modalProps = {},\n    useSafeArea,\n    testID,\n    children\n  } = props;\n  const {\n    overlayBackgroundColor = Colors.rgba(Colors.$backgroundInverted, 0.3),\n    ...otherModalProps\n  } = modalProps;\n  const visibility = useSharedValue(0); // value between 0 (closed) and 1 (open)\n  const initialTranslation = useSharedValue(0);\n  const [modalVisibility, setModalVisibility] = useState(visible); // unfortunately this is needed when changing visibility by the user (clicking on an option etc)\n\n  const {\n    setRef,\n    onLayout,\n    hiddenLocation: _hiddenLocation\n  } = useHiddenLocation();\n  const hiddenLocation = _hiddenLocation[direction];\n  const wasMeasured = _hiddenLocation.wasMeasured;\n  const isVertical = useMemo(() => {\n    'worklet';\n\n    return direction === DialogDirectionsEnum.DOWN || direction === DialogDirectionsEnum.UP;\n  }, [direction]);\n  const getTranslationInterpolation = useCallback(value => {\n    'worklet';\n\n    return interpolate(value, [0, 1], [hiddenLocation, 0], Extrapolation.CLAMP);\n  }, [hiddenLocation]);\n  const getTranslationReverseInterpolation = useCallback(value => {\n    'worklet';\n\n    return interpolate(value, [hiddenLocation, 0], [0, 1]);\n  }, [hiddenLocation]);\n  const _onDismiss = useCallback(() => {\n    'worklet';\n\n    runOnJS(setModalVisibility)(false);\n  }, []);\n  const close = useCallback(() => {\n    'worklet';\n\n    visibility.value = withTiming(0, undefined, _onDismiss);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [_onDismiss]);\n  const open = useCallback(() => {\n    'worklet';\n\n    visibility.value = withSpring(1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (visible) {\n      setModalVisibility(true);\n    } else if (wasMeasured && modalVisibility) {\n      // Close when sending visible = false\n      close();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible, wasMeasured]);\n  useDidUpdate(() => {\n    if (wasMeasured) {\n      if (modalVisibility) {\n        open();\n      } else if (Constants.isAndroid) {\n        onDismiss?.();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [modalVisibility, wasMeasured]);\n  const alignmentStyle = useMemo(() => {\n    return {\n      flex: 1,\n      alignItems: 'center',\n      ...extractAlignmentsValues(props)\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881)\n  const animatedStyle = useAnimatedStyle(() => {\n    if (isVertical) {\n      return {\n        transform: [{\n          translateY: getTranslationInterpolation(visibility.value)\n        }]\n      };\n    } else {\n      return {\n        transform: [{\n          translateX: getTranslationInterpolation(visibility.value)\n        }]\n      };\n    }\n  });\n  const style = useMemo(() => {\n    return [styles.defaultDialogStyle, {\n      backgroundColor: Colors.$backgroundDefault\n    }, containerStyle, animatedStyle, width ? {\n      width\n    } : undefined, height ? {\n      height\n    } : undefined];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [containerStyle, width, height]);\n  const shouldClose = event => {\n    'worklet';\n\n    const wasPannedOverThreshold = Math.abs(getTranslationInterpolation(visibility.value)) >= Math.abs(hiddenLocation / 3);\n    let velocity;\n    switch (direction) {\n      case DialogDirectionsEnum.DOWN:\n      default:\n        velocity = event.velocityY;\n        break;\n      case DialogDirectionsEnum.UP:\n        velocity = -event.velocityY;\n        break;\n      case DialogDirectionsEnum.LEFT:\n        velocity = -event.velocityX;\n        break;\n      case DialogDirectionsEnum.RIGHT:\n        velocity = event.velocityX;\n        break;\n    }\n    const wasFlung = velocity >= THRESHOLD_VELOCITY;\n    return wasPannedOverThreshold || wasFlung;\n  };\n  const panGesture = Gesture.Pan().onStart(event => {\n    initialTranslation.value = getTranslationReverseInterpolation(isVertical ? event.translationY : event.translationX) - visibility.value;\n  }).onUpdate(event => {\n    visibility.value = getTranslationReverseInterpolation(isVertical ? event.translationY : event.translationX) - initialTranslation.value;\n  }).onEnd(event => {\n    if (shouldClose(event)) {\n      close();\n    } else {\n      open();\n    }\n  });\n  useImperativeHandle(ref, () => ({\n    dismiss: close\n  }));\n  const renderDialog = () => <GestureDetector gesture={panGesture}>\n      {/* @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881) */}\n      <View {...containerProps} reanimated style={style} onLayout={onLayout} ref={setRef} testID={testID}>\n        {headerProps && <DialogHeader {...headerProps} />}\n        {children}\n      </View>\n    </GestureDetector>;\n  const overlayStyle = useAnimatedStyle(() => {\n    return {\n      opacity: visibility.value,\n      backgroundColor: overlayBackgroundColor\n    };\n  }, [overlayBackgroundColor]);\n  const renderOverlayView = () => <View testID={`${testID}.overlayFadingBackground`} absF reanimated style={overlayStyle} pointerEvents=\"none\" />;\n  return <Modal transparent animationType={'none'} {...otherModalProps} testID={`${testID}.modal`} useGestureHandlerRootView visible={modalVisibility} onBackgroundPress={ignoreBackgroundPress ? undefined : close} onRequestClose={ignoreBackgroundPress ? undefined : close} onDismiss={onDismiss}>\n      {renderOverlayView()}\n      <View useSafeArea={useSafeArea} pointerEvents={'box-none'} style={alignmentStyle}>\n        {renderDialog()}\n      </View>\n    </Modal>;\n};\nDialog.displayName = 'Incubator.Dialog';\nDialog.directions = DialogDirectionsEnum;\nDialog.Header = DialogHeader;\nconst _Dialog = forwardRef(Dialog);\nhoistStatics(_Dialog, Dialog);\nexport default asBaseComponent(_Dialog);\nconst styles = StyleSheet.create({\n  defaultDialogStyle: {\n    marginBottom: Spacings.s5,\n    maxHeight: '60%',\n    width: 250,\n    borderRadius: BorderRadiuses.br20,\n    overflow: 'hidden'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}