{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"onPress\", \"disabled\", \"style\", \"testID\", \"animateLayout\", \"modifiers\", \"forwardedRef\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _forEach from \"lodash/forEach\";\nimport _isEqual from \"lodash/isEqual\";\nimport React, { PureComponent } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { asBaseComponent, forwardRef, Constants } from \"../../commons/new\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Icon from \"../icon\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE } from \"./ButtonConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n  function Button(props) {\n    var _this;\n    _classCallCheck(this, Button);\n    _this = _callSuper(this, Button, [props]);\n    _this.state = {\n      size: undefined\n    };\n    _this.styles = createStyles();\n    _this.onLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n      if (_this.props.round) {\n        var width = event.nativeEvent.layout.width;\n        var size = height >= width ? height : width;\n        _this.setState({\n          size: size\n        });\n      }\n      if (Constants.isAndroid && Platform.Version <= 17) {\n        _this.setState({\n          borderRadius: height / 2\n        });\n      }\n    };\n    return _this;\n  }\n  _createClass(Button, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.animateLayout && !_isEqual(prevProps, this.props)) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      }\n    }\n  }, {\n    key: \"isOutline\",\n    get: function get() {\n      var _this$props = this.props,\n        outline = _this$props.outline,\n        outlineColor = _this$props.outlineColor;\n      return Boolean(outline || outlineColor);\n    }\n  }, {\n    key: \"isLink\",\n    get: function get() {\n      var _this$props2 = this.props,\n        link = _this$props2.link,\n        hyperlink = _this$props2.hyperlink;\n      return link || hyperlink;\n    }\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      return !this.isOutline && !this.isLink;\n    }\n  }, {\n    key: \"isIconButton\",\n    get: function get() {\n      var _this$props3 = this.props,\n        iconSource = _this$props3.iconSource,\n        label = _this$props3.label;\n      return iconSource && !label;\n    }\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      var _this$props4 = this.props,\n        disabled = _this$props4.disabled,\n        outline = _this$props4.outline,\n        disabledBackgroundColor = _this$props4.disabledBackgroundColor,\n        backgroundColor = _this$props4.backgroundColor,\n        modifiers = _this$props4.modifiers;\n      var modifiersBackgroundColor = modifiers.backgroundColor;\n      if (!outline && !this.isLink) {\n        if (disabled) {\n          return disabledBackgroundColor || Colors.$backgroundDisabled;\n        }\n        return backgroundColor || modifiersBackgroundColor || Colors.$backgroundPrimaryHeavy;\n      }\n      return 'transparent';\n    }\n  }, {\n    key: \"getActiveBackgroundColor\",\n    value: function getActiveBackgroundColor() {\n      var getActiveBackgroundColor = this.props.getActiveBackgroundColor;\n      if (getActiveBackgroundColor) {\n        return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n      }\n    }\n  }, {\n    key: \"getLabelColor\",\n    value: function getLabelColor() {\n      var _this$props5 = this.props,\n        linkColor = _this$props5.linkColor,\n        outline = _this$props5.outline,\n        outlineColor = _this$props5.outlineColor,\n        disabled = _this$props5.disabled,\n        propsColor = _this$props5.color,\n        backgroundColor = _this$props5.backgroundColor,\n        modifiers = _this$props5.modifiers;\n      var modifiersColor = modifiers.color;\n      var isLink = this.isLink;\n      var color = Colors.$textDefaultLight;\n      if (isLink) {\n        color = linkColor || Colors.$textPrimary;\n      } else if (outline) {\n        color = outlineColor || Colors.$textPrimary;\n      } else if (this.isIconButton) {\n        color = backgroundColor === 'transparent' ? undefined : Colors.$iconDefaultLight;\n      }\n      if (disabled && (isLink || outline)) {\n        return Colors.$textDisabled;\n      }\n      color = propsColor || modifiersColor || color;\n      return color;\n    }\n  }, {\n    key: \"getLabelSizeStyle\",\n    value: function getLabelSizeStyle() {\n      var size = this.props.size || DEFAULT_SIZE;\n      var LABEL_STYLE_BY_SIZE = {};\n      LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = Typography.text80;\n      LABEL_STYLE_BY_SIZE[Button.sizes.small] = Typography.text80;\n      LABEL_STYLE_BY_SIZE[Button.sizes.medium] = Typography.text80;\n      LABEL_STYLE_BY_SIZE[Button.sizes.large] = undefined;\n      var labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n      return labelSizeStyle;\n    }\n  }, {\n    key: \"getContainerSizeStyle\",\n    value: function getContainerSizeStyle() {\n      var _this$props6 = this.props,\n        outline = _this$props6.outline,\n        avoidMinWidth = _this$props6.avoidMinWidth,\n        avoidInnerPadding = _this$props6.avoidInnerPadding,\n        round = _this$props6.round,\n        propsSize = _this$props6.size,\n        propsOutlineWidth = _this$props6.outlineWidth;\n      var size = propsSize || DEFAULT_SIZE;\n      var outlineWidth = propsOutlineWidth || 1;\n      var CONTAINER_STYLE_BY_SIZE = {};\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.XSMALL\n      } : {\n        paddingVertical: PADDINGS.XSMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n        minWidth: MIN_WIDTH.XSMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.SMALL\n      } : {\n        paddingVertical: PADDINGS.SMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n        minWidth: MIN_WIDTH.SMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.MEDIUM\n      } : {\n        paddingVertical: PADDINGS.MEDIUM,\n        paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n        minWidth: MIN_WIDTH.MEDIUM\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.LARGE\n      } : {\n        paddingVertical: PADDINGS.LARGE,\n        paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n        minWidth: MIN_WIDTH.LARGE\n      };\n      if (outline) {\n        _forEach(CONTAINER_STYLE_BY_SIZE, function (style) {\n          if (round) {\n            style.padding -= outlineWidth;\n          } else {\n            style.paddingVertical -= outlineWidth;\n            style.paddingHorizontal -= outlineWidth;\n          }\n        });\n      }\n      var containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n      if (this.isLink || this.isIconButton && !round) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n        containerSizeStyle.minWidth = undefined;\n      }\n      if (avoidMinWidth) {\n        containerSizeStyle.minWidth = undefined;\n      }\n      if (avoidInnerPadding) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n      }\n      return containerSizeStyle;\n    }\n  }, {\n    key: \"getOutlineStyle\",\n    value: function getOutlineStyle() {\n      var _this$props7 = this.props,\n        outline = _this$props7.outline,\n        outlineColor = _this$props7.outlineColor,\n        outlineWidth = _this$props7.outlineWidth,\n        disabled = _this$props7.disabled;\n      var outlineStyle;\n      if ((outline || outlineColor) && !this.isLink) {\n        outlineStyle = {\n          borderWidth: outlineWidth || 1,\n          borderColor: outlineColor || Colors.$outlinePrimary\n        };\n        if (disabled) {\n          outlineStyle.borderColor = Colors.$outlineDisabled;\n        }\n      }\n      return outlineStyle;\n    }\n  }, {\n    key: \"getBorderRadiusStyle\",\n    value: function getBorderRadiusStyle() {\n      var _this$props8 = this.props,\n        fullWidth = _this$props8.fullWidth,\n        propsBorderRadius = _this$props8.borderRadius,\n        modifiers = _this$props8.modifiers;\n      var modifiersBorderRadius = modifiers.borderRadius;\n      if (this.isLink || fullWidth || propsBorderRadius === 0) {\n        return {\n          borderRadius: 0\n        };\n      }\n      var borderRadius = propsBorderRadius || modifiersBorderRadius || BorderRadiuses.br100;\n      return {\n        borderRadius: borderRadius\n      };\n    }\n  }, {\n    key: \"getShadowStyle\",\n    value: function getShadowStyle() {\n      var backgroundColor = this.getBackgroundColor();\n      var enableShadow = this.props.enableShadow;\n      if (enableShadow) {\n        return [this.styles.shadowStyle, {\n          shadowColor: backgroundColor\n        }];\n      }\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$props9 = this.props,\n        disabled = _this$props9.disabled,\n        propsIconStyle = _this$props9.iconStyle,\n        iconOnRight = _this$props9.iconOnRight,\n        propsSize = _this$props9.size;\n      var size = propsSize || DEFAULT_SIZE;\n      var iconStyle = {\n        tintColor: this.getLabelColor()\n      };\n      var marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n      if (!this.isIconButton) {\n        if (iconOnRight) {\n          iconStyle.marginLeft = marginSide;\n        } else {\n          iconStyle.marginRight = marginSide;\n        }\n      }\n      if (disabled && !this.isFilled) {\n        iconStyle.tintColor = Colors.$iconDisabled;\n      }\n      return [iconStyle, propsIconStyle];\n    }\n  }, {\n    key: \"getAnimationDirectionStyle\",\n    value: function getAnimationDirectionStyle() {\n      var animateTo = this.props.animateTo;\n      var style;\n      switch (animateTo) {\n        case 'left':\n          style = {\n            alignSelf: 'flex-start'\n          };\n          break;\n        case 'right':\n          style = {\n            alignSelf: 'flex-end'\n          };\n          break;\n        default:\n          break;\n      }\n      return style;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props10 = this.props,\n        iconSource = _this$props10.iconSource,\n        supportRTL = _this$props10.supportRTL,\n        testID = _this$props10.testID,\n        iconProps = _this$props10.iconProps;\n      if (iconSource) {\n        var iconStyle = this.getIconStyle();\n        if (typeof iconSource === 'function') {\n          return iconSource(iconStyle);\n        } else {\n          if (Constants.isWeb) {\n            return _jsx(Icon, _objectSpread({\n              style: iconStyle,\n              tintColor: Colors.$iconDefault,\n              source: iconSource,\n              testID: `${testID}.icon`\n            }, iconProps));\n          }\n          return _jsx(Image, _objectSpread({\n            source: iconSource,\n            supportRTL: supportRTL,\n            style: iconStyle,\n            testID: `${testID}.icon`\n          }, iconProps));\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$props11 = this.props,\n        label = _this$props11.label,\n        labelStyle = _this$props11.labelStyle,\n        labelProps = _this$props11.labelProps,\n        hyperlink = _this$props11.hyperlink,\n        testID = _this$props11.testID,\n        modifiers = _this$props11.modifiers;\n      var color = this.getLabelColor();\n      var labelSizeStyle = this.getLabelSizeStyle();\n      var typography = modifiers.typography;\n      if (label) {\n        return _jsx(Text, _objectSpread(_objectSpread({\n          style: [this.styles.text, !!color && {\n            color: color\n          }, labelSizeStyle, typography, labelStyle],\n          underline: hyperlink,\n          numberOfLines: 1,\n          testID: `${testID}.label`,\n          recorderTag: 'unmask'\n        }, labelProps), {}, {\n          children: label\n        }));\n      }\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props12 = this.props,\n        onPress = _this$props12.onPress,\n        disabled = _this$props12.disabled,\n        style = _this$props12.style,\n        testID = _this$props12.testID,\n        animateLayout = _this$props12.animateLayout,\n        modifiers = _this$props12.modifiers,\n        forwardedRef = _this$props12.forwardedRef,\n        others = _objectWithoutProperties(_this$props12, _excluded);\n      var shadowStyle = this.getShadowStyle();\n      var margins = modifiers.margins,\n        paddings = modifiers.paddings;\n      var backgroundColor = this.getBackgroundColor();\n      var outlineStyle = this.getOutlineStyle();\n      var containerSizeStyle = this.getContainerSizeStyle();\n      var borderRadiusStyle = this.getBorderRadiusStyle();\n      return _jsxs(TouchableOpacity, _objectSpread(_objectSpread({\n        row: true,\n        centerV: true,\n        style: [this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, this.isLink && this.styles.innerContainerLink, shadowStyle, margins, paddings, {\n          backgroundColor: backgroundColor\n        }, borderRadiusStyle, outlineStyle, style],\n        activeOpacity: 0.6,\n        activeBackgroundColor: this.getActiveBackgroundColor(),\n        onLayout: this.onLayout,\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID\n      }, others), {}, {\n        ref: forwardedRef,\n        children: [this.props.children, this.props.iconOnRight ? this.renderLabel() : this.renderIcon(), this.props.iconOnRight ? this.renderIcon() : this.renderLabel()]\n      }));\n    }\n  }]);\n  return Button;\n}(PureComponent);\nButton.displayName = 'Button';\nButton.defaultProps = DEFAULT_PROPS;\nButton.sizes = ButtonSize;\nButton.animationDirection = ButtonAnimationDirection;\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: _objectSpread({\n      backgroundColor: 'transparent',\n      flexDirection: 'row'\n    }, Typography.text70)\n  });\n}\nexport { Button };\nvar modifiersOptions = {\n  paddings: true,\n  margins: true,\n  borderRadius: true,\n  backgroundColor: true,\n  typography: true,\n  color: true\n};\nexport default asBaseComponent(forwardRef(Button), {\n  modifiersOptions: modifiersOptions\n});","map":{"version":3,"names":["_forEach","_isEqual","React","PureComponent","Platform","StyleSheet","LayoutAnimation","asBaseComponent","forwardRef","Constants","Colors","Typography","BorderRadiuses","TouchableOpacity","Text","Image","Icon","ButtonSize","ButtonAnimationDirection","ButtonProps","DEFAULT_PROPS","PADDINGS","HORIZONTAL_PADDINGS","MIN_WIDTH","DEFAULT_SIZE","jsx","_jsx","jsxs","_jsxs","Button","_PureComponent","_inherits","props","_this","_classCallCheck","_callSuper","state","size","undefined","styles","createStyles","onLayout","event","height","nativeEvent","layout","round","width","setState","isAndroid","Version","borderRadius","_createClass","key","value","componentDidUpdate","prevProps","animateLayout","configureNext","Presets","easeInEaseOut","get","_this$props","outline","outlineColor","Boolean","_this$props2","link","hyperlink","isOutline","isLink","_this$props3","iconSource","label","getBackgroundColor","_this$props4","disabled","disabledBackgroundColor","backgroundColor","modifiers","modifiersBackgroundColor","$backgroundDisabled","$backgroundPrimaryHeavy","getActiveBackgroundColor","getLabelColor","_this$props5","linkColor","propsColor","color","modifiersColor","$textDefaultLight","$textPrimary","isIconButton","$iconDefaultLight","$textDisabled","getLabelSizeStyle","LABEL_STYLE_BY_SIZE","sizes","xSmall","text80","small","medium","large","labelSizeStyle","getContainerSizeStyle","_this$props6","avoidMinWidth","avoidInnerPadding","propsSize","propsOutlineWidth","outlineWidth","CONTAINER_STYLE_BY_SIZE","padding","XSMALL","paddingVertical","paddingHorizontal","minWidth","SMALL","MEDIUM","LARGE","style","containerSizeStyle","getOutlineStyle","_this$props7","outlineStyle","borderWidth","borderColor","$outlinePrimary","$outlineDisabled","getBorderRadiusStyle","_this$props8","fullWidth","propsBorderRadius","modifiersBorderRadius","br100","getShadowStyle","enableShadow","shadowStyle","shadowColor","getIconStyle","_this$props9","propsIconStyle","iconStyle","iconOnRight","tintColor","marginSide","includes","marginLeft","marginRight","isFilled","$iconDisabled","getAnimationDirectionStyle","animateTo","alignSelf","renderIcon","_this$props10","supportRTL","testID","iconProps","isWeb","_objectSpread","$iconDefault","source","renderLabel","_this$props11","labelStyle","labelProps","typography","text","underline","numberOfLines","recorderTag","children","render","_this$props12","onPress","forwardedRef","others","_objectWithoutProperties","_excluded","margins","paddings","borderRadiusStyle","row","centerV","container","innerContainerLink","activeOpacity","activeBackgroundColor","ref","displayName","defaultProps","animationDirection","create","justifyContent","alignItems","br0","shadowOffset","shadowOpacity","shadowRadius","elevation","flexDirection","text70","modifiersOptions"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/button/index.js"],"sourcesContent":["import _forEach from \"lodash/forEach\";\nimport _isEqual from \"lodash/isEqual\";\nimport React, { PureComponent } from 'react';\nimport { Platform, StyleSheet, LayoutAnimation } from 'react-native';\nimport { asBaseComponent, forwardRef, Constants } from \"../../commons/new\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Icon from \"../icon\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE } from \"./ButtonConstants\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nclass Button extends PureComponent {\n  static displayName = 'Button';\n  static defaultProps = DEFAULT_PROPS;\n  static sizes = ButtonSize;\n  static animationDirection = ButtonAnimationDirection;\n\n  // This redundant constructor for some reason fix tests :/\n  // eslint-disable-next-line\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    size: undefined\n  };\n  styles = createStyles();\n  componentDidUpdate(prevProps) {\n    if (this.props.animateLayout && !_isEqual(prevProps, this.props)) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  }\n\n  // This method will be called more than once in case of layout change!\n  onLayout = event => {\n    const height = event.nativeEvent.layout.height;\n    if (this.props.round) {\n      const width = event.nativeEvent.layout.width;\n      const size = height >= width ? height : width;\n      this.setState({\n        size\n      });\n    }\n    if (Constants.isAndroid && Platform.Version <= 17) {\n      this.setState({\n        borderRadius: height / 2\n      });\n    }\n  };\n  get isOutline() {\n    const {\n      outline,\n      outlineColor\n    } = this.props;\n    return Boolean(outline || outlineColor);\n  }\n  get isLink() {\n    const {\n      link,\n      hyperlink\n    } = this.props;\n    return link || hyperlink;\n  }\n  get isFilled() {\n    return !this.isOutline && !this.isLink;\n  }\n  get isIconButton() {\n    const {\n      iconSource,\n      label\n    } = this.props;\n    return iconSource && !label;\n  }\n  getBackgroundColor() {\n    const {\n      disabled,\n      outline,\n      disabledBackgroundColor,\n      backgroundColor,\n      modifiers\n    } = this.props;\n    const {\n      backgroundColor: modifiersBackgroundColor\n    } = modifiers;\n    if (!outline && !this.isLink) {\n      if (disabled) {\n        return disabledBackgroundColor || Colors.$backgroundDisabled;\n      }\n      return backgroundColor || modifiersBackgroundColor || Colors.$backgroundPrimaryHeavy;\n    }\n    return 'transparent';\n  }\n  getActiveBackgroundColor() {\n    const {\n      getActiveBackgroundColor\n    } = this.props;\n    if (getActiveBackgroundColor) {\n      return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n    }\n  }\n  getLabelColor() {\n    const {\n      linkColor,\n      outline,\n      outlineColor,\n      disabled,\n      color: propsColor,\n      backgroundColor,\n      modifiers\n    } = this.props;\n    const {\n      color: modifiersColor\n    } = modifiers;\n    const isLink = this.isLink;\n    let color = Colors.$textDefaultLight;\n    if (isLink) {\n      color = linkColor || Colors.$textPrimary;\n    } else if (outline) {\n      color = outlineColor || Colors.$textPrimary;\n    } else if (this.isIconButton) {\n      color = backgroundColor === 'transparent' ? undefined : Colors.$iconDefaultLight;\n    }\n    if (disabled && (isLink || outline)) {\n      return Colors.$textDisabled;\n    }\n    color = propsColor || modifiersColor || color;\n    return color;\n  }\n  getLabelSizeStyle() {\n    const size = this.props.size || DEFAULT_SIZE;\n    const LABEL_STYLE_BY_SIZE = {};\n    LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = Typography.text80;\n    LABEL_STYLE_BY_SIZE[Button.sizes.small] = Typography.text80;\n    LABEL_STYLE_BY_SIZE[Button.sizes.medium] = Typography.text80;\n    LABEL_STYLE_BY_SIZE[Button.sizes.large] = undefined;\n    const labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n    return labelSizeStyle;\n  }\n  getContainerSizeStyle() {\n    const {\n      outline,\n      avoidMinWidth,\n      avoidInnerPadding,\n      round,\n      size: propsSize,\n      outlineWidth: propsOutlineWidth\n    } = this.props;\n    const size = propsSize || DEFAULT_SIZE;\n    const outlineWidth = propsOutlineWidth || 1;\n    const CONTAINER_STYLE_BY_SIZE = {};\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.XSMALL\n    } : {\n      paddingVertical: PADDINGS.XSMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n      minWidth: MIN_WIDTH.XSMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.SMALL\n    } : {\n      paddingVertical: PADDINGS.SMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n      minWidth: MIN_WIDTH.SMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.MEDIUM\n    } : {\n      paddingVertical: PADDINGS.MEDIUM,\n      paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n      minWidth: MIN_WIDTH.MEDIUM\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.LARGE\n    } : {\n      paddingVertical: PADDINGS.LARGE,\n      paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n      minWidth: MIN_WIDTH.LARGE\n    };\n    if (outline) {\n      _forEach(CONTAINER_STYLE_BY_SIZE, style => {\n        if (round) {\n          style.padding -= outlineWidth; // eslint-disable-line\n        } else {\n          style.paddingVertical -= outlineWidth; // eslint-disable-line\n          style.paddingHorizontal -= outlineWidth; // eslint-disable-line\n        }\n      });\n    }\n    const containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n    if (this.isLink || this.isIconButton && !round) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n      containerSizeStyle.minWidth = undefined;\n    }\n    if (avoidMinWidth) {\n      containerSizeStyle.minWidth = undefined;\n    }\n    if (avoidInnerPadding) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n    }\n    return containerSizeStyle;\n  }\n  getOutlineStyle() {\n    const {\n      outline,\n      outlineColor,\n      outlineWidth,\n      disabled\n    } = this.props;\n    let outlineStyle;\n    if ((outline || outlineColor) && !this.isLink) {\n      outlineStyle = {\n        borderWidth: outlineWidth || 1,\n        borderColor: outlineColor || Colors.$outlinePrimary\n      };\n      if (disabled) {\n        outlineStyle.borderColor = Colors.$outlineDisabled;\n      }\n    }\n    return outlineStyle;\n  }\n  getBorderRadiusStyle() {\n    const {\n      fullWidth,\n      borderRadius: propsBorderRadius,\n      modifiers\n    } = this.props;\n    const {\n      borderRadius: modifiersBorderRadius\n    } = modifiers;\n    if (this.isLink || fullWidth || propsBorderRadius === 0) {\n      return {\n        borderRadius: 0\n      };\n    }\n    const borderRadius = propsBorderRadius || modifiersBorderRadius || BorderRadiuses.br100;\n    return {\n      borderRadius\n    };\n  }\n  getShadowStyle() {\n    const backgroundColor = this.getBackgroundColor();\n    const {\n      enableShadow\n    } = this.props;\n    if (enableShadow) {\n      return [this.styles.shadowStyle, {\n        shadowColor: backgroundColor\n      }];\n    }\n  }\n  getIconStyle() {\n    const {\n      disabled,\n      iconStyle: propsIconStyle,\n      iconOnRight,\n      size: propsSize\n    } = this.props;\n    const size = propsSize || DEFAULT_SIZE;\n    const iconStyle = {\n      tintColor: this.getLabelColor()\n    };\n    const marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n    if (!this.isIconButton) {\n      if (iconOnRight) {\n        iconStyle.marginLeft = marginSide;\n      } else {\n        iconStyle.marginRight = marginSide;\n      }\n    }\n    if (disabled && !this.isFilled) {\n      iconStyle.tintColor = Colors.$iconDisabled;\n    }\n    return [iconStyle, propsIconStyle];\n  }\n  getAnimationDirectionStyle() {\n    const {\n      animateTo\n    } = this.props;\n    let style;\n    switch (animateTo) {\n      case 'left':\n        style = {\n          alignSelf: 'flex-start'\n        };\n        break;\n      case 'right':\n        style = {\n          alignSelf: 'flex-end'\n        };\n        break;\n      default:\n        // 'center' is the default\n        break;\n    }\n    return style;\n  }\n  renderIcon() {\n    const {\n      iconSource,\n      supportRTL,\n      testID,\n      iconProps\n    } = this.props;\n    if (iconSource) {\n      const iconStyle = this.getIconStyle();\n      if (typeof iconSource === 'function') {\n        return iconSource(iconStyle);\n      } else {\n        if (Constants.isWeb) {\n          return <Icon style={iconStyle} tintColor={Colors.$iconDefault} source={iconSource} testID={`${testID}.icon`} {...iconProps} />;\n        }\n        return <Image source={iconSource} supportRTL={supportRTL} style={iconStyle} testID={`${testID}.icon`} {...iconProps} />;\n      }\n    }\n    return null;\n  }\n  renderLabel() {\n    const {\n      label,\n      labelStyle,\n      labelProps,\n      hyperlink,\n      testID,\n      modifiers\n    } = this.props;\n    const color = this.getLabelColor();\n    const labelSizeStyle = this.getLabelSizeStyle();\n    const {\n      typography\n    } = modifiers;\n    if (label) {\n      return <Text style={[this.styles.text, !!color && {\n        color\n      }, labelSizeStyle, typography, labelStyle]} underline={hyperlink} numberOfLines={1} testID={`${testID}.label`} recorderTag={'unmask'} {...labelProps}>\n          {label}\n        </Text>;\n    }\n    return null;\n  }\n  render() {\n    const {\n      onPress,\n      disabled,\n      style,\n      testID,\n      animateLayout,\n      modifiers,\n      forwardedRef,\n      ...others\n    } = this.props;\n    const shadowStyle = this.getShadowStyle();\n    const {\n      margins,\n      paddings\n    } = modifiers;\n    const backgroundColor = this.getBackgroundColor();\n    const outlineStyle = this.getOutlineStyle();\n    const containerSizeStyle = this.getContainerSizeStyle();\n    const borderRadiusStyle = this.getBorderRadiusStyle();\n    return <TouchableOpacity row centerV style={[this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, this.isLink && this.styles.innerContainerLink, shadowStyle, margins, paddings, {\n      backgroundColor\n    }, borderRadiusStyle, outlineStyle, style]} activeOpacity={0.6} activeBackgroundColor={this.getActiveBackgroundColor()} onLayout={this.onLayout} onPress={onPress} disabled={disabled} testID={testID} {...others} ref={forwardedRef}>\n        {this.props.children}\n        {this.props.iconOnRight ? this.renderLabel() : this.renderIcon()}\n        {this.props.iconOnRight ? this.renderIcon() : this.renderLabel()}\n      </TouchableOpacity>;\n  }\n}\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: {\n      backgroundColor: 'transparent',\n      flexDirection: 'row',\n      ...Typography.text70\n    }\n  });\n}\nexport { Button }; // For tests\n\nconst modifiersOptions = {\n  paddings: true,\n  margins: true,\n  borderRadius: true,\n  backgroundColor: true,\n  typography: true,\n  color: true\n};\nexport default asBaseComponent(forwardRef(Button), {\n  modifiersOptions\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}