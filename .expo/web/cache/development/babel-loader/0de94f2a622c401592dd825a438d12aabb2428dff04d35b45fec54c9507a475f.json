{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport ReactNative from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nvar CustomInputControllerTemp = NativeModules.CustomInputControllerTemp;\nvar TextInputKeyboardManager = _createClass(function TextInputKeyboardManager() {\n  _classCallCheck(this, TextInputKeyboardManager);\n});\nTextInputKeyboardManager.setInputComponent = function (textInputRef, _ref) {\n  var component = _ref.component,\n    initialProps = _ref.initialProps,\n    useSafeArea = _ref.useSafeArea;\n  if (!textInputRef || !CustomInputControllerTemp) {\n    return;\n  }\n  var reactTag = findNodeHandle(textInputRef);\n  if (reactTag) {\n    CustomInputControllerTemp.presentCustomInputComponent(reactTag, {\n      component: component,\n      initialProps: initialProps,\n      useSafeArea: useSafeArea\n    });\n  }\n};\nTextInputKeyboardManager.removeInputComponent = function (textInputRef) {\n  if (!textInputRef || !CustomInputControllerTemp) {\n    return;\n  }\n  var reactTag = findNodeHandle(textInputRef);\n  if (reactTag) {\n    CustomInputControllerTemp.resetInput(reactTag);\n  }\n};\nTextInputKeyboardManager.dismissKeyboard = function () {\n  CustomInputControllerTemp.dismissKeyboard();\n};\nTextInputKeyboardManager.toggleExpandKeyboard = function (textInputRef, expand) {\n  var performLayoutAnimation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (textInputRef) {\n    if (performLayoutAnimation) {\n      LayoutAnimation.configureNext(springAnimation);\n    }\n    var reactTag = findNodeHandle(textInputRef);\n    if (expand) {\n      CustomInputControllerTemp.expandFullScreenForInput(reactTag);\n    } else {\n      CustomInputControllerTemp.resetSizeForInput(reactTag);\n    }\n  }\n};\nexport { TextInputKeyboardManager as default };\nfunction findNodeHandle(ref) {\n  return ReactNative.findNodeHandle(ref.current || ref);\n}\nvar springAnimation = {\n  duration: 400,\n  create: {\n    type: LayoutAnimation.Types.linear,\n    property: LayoutAnimation.Properties.opacity\n  },\n  update: {\n    type: LayoutAnimation.Types.spring,\n    springDamping: 1.0\n  },\n  delete: {\n    type: LayoutAnimation.Types.linear,\n    property: LayoutAnimation.Properties.opacity\n  }\n};","map":{"version":3,"names":["ReactNative","NativeModules","LayoutAnimation","CustomInputControllerTemp","TextInputKeyboardManager","_createClass","_classCallCheck","setInputComponent","textInputRef","_ref","component","initialProps","useSafeArea","reactTag","findNodeHandle","presentCustomInputComponent","removeInputComponent","resetInput","dismissKeyboard","toggleExpandKeyboard","expand","performLayoutAnimation","arguments","length","undefined","configureNext","springAnimation","expandFullScreenForInput","resetSizeForInput","default","ref","current","duration","create","type","Types","linear","property","Properties","opacity","update","spring","springDamping","delete"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/lib/components/Keyboard/KeyboardInput/TextInputKeyboardManager/TextInputKeyboardManager.ios.js"],"sourcesContent":["import ReactNative, { NativeModules, LayoutAnimation } from 'react-native';\nconst CustomInputControllerTemp = NativeModules.CustomInputControllerTemp;\nexport default class TextInputKeyboardManager {\n  static setInputComponent = (textInputRef, {\n    component,\n    initialProps,\n    useSafeArea\n  }) => {\n    if (!textInputRef || !CustomInputControllerTemp) {\n      return;\n    }\n    const reactTag = findNodeHandle(textInputRef);\n    if (reactTag) {\n      CustomInputControllerTemp.presentCustomInputComponent(reactTag, {\n        component,\n        initialProps,\n        useSafeArea\n      });\n    }\n  };\n  static removeInputComponent = textInputRef => {\n    if (!textInputRef || !CustomInputControllerTemp) {\n      return;\n    }\n    const reactTag = findNodeHandle(textInputRef);\n    if (reactTag) {\n      CustomInputControllerTemp.resetInput(reactTag);\n    }\n  };\n  static dismissKeyboard = () => {\n    CustomInputControllerTemp.dismissKeyboard();\n  };\n  static toggleExpandKeyboard = (textInputRef, expand, performLayoutAnimation = false) => {\n    if (textInputRef) {\n      if (performLayoutAnimation) {\n        LayoutAnimation.configureNext(springAnimation);\n      }\n      const reactTag = findNodeHandle(textInputRef);\n      if (expand) {\n        CustomInputControllerTemp.expandFullScreenForInput(reactTag);\n      } else {\n        CustomInputControllerTemp.resetSizeForInput(reactTag);\n      }\n    }\n  };\n}\nfunction findNodeHandle(ref) {\n  return ReactNative.findNodeHandle(ref.current || ref);\n}\nconst springAnimation = {\n  duration: 400,\n  create: {\n    type: LayoutAnimation.Types.linear,\n    property: LayoutAnimation.Properties.opacity\n  },\n  update: {\n    type: LayoutAnimation.Types.spring,\n    springDamping: 1.0\n  },\n  delete: {\n    type: LayoutAnimation.Types.linear,\n    property: LayoutAnimation.Properties.opacity\n  }\n};"],"mappings":";;OAAOA,WAAW;AAAA,OAAAC,aAAA;AAAA,OAAAC,eAAA;AAClB,IAAMC,yBAAyB,GAAGF,aAAa,CAACE,yBAAyB;AAAC,IACrDC,wBAAwB,GAAAC,YAAA,UAAAD,yBAAA;EAAAE,eAAA,OAAAF,wBAAA;AAAA;AAAxBA,wBAAwB,CACpCG,iBAAiB,GAAG,UAACC,YAAY,EAAAC,IAAA,EAIlC;EAAA,IAHJC,SAAS,GAAAD,IAAA,CAATC,SAAS;IACTC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IACZC,WAAW,GAAAH,IAAA,CAAXG,WAAW;EAEX,IAAI,CAACJ,YAAY,IAAI,CAACL,yBAAyB,EAAE;IAC/C;EACF;EACA,IAAMU,QAAQ,GAAGC,cAAc,CAACN,YAAY,CAAC;EAC7C,IAAIK,QAAQ,EAAE;IACZV,yBAAyB,CAACY,2BAA2B,CAACF,QAAQ,EAAE;MAC9DH,SAAS,EAATA,SAAS;MACTC,YAAY,EAAZA,YAAY;MACZC,WAAW,EAAXA;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAjBkBR,wBAAwB,CAkBpCY,oBAAoB,GAAG,UAAAR,YAAY,EAAI;EAC5C,IAAI,CAACA,YAAY,IAAI,CAACL,yBAAyB,EAAE;IAC/C;EACF;EACA,IAAMU,QAAQ,GAAGC,cAAc,CAACN,YAAY,CAAC;EAC7C,IAAIK,QAAQ,EAAE;IACZV,yBAAyB,CAACc,UAAU,CAACJ,QAAQ,CAAC;EAChD;AACF,CAAC;AA1BkBT,wBAAwB,CA2BpCc,eAAe,GAAG,YAAM;EAC7Bf,yBAAyB,CAACe,eAAe,CAAC,CAAC;AAC7C,CAAC;AA7BkBd,wBAAwB,CA8BpCe,oBAAoB,GAAG,UAACX,YAAY,EAAEY,MAAM,EAAqC;EAAA,IAAnCC,sBAAsB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACjF,IAAId,YAAY,EAAE;IAChB,IAAIa,sBAAsB,EAAE;MAC1BnB,eAAe,CAACuB,aAAa,CAACC,eAAe,CAAC;IAChD;IACA,IAAMb,QAAQ,GAAGC,cAAc,CAACN,YAAY,CAAC;IAC7C,IAAIY,MAAM,EAAE;MACVjB,yBAAyB,CAACwB,wBAAwB,CAACd,QAAQ,CAAC;IAC9D,CAAC,MAAM;MACLV,yBAAyB,CAACyB,iBAAiB,CAACf,QAAQ,CAAC;IACvD;EACF;AACF,CAAC;AAAA,SA1CkBT,wBAAwB,IAAAyB,OAAA;AA4C7C,SAASf,cAAcA,CAACgB,GAAG,EAAE;EAC3B,OAAO9B,WAAW,CAACc,cAAc,CAACgB,GAAG,CAACC,OAAO,IAAID,GAAG,CAAC;AACvD;AACA,IAAMJ,eAAe,GAAG;EACtBM,QAAQ,EAAE,GAAG;EACbC,MAAM,EAAE;IACNC,IAAI,EAAEhC,eAAe,CAACiC,KAAK,CAACC,MAAM;IAClCC,QAAQ,EAAEnC,eAAe,CAACoC,UAAU,CAACC;EACvC,CAAC;EACDC,MAAM,EAAE;IACNN,IAAI,EAAEhC,eAAe,CAACiC,KAAK,CAACM,MAAM;IAClCC,aAAa,EAAE;EACjB,CAAC;EACDC,MAAM,EAAE;IACNT,IAAI,EAAEhC,eAAe,CAACiC,KAAK,CAACC,MAAM;IAClCC,QAAQ,EAAEnC,eAAe,CAACoC,UAAU,CAACC;EACvC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}