{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isString from \"lodash/isString\";\nimport React, { Component, isValidElement } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Typography, Spacings, Colors, BorderRadiuses, Shadows } from \"../../style\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Modal from \"../modal\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar sideTip = require(\"./assets/hintTipSide.png\");\nvar middleTip = require(\"./assets/hintTipMiddle.png\");\nvar DEFAULT_COLOR = Colors.$backgroundPrimaryHeavy;\nvar DEFAULT_HINT_OFFSET = Spacings.s4;\nvar DEFAULT_EDGE_MARGINS = Spacings.s5;\nvar TARGET_POSITIONS = function (TARGET_POSITIONS) {\n  TARGET_POSITIONS[\"LEFT\"] = \"left\";\n  TARGET_POSITIONS[\"RIGHT\"] = \"right\";\n  TARGET_POSITIONS[\"CENTER\"] = \"center\";\n  return TARGET_POSITIONS;\n}(TARGET_POSITIONS || {});\nvar HintPositions = function (HintPositions) {\n  HintPositions[\"TOP\"] = \"top\";\n  HintPositions[\"BOTTOM\"] = \"bottom\";\n  return HintPositions;\n}(HintPositions || {});\nvar Hint = function (_Component) {\n  _inherits(Hint, _Component);\n  function Hint() {\n    var _this;\n    _classCallCheck(this, Hint);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Hint, [].concat(args));\n    _this.targetRef = null;\n    _this.hintRef = React.createRef();\n    _this.animationDuration = 170;\n    _this.state = {\n      targetLayoutInWindow: undefined,\n      targetLayout: _this.props.targetFrame,\n      hintUnmounted: !_this.props.visible\n    };\n    _this.visibleAnimated = new Animated.Value(Number(!!_this.props.visible));\n    _this.animateHint = function () {\n      Animated.timing(_this.visibleAnimated, {\n        toValue: Number(!!_this.props.visible),\n        duration: _this.animationDuration,\n        useNativeDriver: true\n      }).start(_this.toggleAnimationEndedToRemoveHint);\n    };\n    _this.toggleAnimationEndedToRemoveHint = function () {\n      _this.setState({\n        hintUnmounted: !_this.props.visible\n      });\n    };\n    _this.focusAccessibilityOnHint = function () {\n      var message = _this.props.message;\n      var targetRefTag = findNodeHandle(_this.targetRef);\n      var hintRefTag = findNodeHandle(_this.hintRef.current);\n      if (targetRefTag && _isString(message)) {\n        AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n      } else if (hintRefTag) {\n        AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n      }\n    };\n    _this.setTargetRef = function (ref) {\n      _this.targetRef = ref;\n      _this.focusAccessibilityOnHint();\n    };\n    _this.onTargetLayout = function (_ref) {\n      var layout = _ref.nativeEvent.layout;\n      if (!_isEqual(_this.state.targetLayout, layout)) {\n        _this.setState({\n          targetLayout: layout\n        });\n      }\n      if (!_this.state.targetLayoutInWindow || _this.props.onBackgroundPress) {\n        setTimeout(function () {\n          var _this$targetRef;\n          (_this$targetRef = _this.targetRef) == null ? void 0 : _this$targetRef.measureInWindow(function (x, y, width, height) {\n            var targetLayoutInWindow = {\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            };\n            _this.setState({\n              targetLayoutInWindow: targetLayoutInWindow\n            });\n          });\n        });\n      }\n    };\n    _this.getHintAnimatedStyle = function () {\n      var position = _this.props.position;\n      var translateY = position === HintPositions.TOP ? -10 : 10;\n      return {\n        opacity: _this.visibleAnimated,\n        transform: [{\n          translateY: _this.visibleAnimated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [translateY, 0]\n          })\n        }]\n      };\n    };\n    _this.isUsingModal = function () {\n      var _this$props = _this.props,\n        onBackgroundPress = _this$props.onBackgroundPress,\n        useModal = _this$props.useModal;\n      return onBackgroundPress && useModal;\n    };\n    return _this;\n  }\n  _createClass(Hint, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.focusAccessibilityOnHint();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.animateHint();\n      }\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$props2 = this.props,\n        visible = _this$props2.visible,\n        message = _this$props2.message;\n      if (visible && _isString(message)) {\n        return {\n          accessible: true,\n          accessibilityLabel: `hint: ${message}`\n        };\n      }\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      var _this$props$container = this.props.containerWidth,\n        containerWidth = _this$props$container === void 0 ? Constants.windowWidth : _this$props$container;\n      return containerWidth;\n    }\n  }, {\n    key: \"targetLayout\",\n    get: function get() {\n      var _this$props3 = this.props,\n        onBackgroundPress = _this$props3.onBackgroundPress,\n        useModal = _this$props3.useModal,\n        targetFrame = _this$props3.targetFrame;\n      var _this$state = this.state,\n        targetLayout = _this$state.targetLayout,\n        targetLayoutInWindow = _this$state.targetLayoutInWindow;\n      if (targetFrame) {\n        return targetFrame;\n      }\n      return onBackgroundPress && useModal ? targetLayoutInWindow : targetLayout;\n    }\n  }, {\n    key: \"showHint\",\n    get: function get() {\n      return !!this.targetLayout;\n    }\n  }, {\n    key: \"tipSize\",\n    get: function get() {\n      return this.useSideTip ? {\n        width: 14,\n        height: 7\n      } : {\n        width: 20,\n        height: 7\n      };\n    }\n  }, {\n    key: \"hintOffset\",\n    get: function get() {\n      var _this$props$offset = this.props.offset,\n        offset = _this$props$offset === void 0 ? DEFAULT_HINT_OFFSET : _this$props$offset;\n      return offset;\n    }\n  }, {\n    key: \"edgeMargins\",\n    get: function get() {\n      var _this$props$edgeMargi = this.props.edgeMargins,\n        edgeMargins = _this$props$edgeMargi === void 0 ? DEFAULT_EDGE_MARGINS : _this$props$edgeMargi;\n      return edgeMargins;\n    }\n  }, {\n    key: \"useSideTip\",\n    get: function get() {\n      var useSideTip = this.props.useSideTip;\n      if (!_isUndefined(useSideTip)) {\n        return useSideTip;\n      }\n      return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getTargetPositionOnScreen\",\n    value: function getTargetPositionOnScreen() {\n      var _this$targetLayout, _this$targetLayout2;\n      if (((_this$targetLayout = this.targetLayout) == null ? void 0 : _this$targetLayout.x) !== undefined && (_this$targetLayout2 = this.targetLayout) != null && _this$targetLayout2.width) {\n        var targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n        if (targetMidPosition > this.containerWidth * (2 / 3)) {\n          return TARGET_POSITIONS.RIGHT;\n        } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n          return TARGET_POSITIONS.LEFT;\n        }\n      }\n      return TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getContainerPosition\",\n    value: function getContainerPosition() {\n      if (this.targetLayout) {\n        return {\n          top: this.targetLayout.y,\n          left: this.targetLayout.x\n        };\n      }\n    }\n  }, {\n    key: \"getHintPosition\",\n    value: function getHintPosition() {\n      var _this$targetLayout3, _this$targetLayout4;\n      var position = this.props.position;\n      var hintPositionStyle = {\n        alignItems: 'center'\n      };\n      if (((_this$targetLayout3 = this.targetLayout) == null ? void 0 : _this$targetLayout3.x) !== undefined) {\n        hintPositionStyle.left = -this.targetLayout.x;\n      }\n      if (position === HintPositions.TOP) {\n        hintPositionStyle.bottom = 0;\n      } else if ((_this$targetLayout4 = this.targetLayout) != null && _this$targetLayout4.height) {\n        hintPositionStyle.top = this.targetLayout.height;\n      }\n      var targetPositionOnScreen = this.getTargetPositionOnScreen();\n      if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n        hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n      }\n      return hintPositionStyle;\n    }\n  }, {\n    key: \"getHintPadding\",\n    value: function getHintPadding() {\n      var _this$targetLayout5;\n      var paddings = {\n        paddingVertical: this.hintOffset,\n        paddingHorizontal: this.edgeMargins\n      };\n      if (this.useSideTip && ((_this$targetLayout5 = this.targetLayout) == null ? void 0 : _this$targetLayout5.x) !== undefined) {\n        var _this$targetLayout6;\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n        if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n          paddings.paddingLeft = this.targetLayout.x;\n        } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT && (_this$targetLayout6 = this.targetLayout) != null && _this$targetLayout6.width) {\n          paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n        }\n      }\n      return paddings;\n    }\n  }, {\n    key: \"getTipPosition\",\n    value: function getTipPosition() {\n      var _this$targetLayout7, _this$targetLayout8;\n      var position = this.props.position;\n      var tipPositionStyle = {};\n      if (position === HintPositions.TOP) {\n        tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n        !this.useSideTip ? tipPositionStyle.bottom += 1 : undefined;\n      } else {\n        tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n      }\n      var layoutWidth = ((_this$targetLayout7 = this.targetLayout) == null ? void 0 : _this$targetLayout7.width) || 0;\n      if (((_this$targetLayout8 = this.targetLayout) == null ? void 0 : _this$targetLayout8.x) !== undefined) {\n        var targetMidWidth = layoutWidth / 2;\n        var tipMidWidth = this.tipSize.width / 2;\n        var leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n        var rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - layoutWidth : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n        switch (targetPositionOnScreen) {\n          case TARGET_POSITIONS.LEFT:\n            tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n            break;\n          case TARGET_POSITIONS.RIGHT:\n            tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n            break;\n          case TARGET_POSITIONS.CENTER:\n          default:\n            tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n            break;\n        }\n      }\n      return tipPositionStyle;\n    }\n  }, {\n    key: \"renderOverlay\",\n    value: function renderOverlay() {\n      var targetLayoutInWindow = this.state.targetLayoutInWindow;\n      var _this$props4 = this.props,\n        onBackgroundPress = _this$props4.onBackgroundPress,\n        backdropColor = _this$props4.backdropColor,\n        testID = _this$props4.testID;\n      if (targetLayoutInWindow) {\n        var containerPosition = this.getContainerPosition();\n        return _jsx(Animated.View, {\n          style: [styles.overlay, {\n            top: containerPosition.top - targetLayoutInWindow.y,\n            left: containerPosition.left - targetLayoutInWindow.x,\n            backgroundColor: backdropColor,\n            opacity: this.visibleAnimated\n          }],\n          pointerEvents: \"box-none\",\n          testID: `${testID}.overlay`,\n          children: onBackgroundPress && _jsx(TouchableWithoutFeedback, {\n            style: StyleSheet.absoluteFillObject,\n            onPress: onBackgroundPress,\n            children: _jsx(View, {\n              flex: true\n            })\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderHintTip\",\n    value: function renderHintTip() {\n      var _this$props5 = this.props,\n        position = _this$props5.position,\n        _this$props5$color = _this$props5.color,\n        color = _this$props5$color === void 0 ? DEFAULT_COLOR : _this$props5$color;\n      var source = this.useSideTip ? sideTip : middleTip;\n      var flipVertically = position === HintPositions.TOP;\n      var flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n      var flipStyle = {\n        transform: [{\n          scaleY: flipVertically ? -1 : 1\n        }, {\n          scaleX: flipHorizontally ? -1 : 1\n        }]\n      };\n      return _jsx(Image, {\n        tintColor: color,\n        source: source,\n        style: [styles.hintTip, this.getTipPosition(), flipStyle]\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props6 = this.props,\n        message = _this$props6.message,\n        messageStyle = _this$props6.messageStyle,\n        icon = _this$props6.icon,\n        iconStyle = _this$props6.iconStyle,\n        borderRadius = _this$props6.borderRadius,\n        _this$props6$color = _this$props6.color,\n        color = _this$props6$color === void 0 ? DEFAULT_COLOR : _this$props6$color,\n        customContent = _this$props6.customContent,\n        removePaddings = _this$props6.removePaddings,\n        enableShadow = _this$props6.enableShadow,\n        visible = _this$props6.visible,\n        testID = _this$props6.testID;\n      return _jsxs(View, {\n        testID: `${testID}.message`,\n        row: true,\n        centerV: true,\n        style: [styles.hint, !removePaddings && styles.hintPaddings, visible && enableShadow && styles.containerShadow, {\n          backgroundColor: color\n        }, !_isUndefined(borderRadius) && {\n          borderRadius: borderRadius\n        }],\n        ref: this.hintRef,\n        children: [customContent, !customContent && icon && _jsx(Image, {\n          source: icon,\n          style: [styles.icon, iconStyle]\n        }), !customContent && _jsx(Text, {\n          recorderTag: 'unmask',\n          style: [styles.hintMessage, messageStyle],\n          children: message\n        })]\n      });\n    }\n  }, {\n    key: \"renderHint\",\n    value: function renderHint() {\n      var _this$props7 = this.props,\n        onPress = _this$props7.onPress,\n        testID = _this$props7.testID;\n      var opacity = onPress ? 0.9 : 1.0;\n      if (this.showHint) {\n        return _jsxs(View, {\n          animated: true,\n          style: [{\n            width: this.containerWidth\n          }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding(), this.getHintAnimatedStyle()],\n          pointerEvents: \"box-none\",\n          testID: testID,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: opacity,\n            onPress: onPress,\n            children: this.renderContent()\n          }), this.renderHintTip()]\n        });\n      }\n    }\n  }, {\n    key: \"renderHintContainer\",\n    value: function renderHintContainer() {\n      var _this$props8 = this.props,\n        style = _this$props8.style,\n        others = _objectWithoutProperties(_this$props8, _excluded);\n      return _jsx(View, _objectSpread(_objectSpread({}, others), {}, {\n        collapsable: true,\n        testID: undefined,\n        style: [styles.container, style, this.getContainerPosition(), !this.isUsingModal() && styles.overlayContainer],\n        children: this.renderHint()\n      }));\n    }\n  }, {\n    key: \"renderMockChildren\",\n    value: function renderMockChildren() {\n      var children = this.props.children;\n      if (children && React.isValidElement(children)) {\n        var _this$targetLayout9, _this$targetLayout10, _this$targetLayout11, _this$targetLayout12;\n        var layout = _objectSpread(_objectSpread({}, this.getContainerPosition()), {}, {\n          width: (_this$targetLayout9 = this.targetLayout) == null ? void 0 : _this$targetLayout9.width,\n          height: (_this$targetLayout10 = this.targetLayout) == null ? void 0 : _this$targetLayout10.height,\n          right: Constants.isRTL ? (_this$targetLayout11 = this.targetLayout) == null ? void 0 : _this$targetLayout11.x : undefined,\n          left: Constants.isRTL ? undefined : (_this$targetLayout12 = this.targetLayout) == null ? void 0 : _this$targetLayout12.x\n        });\n        return _jsx(View, {\n          style: [styles.mockChildrenContainer, layout],\n          children: React.cloneElement(children, {\n            collapsable: false,\n            key: 'mock',\n            style: [children.props.style, styles.mockChildren]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var targetFrame = this.props.targetFrame;\n      if (!targetFrame && isValidElement(this.props.children)) {\n        return React.cloneElement(this.props.children, _objectSpread({\n          key: 'clone',\n          collapsable: false,\n          onLayout: this.onTargetLayout,\n          ref: this.setTargetRef\n        }, this.getAccessibilityInfo()));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props9 = this.props,\n        onBackgroundPress = _this$props9.onBackgroundPress,\n        backdropColor = _this$props9.backdropColor,\n        testID = _this$props9.testID;\n      if (!this.props.visible && this.state.hintUnmounted) {\n        return this.props.children || null;\n      }\n      return _jsxs(_Fragment, {\n        children: [this.renderChildren(), this.isUsingModal() ? _jsxs(Modal, {\n          visible: this.showHint,\n          animationType: backdropColor ? 'fade' : 'none',\n          overlayBackgroundColor: backdropColor,\n          transparent: true,\n          onBackgroundPress: onBackgroundPress,\n          onRequestClose: onBackgroundPress,\n          testID: `${testID}.modal`,\n          children: [this.renderMockChildren(), this.renderHintContainer()]\n        }) : _jsxs(_Fragment, {\n          children: [this.renderOverlay(), this.renderMockChildren(), this.renderHintContainer()]\n        })]\n      });\n    }\n  }]);\n  return Hint;\n}(Component);\nHint.displayName = 'Hint';\nHint.defaultProps = {\n  position: HintPositions.BOTTOM,\n  useModal: true\n};\nHint.positions = HintPositions;\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute'\n  },\n  overlayContainer: {\n    zIndex: 10,\n    elevation: 10\n  },\n  mockChildrenContainer: {\n    position: 'absolute'\n  },\n  mockChildren: {\n    margin: undefined,\n    marginVertical: undefined,\n    marginHorizontal: undefined,\n    marginTop: undefined,\n    marginRight: undefined,\n    marginBottom: undefined,\n    marginLeft: undefined,\n    top: undefined,\n    left: undefined,\n    right: undefined,\n    bottom: undefined\n  },\n  overlay: {\n    position: 'absolute',\n    width: Constants.windowWidth,\n    height: Constants.screenHeight\n  },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: Math.min(Constants.windowWidth - 2 * Spacings.s4, 400),\n    borderRadius: BorderRadiuses.br60,\n    backgroundColor: DEFAULT_COLOR\n  },\n  hintPaddings: {\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4\n  },\n  containerShadow: _objectSpread({}, Shadows.sh30.bottom),\n  hintMessage: _objectSpread(_objectSpread({}, Typography.text70), {}, {\n    color: Colors.white,\n    flexShrink: 1\n  }),\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\nexport default asBaseComponent(Hint);","map":{"version":3,"names":["_isUndefined","_isEqual","_isString","React","Component","isValidElement","Animated","StyleSheet","AccessibilityInfo","findNodeHandle","TouchableWithoutFeedback","Typography","Spacings","Colors","BorderRadiuses","Shadows","Constants","asBaseComponent","View","Text","Image","Modal","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","sideTip","require","middleTip","DEFAULT_COLOR","$backgroundPrimaryHeavy","DEFAULT_HINT_OFFSET","s4","DEFAULT_EDGE_MARGINS","s5","TARGET_POSITIONS","HintPositions","Hint","_Component","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","targetRef","hintRef","createRef","animationDuration","state","targetLayoutInWindow","undefined","targetLayout","props","targetFrame","hintUnmounted","visible","visibleAnimated","Value","Number","animateHint","timing","toValue","duration","useNativeDriver","start","toggleAnimationEndedToRemoveHint","setState","focusAccessibilityOnHint","message","targetRefTag","hintRefTag","current","setAccessibilityFocus","setTargetRef","ref","onTargetLayout","_ref","layout","nativeEvent","onBackgroundPress","setTimeout","_this$targetRef","measureInWindow","x","y","width","height","getHintAnimatedStyle","position","translateY","TOP","opacity","transform","interpolate","inputRange","outputRange","isUsingModal","_this$props","useModal","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","getAccessibilityInfo","_this$props2","accessible","accessibilityLabel","get","_this$props$container","containerWidth","windowWidth","_this$props3","_this$state","useSideTip","_this$props$offset","offset","_this$props$edgeMargi","edgeMargins","getTargetPositionOnScreen","CENTER","_this$targetLayout","_this$targetLayout2","targetMidPosition","RIGHT","LEFT","getContainerPosition","top","left","getHintPosition","_this$targetLayout3","_this$targetLayout4","hintPositionStyle","alignItems","bottom","targetPositionOnScreen","isRTL","getHintPadding","_this$targetLayout5","paddings","paddingVertical","hintOffset","paddingHorizontal","_this$targetLayout6","paddingLeft","paddingRight","getTipPosition","_this$targetLayout7","_this$targetLayout8","tipPositionStyle","tipSize","layoutWidth","targetMidWidth","tipMidWidth","leftPosition","rightPosition","right","renderOverlay","_this$props4","backdropColor","testID","containerPosition","style","styles","overlay","backgroundColor","pointerEvents","children","absoluteFillObject","onPress","flex","renderHintTip","_this$props5","_this$props5$color","color","source","flipVertically","flipHorizontally","flipStyle","scaleY","scaleX","tintColor","hintTip","renderContent","_this$props6","messageStyle","icon","iconStyle","borderRadius","_this$props6$color","customContent","removePaddings","enableShadow","row","centerV","hint","hintPaddings","containerShadow","recorderTag","hintMessage","renderHint","_this$props7","showHint","animated","animatedContainer","activeOpacity","renderHintContainer","_this$props8","others","_objectWithoutProperties","_excluded","_objectSpread","collapsable","container","overlayContainer","renderMockChildren","_this$targetLayout9","_this$targetLayout10","_this$targetLayout11","_this$targetLayout12","mockChildrenContainer","cloneElement","mockChildren","renderChildren","onLayout","render","_this$props9","animationType","overlayBackgroundColor","transparent","onRequestClose","displayName","defaultProps","BOTTOM","positions","create","zIndex","elevation","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","screenHeight","maxWidth","Math","min","br60","paddingTop","s3","paddingBottom","sh30","text70","white","flexShrink"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/hint/index.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isString from \"lodash/isString\";\nimport React, { Component, isValidElement } from 'react';\nimport { Animated, StyleSheet, AccessibilityInfo, findNodeHandle, TouchableWithoutFeedback } from 'react-native';\nimport { Typography, Spacings, Colors, BorderRadiuses, Shadows } from \"../../style\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Modal from \"../modal\";\nimport TouchableOpacity from \"../touchableOpacity\";\nconst sideTip = require(\"./assets/hintTipSide.png\");\nconst middleTip = require(\"./assets/hintTipMiddle.png\");\nconst DEFAULT_COLOR = Colors.$backgroundPrimaryHeavy;\nconst DEFAULT_HINT_OFFSET = Spacings.s4;\nconst DEFAULT_EDGE_MARGINS = Spacings.s5;\nvar TARGET_POSITIONS = /*#__PURE__*/function (TARGET_POSITIONS) {\n  TARGET_POSITIONS[\"LEFT\"] = \"left\";\n  TARGET_POSITIONS[\"RIGHT\"] = \"right\";\n  TARGET_POSITIONS[\"CENTER\"] = \"center\";\n  return TARGET_POSITIONS;\n}(TARGET_POSITIONS || {});\nvar HintPositions = /*#__PURE__*/function (HintPositions) {\n  HintPositions[\"TOP\"] = \"top\";\n  HintPositions[\"BOTTOM\"] = \"bottom\";\n  return HintPositions;\n}(HintPositions || {}); // TODO: unify with FeatureHighlightFrame\n/**\n * @description: Hint component for displaying a tooltip over wrapped component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/HintsScreen.tsx\n * @notes: You can either wrap a component or pass a specific targetFrame\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Hint/Hint.gif?raw=true\n */\nclass Hint extends Component {\n  static displayName = 'Hint';\n  static defaultProps = {\n    position: HintPositions.BOTTOM,\n    useModal: true\n  };\n  static positions = HintPositions;\n  targetRef = null;\n  hintRef = React.createRef();\n  animationDuration = 170;\n  state = {\n    targetLayoutInWindow: undefined,\n    targetLayout: this.props.targetFrame,\n    hintUnmounted: !this.props.visible\n  };\n  visibleAnimated = new Animated.Value(Number(!!this.props.visible));\n  componentDidMount() {\n    this.focusAccessibilityOnHint();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.visible !== this.props.visible) {\n      this.animateHint();\n    }\n  }\n  animateHint = () => {\n    Animated.timing(this.visibleAnimated, {\n      toValue: Number(!!this.props.visible),\n      duration: this.animationDuration,\n      useNativeDriver: true\n    }).start(this.toggleAnimationEndedToRemoveHint);\n  };\n  toggleAnimationEndedToRemoveHint = () => {\n    this.setState({\n      hintUnmounted: !this.props.visible\n    });\n  };\n  focusAccessibilityOnHint = () => {\n    const {\n      message\n    } = this.props;\n    const targetRefTag = findNodeHandle(this.targetRef);\n    const hintRefTag = findNodeHandle(this.hintRef.current);\n    if (targetRefTag && _isString(message)) {\n      AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n    } else if (hintRefTag) {\n      AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n    }\n  };\n  setTargetRef = ref => {\n    this.targetRef = ref;\n    this.focusAccessibilityOnHint();\n  };\n  onTargetLayout = ({\n    nativeEvent: {\n      layout\n    }\n  }) => {\n    if (!_isEqual(this.state.targetLayout, layout)) {\n      this.setState({\n        targetLayout: layout\n      });\n    }\n    if (!this.state.targetLayoutInWindow || this.props.onBackgroundPress) {\n      setTimeout(() => {\n        this.targetRef?.measureInWindow((x, y, width, height) => {\n          const targetLayoutInWindow = {\n            x,\n            y,\n            width,\n            height\n          };\n          this.setState({\n            targetLayoutInWindow\n          });\n        });\n      });\n    }\n  };\n  getAccessibilityInfo() {\n    const {\n      visible,\n      message\n    } = this.props;\n    if (visible && _isString(message)) {\n      return {\n        accessible: true,\n        accessibilityLabel: `hint: ${message}`\n      };\n    }\n  }\n  get containerWidth() {\n    const {\n      containerWidth = Constants.windowWidth\n    } = this.props;\n    return containerWidth;\n  }\n  get targetLayout() {\n    const {\n      onBackgroundPress,\n      useModal,\n      targetFrame\n    } = this.props;\n    const {\n      targetLayout,\n      targetLayoutInWindow\n    } = this.state;\n    if (targetFrame) {\n      return targetFrame;\n    }\n    return onBackgroundPress && useModal ? targetLayoutInWindow : targetLayout;\n  }\n  get showHint() {\n    return !!this.targetLayout;\n  }\n  get tipSize() {\n    return this.useSideTip ? {\n      width: 14,\n      height: 7\n    } : {\n      width: 20,\n      height: 7\n    };\n  }\n  get hintOffset() {\n    const {\n      offset = DEFAULT_HINT_OFFSET\n    } = this.props;\n    return offset;\n  }\n  get edgeMargins() {\n    const {\n      edgeMargins = DEFAULT_EDGE_MARGINS\n    } = this.props;\n    return edgeMargins;\n  }\n  get useSideTip() {\n    const {\n      useSideTip\n    } = this.props;\n    if (!_isUndefined(useSideTip)) {\n      return useSideTip;\n    }\n    return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n  }\n  getTargetPositionOnScreen() {\n    if (this.targetLayout?.x !== undefined && this.targetLayout?.width) {\n      const targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n      if (targetMidPosition > this.containerWidth * (2 / 3)) {\n        return TARGET_POSITIONS.RIGHT;\n      } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n        return TARGET_POSITIONS.LEFT;\n      }\n    }\n    return TARGET_POSITIONS.CENTER;\n  }\n  getContainerPosition() {\n    if (this.targetLayout) {\n      return {\n        top: this.targetLayout.y,\n        left: this.targetLayout.x\n      };\n    }\n  }\n  getHintPosition() {\n    const {\n      position\n    } = this.props;\n    const hintPositionStyle = {\n      alignItems: 'center'\n    };\n    if (this.targetLayout?.x !== undefined) {\n      hintPositionStyle.left = -this.targetLayout.x;\n    }\n    if (position === HintPositions.TOP) {\n      hintPositionStyle.bottom = 0;\n    } else if (this.targetLayout?.height) {\n      hintPositionStyle.top = this.targetLayout.height;\n    }\n    const targetPositionOnScreen = this.getTargetPositionOnScreen();\n    if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n    } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n    }\n    return hintPositionStyle;\n  }\n  getHintPadding() {\n    const paddings = {\n      paddingVertical: this.hintOffset,\n      paddingHorizontal: this.edgeMargins\n    };\n    if (this.useSideTip && this.targetLayout?.x !== undefined) {\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n      if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        paddings.paddingLeft = this.targetLayout.x;\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT && this.targetLayout?.width) {\n        paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n      }\n    }\n    return paddings;\n  }\n  getHintAnimatedStyle = () => {\n    const {\n      position\n    } = this.props;\n    const translateY = position === HintPositions.TOP ? -10 : 10;\n    return {\n      opacity: this.visibleAnimated,\n      transform: [{\n        translateY: this.visibleAnimated.interpolate({\n          inputRange: [0, 1],\n          outputRange: [translateY, 0]\n        })\n      }]\n    };\n  };\n  getTipPosition() {\n    const {\n      position\n    } = this.props;\n    const tipPositionStyle = {};\n    if (position === HintPositions.TOP) {\n      tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n      !this.useSideTip ? tipPositionStyle.bottom += 1 : undefined;\n    } else {\n      tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n    }\n    const layoutWidth = this.targetLayout?.width || 0;\n    if (this.targetLayout?.x !== undefined) {\n      const targetMidWidth = layoutWidth / 2;\n      const tipMidWidth = this.tipSize.width / 2;\n      const leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n      const rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - layoutWidth : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n      switch (targetPositionOnScreen) {\n        case TARGET_POSITIONS.LEFT:\n          tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n          break;\n        case TARGET_POSITIONS.RIGHT:\n          tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n          break;\n        case TARGET_POSITIONS.CENTER:\n        default:\n          tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n          break;\n      }\n    }\n    return tipPositionStyle;\n  }\n  isUsingModal = () => {\n    const {\n      onBackgroundPress,\n      useModal\n    } = this.props;\n    return onBackgroundPress && useModal;\n  };\n  renderOverlay() {\n    const {\n      targetLayoutInWindow\n    } = this.state;\n    const {\n      onBackgroundPress,\n      backdropColor,\n      testID\n    } = this.props;\n    if (targetLayoutInWindow) {\n      const containerPosition = this.getContainerPosition();\n      return <Animated.View style={[styles.overlay, {\n        top: containerPosition.top - targetLayoutInWindow.y,\n        left: containerPosition.left - targetLayoutInWindow.x,\n        backgroundColor: backdropColor,\n        opacity: this.visibleAnimated\n      }]} pointerEvents=\"box-none\" testID={`${testID}.overlay`}>\n          {onBackgroundPress && <TouchableWithoutFeedback style={StyleSheet.absoluteFillObject} onPress={onBackgroundPress}>\n              <View flex />\n            </TouchableWithoutFeedback>}\n        </Animated.View>;\n    }\n  }\n  renderHintTip() {\n    const {\n      position,\n      color = DEFAULT_COLOR\n    } = this.props;\n    const source = this.useSideTip ? sideTip : middleTip;\n    const flipVertically = position === HintPositions.TOP;\n    const flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n    const flipStyle = {\n      transform: [{\n        scaleY: flipVertically ? -1 : 1\n      }, {\n        scaleX: flipHorizontally ? -1 : 1\n      }]\n    };\n    return <Image tintColor={color} source={source} style={[styles.hintTip, this.getTipPosition(), flipStyle]} />;\n  }\n  renderContent() {\n    const {\n      message,\n      messageStyle,\n      icon,\n      iconStyle,\n      borderRadius,\n      color = DEFAULT_COLOR,\n      customContent,\n      removePaddings,\n      enableShadow,\n      visible,\n      testID\n    } = this.props;\n    return <View testID={`${testID}.message`} row centerV style={[styles.hint, !removePaddings && styles.hintPaddings, visible && enableShadow && styles.containerShadow, {\n      backgroundColor: color\n    }, !_isUndefined(borderRadius) && {\n      borderRadius\n    }]} ref={this.hintRef}>\n        {customContent}\n        {!customContent && icon && <Image source={icon} style={[styles.icon, iconStyle]} />}\n        {!customContent && <Text recorderTag={'unmask'} style={[styles.hintMessage, messageStyle]}>{message}</Text>}\n      </View>;\n  }\n  renderHint() {\n    const {\n      onPress,\n      testID\n    } = this.props;\n    const opacity = onPress ? 0.9 : 1.0;\n    if (this.showHint) {\n      return <View animated style={[{\n        width: this.containerWidth\n      }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding(), this.getHintAnimatedStyle()]} pointerEvents=\"box-none\" testID={testID}>\n          <TouchableOpacity activeOpacity={opacity} onPress={onPress}>\n            {this.renderContent()}\n          </TouchableOpacity>\n          {this.renderHintTip()}\n        </View>;\n    }\n  }\n  renderHintContainer() {\n    const {\n      style,\n      ...others\n    } = this.props;\n    return <View {...others}\n    // this view must be collapsable, don't pass testID or backgroundColor etc'.\n    collapsable testID={undefined} style={[styles.container, style, this.getContainerPosition(), !this.isUsingModal() && styles.overlayContainer]}>\n        {this.renderHint()}\n      </View>;\n  }\n  renderMockChildren() {\n    const {\n      children\n    } = this.props;\n    if (children && React.isValidElement(children)) {\n      const layout = {\n        ...this.getContainerPosition(),\n        width: this.targetLayout?.width,\n        height: this.targetLayout?.height,\n        right: Constants.isRTL ? this.targetLayout?.x : undefined,\n        left: Constants.isRTL ? undefined : this.targetLayout?.x\n      };\n      return <View style={[styles.mockChildrenContainer, layout]}>\n          {React.cloneElement(children, {\n          collapsable: false,\n          key: 'mock',\n          style: [children.props.style, styles.mockChildren]\n        })}\n        </View>;\n    }\n  }\n  renderChildren() {\n    const {\n      targetFrame\n    } = this.props;\n    if (!targetFrame && isValidElement(this.props.children)) {\n      return React.cloneElement(this.props.children, {\n        key: 'clone',\n        collapsable: false,\n        onLayout: this.onTargetLayout,\n        ref: this.setTargetRef,\n        ...this.getAccessibilityInfo()\n      });\n    }\n  }\n  render() {\n    const {\n      onBackgroundPress,\n      backdropColor,\n      testID\n    } = this.props;\n    if (!this.props.visible && this.state.hintUnmounted) {\n      return this.props.children || null;\n    }\n    return <>\n        {this.renderChildren()}\n        {this.isUsingModal() ? <Modal visible={this.showHint} animationType={backdropColor ? 'fade' : 'none'} overlayBackgroundColor={backdropColor} transparent onBackgroundPress={onBackgroundPress} onRequestClose={onBackgroundPress} testID={`${testID}.modal`}>\n            {this.renderMockChildren()}\n            {this.renderHintContainer()}\n          </Modal> : <>\n            {this.renderOverlay()}\n            {this.renderMockChildren()}\n            {this.renderHintContainer()}\n          </>}\n      </>;\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute'\n  },\n  overlayContainer: {\n    zIndex: 10,\n    elevation: 10\n  },\n  mockChildrenContainer: {\n    position: 'absolute'\n  },\n  mockChildren: {\n    margin: undefined,\n    marginVertical: undefined,\n    marginHorizontal: undefined,\n    marginTop: undefined,\n    marginRight: undefined,\n    marginBottom: undefined,\n    marginLeft: undefined,\n    top: undefined,\n    left: undefined,\n    right: undefined,\n    bottom: undefined\n  },\n  overlay: {\n    position: 'absolute',\n    width: Constants.windowWidth,\n    height: Constants.screenHeight\n  },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: Math.min(Constants.windowWidth - 2 * Spacings.s4, 400),\n    borderRadius: BorderRadiuses.br60,\n    backgroundColor: DEFAULT_COLOR\n  },\n  hintPaddings: {\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4\n  },\n  containerShadow: {\n    ...Shadows.sh30.bottom\n  },\n  hintMessage: {\n    ...Typography.text70,\n    color: Colors.white,\n    flexShrink: 1\n  },\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\nexport default asBaseComponent(Hint);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}