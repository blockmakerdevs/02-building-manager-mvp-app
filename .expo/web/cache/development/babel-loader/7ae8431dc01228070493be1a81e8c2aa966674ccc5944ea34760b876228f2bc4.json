{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useCallback, useState } from 'react';\nimport { Constants } from \"../../commons/new\";\nimport useDidUpdate from \"../useDidUpdate\";\nvar useOrientation = function useOrientation() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    onOrientationChange = _ref.onOrientationChange;\n  var _useState = useState(Constants.orientation),\n    _useState2 = _slicedToArray(_useState, 2),\n    orientation = _useState2[0],\n    setOrientation = _useState2[1];\n  var orientationChangeListener = useCallback(function () {\n    setOrientation(Constants.orientation);\n  }, []);\n  useEffect(function () {\n    var listener = Constants.addDimensionsEventListener(orientationChangeListener);\n    return function () {\n      return Constants.removeDimensionsEventListener(listener);\n    };\n  }, []);\n  useDidUpdate(function () {\n    onOrientationChange == null ? void 0 : onOrientationChange(orientation);\n  }, [orientation]);\n  return {\n    orientation: orientation\n  };\n};\nexport default useOrientation;","map":{"version":3,"names":["useEffect","useCallback","useState","Constants","useDidUpdate","useOrientation","_ref","arguments","length","undefined","onOrientationChange","_useState","orientation","_useState2","_slicedToArray","setOrientation","orientationChangeListener","listener","addDimensionsEventListener","removeDimensionsEventListener"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/hooks/useOrientation/index.js"],"sourcesContent":["import { useEffect, useCallback, useState } from 'react';\nimport { Constants } from \"../../commons/new\";\nimport useDidUpdate from \"../useDidUpdate\";\nconst useOrientation = ({\n  onOrientationChange\n} = {}) => {\n  const [orientation, setOrientation] = useState(Constants.orientation);\n  const orientationChangeListener = useCallback(() => {\n    setOrientation(Constants.orientation);\n  }, []);\n  useEffect(() => {\n    const listener = Constants.addDimensionsEventListener(orientationChangeListener);\n    return () => Constants.removeDimensionsEventListener(listener);\n  }, []);\n  useDidUpdate(() => {\n    onOrientationChange?.(orientation);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orientation]);\n  return {\n    orientation\n  };\n};\nexport default useOrientation;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,SAAS;AAClB,OAAOC,YAAY;AACnB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAET;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAP,CAAC,CAAC;IADJG,mBAAmB,GAAAJ,IAAA,CAAnBI,mBAAmB;EAEnB,IAAAC,SAAA,GAAsCT,QAAQ,CAACC,SAAS,CAACS,WAAW,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA9DC,WAAW,GAAAC,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAMG,yBAAyB,GAAGf,WAAW,CAAC,YAAM;IAClDc,cAAc,CAACZ,SAAS,CAACS,WAAW,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EACNZ,SAAS,CAAC,YAAM;IACd,IAAMiB,QAAQ,GAAGd,SAAS,CAACe,0BAA0B,CAACF,yBAAyB,CAAC;IAChF,OAAO;MAAA,OAAMb,SAAS,CAACgB,6BAA6B,CAACF,QAAQ,CAAC;IAAA;EAChE,CAAC,EAAE,EAAE,CAAC;EACNb,YAAY,CAAC,YAAM;IACjBM,mBAAmB,oBAAnBA,mBAAmB,CAAGE,WAAW,CAAC;EAEpC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,OAAO;IACLA,WAAW,EAAXA;EACF,CAAC;AACH,CAAC;AACD,eAAeP,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}