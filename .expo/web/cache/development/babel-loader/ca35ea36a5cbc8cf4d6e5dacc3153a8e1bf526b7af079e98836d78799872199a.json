{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useCallback, useMemo, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useAnimatedReaction, runOnJS } from 'react-native-reanimated';\nimport { Colors } from \"../../style\";\nimport { getDateObject, isSameDay } from \"./helpers/DateUtils\";\nimport { UpdateSource } from \"./types\";\nimport CalendarContext from \"./CalendarContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DAY_SIZE = 32;\nvar NO_COLOR = Colors.transparent;\nvar TEXT_COLOR = Colors.$textPrimary;\nvar TODAY_BACKGROUND_COLOR = Colors.$backgroundPrimaryLight;\nvar SELECTED_BACKGROUND_COLOR = Colors.$backgroundPrimaryHeavy;\nvar SELECTED_TEXT_COLOR = Colors.$textDefaultLight;\nvar INACTIVE_TEXT_COLOR = Colors.$textNeutralLight;\nvar Day = function Day(props) {\n  var date = props.date,\n    onPress = props.onPress,\n    currentMonth = props.currentMonth;\n  var _useContext = useContext(CalendarContext),\n    selectedDate = _useContext.selectedDate,\n    setDate = _useContext.setDate,\n    showExtraDays = _useContext.showExtraDays,\n    today = _useContext.today;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  var dateObject = useMemo(function () {\n    return getDateObject(date);\n  }, [date]);\n  var day = dateObject ? dateObject.day : '';\n  useAnimatedReaction(function () {\n    return date ? isSameDay(selectedDate.value, date) : false;\n  }, function (selected, prevSelected) {\n    if (selected !== prevSelected) {\n      runOnJS(setSelected)(selected);\n    }\n  });\n  var _onPress = useCallback(function () {\n    setDate(date, UpdateSource.DAY_SELECT);\n    onPress == null ? void 0 : onPress(date);\n  }, [setDate, date, onPress]);\n  var isToday = isSameDay(today, date);\n  var inactive = dateObject ? dateObject.month !== currentMonth : false;\n  var isHidden = !showExtraDays && inactive;\n  var textStyle = useMemo(function () {\n    if (isHidden) {\n      return styles.textHidden;\n    } else if (inactive) {\n      return styles.textInactive;\n    } else if (selected) {\n      return styles.textSelected;\n    }\n    return styles.text;\n  }, [selected, inactive, isHidden]);\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: _onPress,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [isToday && _jsx(View, {\n        style: styles.todayIndicator\n      }), selected && _jsx(View, {\n        style: styles.selectedIndicator\n      }), _jsx(Text, {\n        style: textStyle,\n        children: day\n      })]\n    })\n  });\n};\nexport default Day;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DAY_SIZE,\n    height: DAY_SIZE\n  },\n  text: {\n    color: TEXT_COLOR\n  },\n  textSelected: {\n    color: SELECTED_TEXT_COLOR\n  },\n  textInactive: {\n    color: INACTIVE_TEXT_COLOR\n  },\n  textHidden: {\n    color: NO_COLOR\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    width: DAY_SIZE,\n    height: DAY_SIZE,\n    flex: 1,\n    borderRadius: 999,\n    backgroundColor: SELECTED_BACKGROUND_COLOR\n  },\n  todayIndicator: {\n    position: 'absolute',\n    width: DAY_SIZE,\n    height: DAY_SIZE,\n    flex: 1,\n    borderRadius: 999,\n    backgroundColor: TODAY_BACKGROUND_COLOR\n  }\n});","map":{"version":3,"names":["React","useContext","useCallback","useMemo","useState","StyleSheet","View","Text","TouchableWithoutFeedback","useAnimatedReaction","runOnJS","Colors","getDateObject","isSameDay","UpdateSource","CalendarContext","jsx","_jsx","jsxs","_jsxs","DAY_SIZE","NO_COLOR","transparent","TEXT_COLOR","$textPrimary","TODAY_BACKGROUND_COLOR","$backgroundPrimaryLight","SELECTED_BACKGROUND_COLOR","$backgroundPrimaryHeavy","SELECTED_TEXT_COLOR","$textDefaultLight","INACTIVE_TEXT_COLOR","$textNeutralLight","Day","props","date","onPress","currentMonth","_useContext","selectedDate","setDate","showExtraDays","today","_useState","_useState2","_slicedToArray","selected","setSelected","dateObject","day","value","prevSelected","_onPress","DAY_SELECT","isToday","inactive","month","isHidden","textStyle","styles","textHidden","textInactive","textSelected","text","children","style","container","todayIndicator","selectedIndicator","create","flex","alignItems","justifyContent","width","height","color","position","borderRadius","backgroundColor"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/incubator/Calendar/Day.js"],"sourcesContent":["import React, { useContext, useCallback, useMemo, useState } from 'react';\nimport { StyleSheet, View, Text, TouchableWithoutFeedback } from 'react-native';\nimport { useAnimatedReaction, runOnJS } from 'react-native-reanimated';\nimport { Colors } from \"../../style\";\nimport { getDateObject, isSameDay } from \"./helpers/DateUtils\";\nimport { UpdateSource } from \"./types\";\nimport CalendarContext from \"./CalendarContext\";\nconst DAY_SIZE = 32;\nconst NO_COLOR = Colors.transparent;\nconst TEXT_COLOR = Colors.$textPrimary;\nconst TODAY_BACKGROUND_COLOR = Colors.$backgroundPrimaryLight;\nconst SELECTED_BACKGROUND_COLOR = Colors.$backgroundPrimaryHeavy;\nconst SELECTED_TEXT_COLOR = Colors.$textDefaultLight;\nconst INACTIVE_TEXT_COLOR = Colors.$textNeutralLight;\nconst Day = props => {\n  const {\n    date,\n    onPress,\n    currentMonth\n  } = props;\n  const {\n    selectedDate,\n    setDate,\n    showExtraDays,\n    today\n  } = useContext(CalendarContext);\n  const [selected, setSelected] = useState(false);\n  const dateObject = useMemo(() => getDateObject(date), [date]);\n  const day = dateObject ? dateObject.day : '';\n  useAnimatedReaction(() => date ? isSameDay(selectedDate.value, date) : false, (selected, prevSelected) => {\n    if (selected !== prevSelected) {\n      runOnJS(setSelected)(selected);\n    }\n  });\n  const _onPress = useCallback(() => {\n    setDate(date, UpdateSource.DAY_SELECT);\n    onPress?.(date);\n  }, [setDate, date, onPress]);\n  const isToday = isSameDay(today, date);\n  const inactive = dateObject ? dateObject.month !== currentMonth : false;\n  const isHidden = !showExtraDays && inactive;\n  const textStyle = useMemo(() => {\n    if (isHidden) {\n      return styles.textHidden;\n    } else if (inactive) {\n      return styles.textInactive;\n    } else if (selected) {\n      return styles.textSelected;\n    }\n    return styles.text;\n  }, [selected, inactive, isHidden]);\n  return <TouchableWithoutFeedback onPress={_onPress}>\n      <View style={styles.container}>\n        {isToday && <View style={styles.todayIndicator} />}\n        {selected && <View style={styles.selectedIndicator} />}\n        <Text style={textStyle}>{day}</Text>\n      </View>\n    </TouchableWithoutFeedback>;\n};\nexport default Day;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DAY_SIZE,\n    height: DAY_SIZE\n  },\n  text: {\n    color: TEXT_COLOR\n  },\n  textSelected: {\n    color: SELECTED_TEXT_COLOR\n  },\n  textInactive: {\n    color: INACTIVE_TEXT_COLOR\n  },\n  textHidden: {\n    color: NO_COLOR\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    width: DAY_SIZE,\n    height: DAY_SIZE,\n    flex: 1,\n    borderRadius: 999,\n    backgroundColor: SELECTED_BACKGROUND_COLOR\n  },\n  todayIndicator: {\n    position: 'absolute',\n    width: DAY_SIZE,\n    height: DAY_SIZE,\n    flex: 1,\n    borderRadius: 999,\n    backgroundColor: TODAY_BACKGROUND_COLOR\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}