{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\nexport var ThemeManager = function () {\n  function ThemeManager() {\n    _classCallCheck(this, ThemeManager);\n    this.theme = {\n      components: {}\n    };\n    this.forcedTheme = {\n      components: {}\n    };\n  }\n  _createClass(ThemeManager, [{\n    key: \"setThemeContext\",\n    value: function setThemeContext(context) {\n      this.themeContext = context;\n    }\n  }, {\n    key: \"getThemeContext\",\n    value: function getThemeContext() {\n      return this.themeContext;\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      if (key === 'components') {\n        throw new Error('Overriding the \"components\" key is not possible.');\n      }\n      _set(this.theme, key, value);\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return _get(this.theme, key);\n    }\n  }, {\n    key: \"setComponentTheme\",\n    value: function setComponentTheme(componentName, overrides) {\n      if (_isFunction(overrides)) {\n        this.theme.components[componentName] = overrides;\n      } else {\n        this.theme.components[componentName] = _cloneDeep(overrides);\n      }\n    }\n  }, {\n    key: \"setComponentForcedTheme\",\n    value: function setComponentForcedTheme(componentName, overrides) {\n      if (_isFunction(overrides)) {\n        this.forcedTheme.components[componentName] = overrides;\n      } else {\n        this.forcedTheme.components[componentName] = _cloneDeep(overrides);\n      }\n    }\n  }, {\n    key: \"components\",\n    get: function get() {\n      return this.theme.components;\n    }\n  }, {\n    key: \"forcedThemeComponents\",\n    get: function get() {\n      return this.forcedTheme.components;\n    }\n  }]);\n  return ThemeManager;\n}();\nexport default new ThemeManager();","map":{"version":3,"names":["_cloneDeep","_isFunction","_get","_set","ThemeManager","_classCallCheck","theme","components","forcedTheme","_createClass","key","value","setThemeContext","context","themeContext","getThemeContext","setItem","Error","getItem","setComponentTheme","componentName","overrides","setComponentForcedTheme","get"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/style/themeManager.js"],"sourcesContent":["import _cloneDeep from \"lodash/cloneDeep\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\nexport class ThemeManager {\n  theme = {\n    components: {}\n  };\n  forcedTheme = {\n    components: {}\n  };\n  setThemeContext(context) {\n    this.themeContext = context;\n  }\n  getThemeContext() {\n    return this.themeContext;\n  }\n  setItem(key, value) {\n    if (key === 'components') {\n      throw new Error('Overriding the \"components\" key is not possible.');\n    }\n    // this.theme[key] = value;\n    _set(this.theme, key, value);\n  }\n  getItem(key) {\n    // return this.theme[key];\n    return _get(this.theme, key);\n  }\n  setComponentTheme(componentName, overrides) {\n    if (_isFunction(overrides)) {\n      this.theme.components[componentName] = overrides;\n    } else {\n      this.theme.components[componentName] = _cloneDeep(overrides);\n    }\n  }\n  setComponentForcedTheme(componentName, overrides) {\n    if (_isFunction(overrides)) {\n      this.forcedTheme.components[componentName] = overrides;\n    } else {\n      this.forcedTheme.components[componentName] = _cloneDeep(overrides);\n    }\n  }\n  get components() {\n    return this.theme.components;\n  }\n  get forcedThemeComponents() {\n    return this.forcedTheme.components;\n  }\n}\nexport default new ThemeManager();"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,kBAAkB;AACzC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,IAAI,MAAM,YAAY;AAC7B,WAAaC,YAAY;EAAA,SAAAA,aAAA;IAAAC,eAAA,OAAAD,YAAA;IAAA,KACvBE,KAAK,GAAG;MACNC,UAAU,EAAE,CAAC;IACf,CAAC;IAAA,KACDC,WAAW,GAAG;MACZD,UAAU,EAAE,CAAC;IACf,CAAC;EAAA;EAAAE,YAAA,CAAAL,YAAA;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAC,gBAAgBC,OAAO,EAAE;MACvB,IAAI,CAACC,YAAY,GAAGD,OAAO;IAC7B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAI,gBAAA,EAAkB;MAChB,OAAO,IAAI,CAACD,YAAY;IAC1B;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACD,SAAAK,QAAQN,GAAG,EAAEC,KAAK,EAAE;MAClB,IAAID,GAAG,KAAK,YAAY,EAAE;QACxB,MAAM,IAAIO,KAAK,CAAC,kDAAkD,CAAC;MACrE;MAEAd,IAAI,CAAC,IAAI,CAACG,KAAK,EAAEI,GAAG,EAAEC,KAAK,CAAC;IAC9B;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAO,QAAQR,GAAG,EAAE;MAEX,OAAOR,IAAI,CAAC,IAAI,CAACI,KAAK,EAAEI,GAAG,CAAC;IAC9B;EAAC;IAAAA,GAAA;IAAAC,KAAA,EACD,SAAAQ,kBAAkBC,aAAa,EAAEC,SAAS,EAAE;MAC1C,IAAIpB,WAAW,CAACoB,SAAS,CAAC,EAAE;QAC1B,IAAI,CAACf,KAAK,CAACC,UAAU,CAACa,aAAa,CAAC,GAAGC,SAAS;MAClD,CAAC,MAAM;QACL,IAAI,CAACf,KAAK,CAACC,UAAU,CAACa,aAAa,CAAC,GAAGpB,UAAU,CAACqB,SAAS,CAAC;MAC9D;IACF;EAAC;IAAAX,GAAA;IAAAC,KAAA,EACD,SAAAW,wBAAwBF,aAAa,EAAEC,SAAS,EAAE;MAChD,IAAIpB,WAAW,CAACoB,SAAS,CAAC,EAAE;QAC1B,IAAI,CAACb,WAAW,CAACD,UAAU,CAACa,aAAa,CAAC,GAAGC,SAAS;MACxD,CAAC,MAAM;QACL,IAAI,CAACb,WAAW,CAACD,UAAU,CAACa,aAAa,CAAC,GAAGpB,UAAU,CAACqB,SAAS,CAAC;MACpE;IACF;EAAC;IAAAX,GAAA;IAAAa,GAAA,EACD,SAAAA,IAAA,EAAiB;MACf,OAAO,IAAI,CAACjB,KAAK,CAACC,UAAU;IAC9B;EAAC;IAAAG,GAAA;IAAAa,GAAA,EACD,SAAAA,IAAA,EAA4B;MAC1B,OAAO,IAAI,CAACf,WAAW,CAACD,UAAU;IACpC;EAAC;EAAA,OAAAH,YAAA;AAAA;AAEH,eAAe,IAAIA,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}