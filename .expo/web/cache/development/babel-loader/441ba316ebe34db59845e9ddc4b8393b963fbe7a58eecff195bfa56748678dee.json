{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext, useRef, useCallback, useState, useMemo } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { ValidationMessagePosition } from \"./types\";\nimport { getColorByState, shouldPlaceholderFloat } from \"./Presenter\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport FieldContext from \"./FieldContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FLOATING_PLACEHOLDER_SCALE = 0.875;\nvar FloatingPlaceholder = function FloatingPlaceholder(props) {\n  var placeholder = props.placeholder,\n    _props$floatingPlaceh = props.floatingPlaceholderColor,\n    floatingPlaceholderColor = _props$floatingPlaceh === void 0 ? Colors.$textNeutralLight : _props$floatingPlaceh,\n    floatingPlaceholderStyle = props.floatingPlaceholderStyle,\n    validationMessagePosition = props.validationMessagePosition,\n    _props$extraOffset = props.extraOffset,\n    extraOffset = _props$extraOffset === void 0 ? 0 : _props$extraOffset,\n    testID = props.testID,\n    showMandatoryIndication = props.showMandatoryIndication;\n  var context = useContext(FieldContext);\n  var _useState = useState({\n      top: 0,\n      left: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    placeholderOffset = _useState2[0],\n    setPlaceholderOffset = _useState2[1];\n  var shouldFloat = shouldPlaceholderFloat(props, context.isFocused, context.hasValue, context.value);\n  var animation = useRef(new Animated.Value(Number(shouldFloat))).current;\n  var hidePlaceholder = !context.isValid && validationMessagePosition === ValidationMessagePosition.TOP;\n  var shouldRenderIndication = context.isMandatory && showMandatoryIndication;\n  useDidUpdate(function () {\n    Animated.timing(animation, {\n      toValue: Number(shouldFloat),\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  }, [shouldFloat]);\n  var animatedStyle = useMemo(function () {\n    var left = placeholderOffset.left,\n      top = placeholderOffset.top;\n    if (left !== 0 && top !== 0) {\n      return {\n        transform: [{\n          scale: interpolateValue(animation, [1, FLOATING_PLACEHOLDER_SCALE])\n        }, {\n          translateX: interpolateValue(animation, [0, -placeholderOffset.left - extraOffset / FLOATING_PLACEHOLDER_SCALE])\n        }, {\n          translateY: interpolateValue(animation, [0, -placeholderOffset.top])\n        }]\n      };\n    }\n    return {\n      opacity: 0\n    };\n  }, [placeholderOffset, extraOffset]);\n  var style = useMemo(function () {\n    return [styles.placeholder, floatingPlaceholderStyle, animatedStyle];\n  }, [floatingPlaceholderStyle, animatedStyle]);\n  var onPlaceholderLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    var translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    translate = Constants.isRTL ? -translate : translate;\n    setPlaceholderOffset({\n      left: translate / FLOATING_PLACEHOLDER_SCALE,\n      top: height\n    });\n  }, []);\n  return _jsx(View, {\n    absF: true,\n    style: hidePlaceholder && styles.hidden,\n    pointerEvents: 'none',\n    children: _jsx(Text, {\n      animated: true,\n      color: getColorByState(floatingPlaceholderColor, context),\n      style: style,\n      onLayout: onPlaceholderLayout,\n      testID: testID,\n      recorderTag: 'unmask',\n      numberOfLines: 1,\n      children: shouldRenderIndication ? placeholder == null ? void 0 : placeholder.concat('*') : placeholder\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  placeholder: _objectSpread({}, Platform.select({\n    android: {\n      textAlignVertical: 'center',\n      flexShrink: 1\n    }\n  })),\n  hidden: {\n    opacity: 0\n  }\n});\nfunction interpolateValue(animatedValue, outputRange) {\n  return animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: outputRange\n  });\n}\nFloatingPlaceholder.displayName = 'Incubator.TextField';\nexport default FloatingPlaceholder;","map":{"version":3,"names":["React","useContext","useRef","useCallback","useState","useMemo","Animated","StyleSheet","Platform","useDidUpdate","ValidationMessagePosition","getColorByState","shouldPlaceholderFloat","Colors","Constants","View","Text","FieldContext","jsx","_jsx","FLOATING_PLACEHOLDER_SCALE","FloatingPlaceholder","props","placeholder","_props$floatingPlaceh","floatingPlaceholderColor","$textNeutralLight","floatingPlaceholderStyle","validationMessagePosition","_props$extraOffset","extraOffset","testID","showMandatoryIndication","context","_useState","top","left","_useState2","_slicedToArray","placeholderOffset","setPlaceholderOffset","shouldFloat","isFocused","hasValue","value","animation","Value","Number","current","hidePlaceholder","isValid","TOP","shouldRenderIndication","isMandatory","timing","toValue","duration","useNativeDriver","start","animatedStyle","transform","scale","interpolateValue","translateX","translateY","opacity","style","styles","onPlaceholderLayout","event","_event$nativeEvent$la","nativeEvent","layout","width","height","translate","isRTL","absF","hidden","pointerEvents","children","animated","color","onLayout","recorderTag","numberOfLines","concat","create","_objectSpread","select","android","textAlignVertical","flexShrink","animatedValue","outputRange","interpolate","inputRange","displayName"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/textField/FloatingPlaceholder.js"],"sourcesContent":["import React, { useContext, useRef, useCallback, useState, useMemo } from 'react';\nimport { Animated, StyleSheet, Platform } from 'react-native';\nimport { useDidUpdate } from \"../../hooks\";\nimport { ValidationMessagePosition } from \"./types\";\nimport { getColorByState, shouldPlaceholderFloat } from \"./Presenter\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport FieldContext from \"./FieldContext\";\nconst FLOATING_PLACEHOLDER_SCALE = 0.875;\nconst FloatingPlaceholder = props => {\n  const {\n    placeholder,\n    floatingPlaceholderColor = Colors.$textNeutralLight,\n    floatingPlaceholderStyle,\n    validationMessagePosition,\n    extraOffset = 0,\n    testID,\n    showMandatoryIndication\n  } = props;\n  const context = useContext(FieldContext);\n  const [placeholderOffset, setPlaceholderOffset] = useState({\n    top: 0,\n    left: 0\n  });\n  const shouldFloat = shouldPlaceholderFloat(props, context.isFocused, context.hasValue, context.value);\n  const animation = useRef(new Animated.Value(Number(shouldFloat))).current;\n  const hidePlaceholder = !context.isValid && validationMessagePosition === ValidationMessagePosition.TOP;\n  const shouldRenderIndication = context.isMandatory && showMandatoryIndication;\n  useDidUpdate(() => {\n    Animated.timing(animation, {\n      toValue: Number(shouldFloat),\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  }, [shouldFloat]);\n  const animatedStyle = useMemo(() => {\n    const {\n      left,\n      top\n    } = placeholderOffset;\n    if (left !== 0 && top !== 0) {\n      return {\n        transform: [{\n          scale: interpolateValue(animation, [1, FLOATING_PLACEHOLDER_SCALE])\n        }, {\n          translateX: interpolateValue(animation, [0, -placeholderOffset.left - extraOffset / FLOATING_PLACEHOLDER_SCALE])\n        }, {\n          translateY: interpolateValue(animation, [0, -placeholderOffset.top])\n        }]\n      };\n    }\n    return {\n      opacity: 0\n    };\n  }, [placeholderOffset, extraOffset]);\n  const style = useMemo(() => [styles.placeholder, floatingPlaceholderStyle, animatedStyle], [floatingPlaceholderStyle, animatedStyle]);\n  const onPlaceholderLayout = useCallback(event => {\n    const {\n      width,\n      height\n    } = event.nativeEvent.layout;\n    let translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    translate = Constants.isRTL ? -translate : translate;\n    setPlaceholderOffset({\n      left: translate / FLOATING_PLACEHOLDER_SCALE,\n      top: height\n    });\n  }, []);\n  return <View absF style={hidePlaceholder && styles.hidden} pointerEvents={'none'}>\n      <Text animated color={getColorByState(floatingPlaceholderColor, context)} style={style} onLayout={onPlaceholderLayout} testID={testID} recorderTag={'unmask'} numberOfLines={1}>\n        {shouldRenderIndication ? placeholder?.concat('*') : placeholder}\n      </Text>\n    </View>;\n};\nconst styles = StyleSheet.create({\n  placeholder: {\n    ...Platform.select({\n      android: {\n        textAlignVertical: 'center',\n        flexShrink: 1\n      }\n    })\n  },\n  hidden: {\n    opacity: 0\n  }\n});\nfunction interpolateValue(animatedValue, outputRange) {\n  return animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange\n  });\n}\nFloatingPlaceholder.displayName = 'Incubator.TextField';\nexport default FloatingPlaceholder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}