{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _map from \"lodash/map\";\nimport _clamp from \"lodash/clamp\";\nimport _toLower from \"lodash/toLower\";\nimport _toUpper from \"lodash/toUpper\";\nimport _inRange from \"lodash/inRange\";\nimport _reverse from \"lodash/reverse\";\nimport _memoize from \"lodash/memoize\";\nimport _indexOf from \"lodash/indexOf\";\nimport _findKey from \"lodash/findKey\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _forEach from \"lodash/forEach\";\nimport Color from 'color';\nimport tinycolor from 'tinycolor2';\nimport { colorsPalette } from \"./colorsPalette\";\nimport DesignTokens from \"./designTokens\";\nimport DesignTokensDM from \"./designTokensDM\";\nimport ColorName from \"./colorName\";\nimport Scheme from \"./scheme\";\nimport LogService from \"../services/LogService\";\nexport var Colors = function () {\n  function Colors() {\n    var _this = this;\n    _classCallCheck(this, Colors);\n    this.shouldSupportDarkMode = false;\n    this.shouldReverseOnDark = function (avoidReverseOnDark) {\n      return !avoidReverseOnDark && _this.shouldSupportDarkMode && Scheme.isDarkMode();\n    };\n    this.generatePalette = _memoize(function (color, options) {\n      var hsl = Color(color).hsl();\n      var colorLightness = hsl.color[2];\n      var lightness = Math.round(colorLightness);\n      var isWhite = lightness === 100;\n      var lightnessLevel = options != null && options.addDarkestTints ? isWhite ? 5 : 0 : 20;\n      var lightColorsThreshold = options != null && options.adjustLightness && _this.shouldGenerateDarkerPalette(color) ? 5 : 0;\n      var step = 10;\n      var ls = [colorLightness];\n      var l = lightness - step;\n      while (l >= lightnessLevel - lightColorsThreshold) {\n        ls.unshift(l);\n        l -= step;\n      }\n      l = lightness + step;\n      while (l < 100 - lightColorsThreshold) {\n        ls.push(l);\n        l += step;\n      }\n      var tints = [];\n      _forEach(ls, function (e) {\n        var tint = generateColorTint(color, e);\n        tints.push(tint);\n      });\n      var size = options != null && options.addDarkestTints ? 10 : 8;\n      var start = options != null && options.addDarkestTints && colorLightness > 10 ? -size : 0;\n      var end = options != null && options.addDarkestTints && colorLightness > 10 ? undefined : size;\n      var sliced = tints.slice(start, end);\n      var adjusted = (options == null ? void 0 : options.adjustSaturation) && adjustSaturation(sliced, color, options == null ? void 0 : options.saturationLevels);\n      return adjusted || sliced;\n    }, generatePaletteCacheResolver);\n    this.defaultPaletteOptions = {\n      adjustLightness: true,\n      adjustSaturation: true,\n      addDarkestTints: false,\n      avoidReverseOnDark: false,\n      saturationLevels: undefined\n    };\n    this.generateColorPalette = _memoize(function (color, options) {\n      var _options = _objectSpread(_objectSpread({}, _this.defaultPaletteOptions), options);\n      var palette = _this.generatePalette(color, _options);\n      return _this.shouldReverseOnDark(_options == null ? void 0 : _options.avoidReverseOnDark) ? _reverse(palette) : palette;\n    }, generatePaletteCacheResolver);\n    var colors = Object.assign(colorsPalette);\n    Object.assign(this, colors);\n    this.loadSchemes({\n      light: DesignTokens,\n      dark: DesignTokensDM\n    });\n    Scheme.addChangeListener(function () {\n      Object.assign(_this, Scheme.getScheme());\n    });\n  }\n  _createClass(Colors, [{\n    key: \"loadColors\",\n    value: function loadColors(colors) {\n      var _this2 = this;\n      _forEach(colors, function (value, key) {\n        _this2[key] = value;\n      });\n    }\n  }, {\n    key: \"loadSchemes\",\n    value: function loadSchemes(schemes) {\n      Scheme.loadSchemes(schemes);\n      Object.assign(this, Scheme.getScheme());\n    }\n  }, {\n    key: \"loadDesignTokens\",\n    value: function loadDesignTokens(options) {\n      this.loadSchemes({\n        light: this.generateDesignTokens(options.primaryColor),\n        dark: this.generateDesignTokens(options.primaryColor, true)\n      });\n    }\n  }, {\n    key: \"getScheme\",\n    value: function getScheme() {\n      return Scheme.getSchemeType();\n    }\n  }, {\n    key: \"setScheme\",\n    value: function setScheme(scheme) {\n      Scheme.setScheme(scheme);\n    }\n  }, {\n    key: \"supportDarkMode\",\n    value: function supportDarkMode() {\n      this.shouldSupportDarkMode = true;\n    }\n  }, {\n    key: \"rgba\",\n    value: function rgba(p1, p2, p3, p4) {\n      var hex;\n      var opacity;\n      var red;\n      var green;\n      var blue;\n      if (typeof p1 === 'object') {\n        p1 = colorStringValue(p1);\n      }\n      if (arguments.length === 2 && typeof p1 === 'string') {\n        hex = p1;\n        opacity = p2;\n        hex = validateHex(hex);\n        red = parseInt(hex.substring(0, 2), 16);\n        green = parseInt(hex.substring(2, 4), 16);\n        blue = parseInt(hex.substring(4, 6), 16);\n      } else if (arguments.length === 4 && typeof p1 === 'number') {\n        red = validateRGB(p1);\n        green = validateRGB(p2);\n        blue = validateRGB(p3);\n        opacity = p4;\n      } else {\n        LogService.error('Colors.rgba fail due to invalid arguments');\n        return undefined;\n      }\n      return `rgba(${red}, ${green}, ${blue}, ${opacity})`;\n    }\n  }, {\n    key: \"getBackgroundKeysPattern\",\n    value: function getBackgroundKeysPattern() {\n      return /^(bg-|background-)/;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty(color) {\n      if (_isNil(color) || color === 'transparent') {\n        return true;\n      }\n      try {\n        Color(color);\n        return false;\n      } catch (error) {\n        console.warn('Colors.isEmpty failed:', error);\n        return true;\n      }\n    }\n  }, {\n    key: \"getColorName\",\n    value: function getColorName(colorValue) {\n      var color = colorStringValue(colorValue);\n      return ColorName.name(color)[1];\n    }\n  }, {\n    key: \"getSystemColorByHex\",\n    value: function getSystemColorByHex(colorValue) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var color = colorStringValue(colorValue);\n      var results = [];\n      var validColors = options == null ? void 0 : options.validColors;\n      for (var _ref of Object.entries(this)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var value = _ref2[1];\n        if (value.toString() === color) {\n          if (validColors != null && validColors.includes(key.split(/[0-9]/)[0])) {\n            return key;\n          } else {\n            results.push(key);\n          }\n        }\n      }\n      return validColors ? undefined : results[0];\n    }\n  }, {\n    key: \"getColorTint\",\n    value: function getColorTint(colorValue, tintKey) {\n      var _this3 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_isUndefined(tintKey) || isNaN(tintKey) || _isUndefined(colorValue)) {\n        return colorValue;\n      }\n      var color = colorStringValue(colorValue);\n      if (color === 'transparent') {\n        return color;\n      }\n      var colorKey = _findKey(this, function (_value, key) {\n        return _this3[key] === color;\n      });\n      if (colorKey) {\n        var colorKeys = [1, 5, 10, 20, 30, 40, 50, 60, 70, 80];\n        var keyIndex = _indexOf(colorKeys, Number(tintKey));\n        var key = this.shouldReverseOnDark(options == null ? void 0 : options.avoidReverseOnDark) ? colorKeys[colorKeys.length - 1 - keyIndex] : tintKey;\n        var requiredColorKey = `${colorKey.slice(0, -2)}${key}`;\n        var requiredColorKey1 = `${colorKey.slice(0, -1)}${key}`;\n        var requiredColor = this[requiredColorKey] || this[requiredColorKey1];\n        if (_isUndefined(requiredColor)) {\n          return this.getTintedColorForDynamicHex(color, tintKey);\n        }\n        return requiredColor;\n      }\n      return this.getTintedColorForDynamicHex(color, tintKey);\n    }\n  }, {\n    key: \"getTintedColorForDynamicHex\",\n    value: function getTintedColorForDynamicHex(color, tintKey) {\n      var tintLevel = Math.floor(Number(tintKey) / 10);\n      tintLevel = Math.max(1, tintLevel);\n      tintLevel = Math.min(8, tintLevel);\n      var colorsPalette = this.generateColorPalette(color);\n      return colorsPalette[tintLevel - 1];\n    }\n  }, {\n    key: \"generateDesignTokens\",\n    value: function generateDesignTokens(primaryColor, dark) {\n      var colorPalette = this.generatePalette(primaryColor);\n      if (dark) {\n        colorPalette = _reverse(colorPalette);\n      }\n      var color30 = colorPalette[2];\n      var color50 = colorPalette[4];\n      var color70 = colorPalette[6];\n      var color80 = colorPalette[7];\n      var isPrimaryColorDark = this.isDark(primaryColor);\n      var mainColor = isPrimaryColorDark ? primaryColor : color30;\n      if (dark) {\n        mainColor = isPrimaryColorDark ? color30 : primaryColor;\n      }\n      return {\n        $backgroundPrimaryHeavy: mainColor,\n        $backgroundPrimaryLight: color80,\n        $backgroundPrimaryMedium: color70,\n        $iconPrimary: mainColor,\n        $iconPrimaryLight: color50,\n        $textPrimary: mainColor,\n        $outlinePrimary: mainColor\n      };\n    }\n  }, {\n    key: \"shouldGenerateDarkerPalette\",\n    value: function shouldGenerateDarkerPalette(color) {\n      var hsl = Color(color).hsl();\n      var hue = hsl.color[0];\n      return _inRange(hue, 51, 184);\n    }\n  }, {\n    key: \"isDark\",\n    value: function isDark(colorValue) {\n      var darkThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.55;\n      var color = colorValue === null ? undefined : colorStringValue(colorValue);\n      var lum = tinycolor(color).getLuminance();\n      return lum < darkThreshold;\n    }\n  }, {\n    key: \"isValidHex\",\n    value: function isValidHex(string) {\n      return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString(color) {\n      return tinycolor(color).toHexString();\n    }\n  }, {\n    key: \"getHSL\",\n    value: function getHSL(color) {\n      return tinycolor(color).toHsl();\n    }\n  }, {\n    key: \"isTransparent\",\n    value: function isTransparent(color) {\n      return color && _toUpper(color) === _toUpper('transparent');\n    }\n  }, {\n    key: \"areEqual\",\n    value: function areEqual(colorAValue, colorBValue) {\n      var colorA = colorStringValue(colorAValue);\n      var colorB = colorStringValue(colorBValue);\n      return _toLower(colorA) === _toLower(colorB);\n    }\n  }, {\n    key: \"isDesignToken\",\n    value: function isDesignToken(color) {\n      return !!(color != null && color.semantic || color != null && color.resource_paths);\n    }\n  }]);\n  return Colors;\n}();\nfunction colorStringValue(color) {\n  return color == null ? void 0 : color.toString();\n}\nfunction adjustAllSaturations(colors, baseColor, levels) {\n  var array = [];\n  _forEach(colors, function (c, index) {\n    if (c === baseColor) {\n      array[index] = baseColor;\n    } else {\n      var hsl = Color(c).hsl();\n      var saturation = hsl.color[1];\n      var level = levels[index];\n      if (level !== undefined) {\n        var saturationLevel = saturation + level;\n        var clampedLevel = _clamp(saturationLevel, 0, 100);\n        var adjusted = setSaturation(c, clampedLevel);\n        array[index] = adjusted;\n      }\n    }\n  });\n  return array;\n}\nfunction adjustSaturation(colors, baseColor, levels) {\n  if (levels) {\n    return adjustAllSaturations(colors, baseColor, levels);\n  }\n  var array;\n  var lightnessLevel = 80;\n  var saturationLevel = 60;\n  var hsl = Color(baseColor).hsl();\n  var lightness = Math.round(hsl.color[2]);\n  if (lightness > lightnessLevel) {\n    var saturation = Math.round(hsl.color[1]);\n    if (saturation > saturationLevel) {\n      array = _map(colors, function (e) {\n        return e !== baseColor ? setSaturation(e, saturationLevel) : e;\n      });\n    }\n  }\n  return array;\n}\nfunction setSaturation(color, saturation) {\n  var hsl = Color(color).hsl();\n  hsl.color[1] = saturation;\n  return hsl.hex();\n}\nfunction generateColorTint(color, tintLevel) {\n  var hsl = Color(color).hsl();\n  hsl.color[2] = tintLevel;\n  return hsl.hex();\n}\nfunction validateRGB(value) {\n  if (isNaN(value) || value > 255 || value < 0) {\n    throw new Error(`${value} is invalid rgb code, please use number between 0-255`);\n  }\n  return value;\n}\nfunction validateHex(value) {\n  if (!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value)) {\n    throw new Error(`${value} is invalid hex color`);\n  }\n  value = value.replace('#', '');\n  if (value.length === 3) {\n    value = threeDigitHexToSix(value);\n  }\n  return value;\n}\nfunction threeDigitHexToSix(value) {\n  return value.replace(/./g, '$&$&');\n}\nfunction generatePaletteCacheResolver(color, options) {\n  return `${color}${options ? '_' + JSON.stringify(options) : ''}`;\n}\nvar TypedColors = Colors;\nvar colorObject = new TypedColors();\ncolorObject.loadColors(colorsPalette);\nexport default colorObject;","map":{"version":3,"names":["_map","_clamp","_toLower","_toUpper","_inRange","_reverse","_memoize","_indexOf","_findKey","_isUndefined","_isNil","_forEach","Color","tinycolor","colorsPalette","DesignTokens","DesignTokensDM","ColorName","Scheme","LogService","Colors","_this","_classCallCheck","shouldSupportDarkMode","shouldReverseOnDark","avoidReverseOnDark","isDarkMode","generatePalette","color","options","hsl","colorLightness","lightness","Math","round","isWhite","lightnessLevel","addDarkestTints","lightColorsThreshold","adjustLightness","shouldGenerateDarkerPalette","step","ls","l","unshift","push","tints","e","tint","generateColorTint","size","start","end","undefined","sliced","slice","adjusted","adjustSaturation","saturationLevels","generatePaletteCacheResolver","defaultPaletteOptions","generateColorPalette","_options","_objectSpread","palette","colors","Object","assign","loadSchemes","light","dark","addChangeListener","getScheme","_createClass","key","value","loadColors","_this2","schemes","loadDesignTokens","generateDesignTokens","primaryColor","getSchemeType","setScheme","scheme","supportDarkMode","rgba","p1","p2","p3","p4","hex","opacity","red","green","blue","colorStringValue","arguments","length","validateHex","parseInt","substring","validateRGB","error","getBackgroundKeysPattern","isEmpty","console","warn","getColorName","colorValue","name","getSystemColorByHex","results","validColors","_ref","entries","_ref2","_slicedToArray","toString","includes","split","getColorTint","tintKey","_this3","isNaN","colorKey","_value","colorKeys","keyIndex","Number","requiredColorKey","requiredColorKey1","requiredColor","getTintedColorForDynamicHex","tintLevel","floor","max","min","colorPalette","color30","color50","color70","color80","isPrimaryColorDark","isDark","mainColor","$backgroundPrimaryHeavy","$backgroundPrimaryLight","$backgroundPrimaryMedium","$iconPrimary","$iconPrimaryLight","$textPrimary","$outlinePrimary","hue","darkThreshold","lum","getLuminance","isValidHex","string","test","getHexString","toHexString","getHSL","toHsl","isTransparent","areEqual","colorAValue","colorBValue","colorA","colorB","isDesignToken","semantic","resource_paths","adjustAllSaturations","baseColor","levels","array","c","index","saturation","level","saturationLevel","clampedLevel","setSaturation","Error","replace","threeDigitHexToSix","JSON","stringify","TypedColors","colorObject"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/style/colors.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport _clamp from \"lodash/clamp\";\nimport _toLower from \"lodash/toLower\";\nimport _toUpper from \"lodash/toUpper\";\nimport _inRange from \"lodash/inRange\";\nimport _reverse from \"lodash/reverse\";\nimport _memoize from \"lodash/memoize\";\nimport _indexOf from \"lodash/indexOf\";\nimport _findKey from \"lodash/findKey\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _forEach from \"lodash/forEach\";\n//@ts-ignore\nimport Color from 'color';\nimport tinycolor from 'tinycolor2';\nimport { colorsPalette } from \"./colorsPalette\";\nimport DesignTokens from \"./designTokens\";\nimport DesignTokensDM from \"./designTokensDM\";\n//@ts-ignore\nimport ColorName from \"./colorName\";\nimport Scheme from \"./scheme\";\nimport LogService from \"../services/LogService\";\nexport class Colors {\n  shouldSupportDarkMode = false;\n  constructor() {\n    const colors = Object.assign(colorsPalette);\n    Object.assign(this, colors);\n    this.loadSchemes({\n      light: DesignTokens,\n      dark: DesignTokensDM\n    });\n    Scheme.addChangeListener(() => {\n      Object.assign(this, Scheme.getScheme());\n    });\n  }\n  /**\n   * Load custom set of colors\n   * arguments:\n   * colors - map of keys and colors values e.g {grey10: '#20303C', grey20: '#43515C'}\n   */\n  loadColors(colors) {\n    _forEach(colors, (value, key) => {\n      this[key] = value;\n    });\n  }\n  /**\n   * Load set of schemes for light/dark mode\n   * arguments:\n   * schemes - two sets of map of colors e.g {light: {screen: 'white'}, dark: {screen: 'black'}}\n   */\n  loadSchemes(schemes) {\n    Scheme.loadSchemes(schemes);\n    Object.assign(this, Scheme.getScheme());\n  }\n\n  /**\n   * Load light and dark schemes based on generated design tokens\n   * @param color - palette color\n   */\n  loadDesignTokens(options) {\n    this.loadSchemes({\n      light: this.generateDesignTokens(options.primaryColor),\n      dark: this.generateDesignTokens(options.primaryColor, true)\n    });\n  }\n\n  /**\n   * Get app's current color scheme\n   */\n  getScheme() {\n    return Scheme.getSchemeType();\n  }\n\n  /**\n   * Set color scheme for app\n   * arguments:\n   * scheme - color scheme e.g light/dark/default\n   */\n  setScheme(scheme) {\n    Scheme.setScheme(scheme);\n  }\n\n  /**\n   * Support listening to Appearance changes\n   * and change the design tokens accordingly\n   */\n  supportDarkMode() {\n    this.shouldSupportDarkMode = true;\n  }\n\n  /**\n   * Add alpha to hex or rgb color\n   * arguments:\n   * p1 - hex color / R part of RGB\n   * p2 - opacity / G part of RGB\n   * p3 - B part of RGB\n   * p4 - opacity\n   */\n\n  rgba(p1, p2, p3, p4) {\n    let hex;\n    let opacity;\n    let red;\n    let green;\n    let blue;\n\n    // Handle design token PlatformColor object\n    if (typeof p1 === 'object') {\n      p1 = colorStringValue(p1);\n    }\n    if (arguments.length === 2 && typeof p1 === 'string') {\n      hex = p1;\n      opacity = p2;\n      hex = validateHex(hex);\n      red = parseInt(hex.substring(0, 2), 16);\n      green = parseInt(hex.substring(2, 4), 16);\n      blue = parseInt(hex.substring(4, 6), 16);\n    } else if (arguments.length === 4 && typeof p1 === 'number') {\n      red = validateRGB(p1);\n      green = validateRGB(p2);\n      blue = validateRGB(p3);\n      opacity = p4;\n    } else {\n      LogService.error('Colors.rgba fail due to invalid arguments');\n      return undefined;\n    }\n    return `rgba(${red}, ${green}, ${blue}, ${opacity})`;\n  }\n  getBackgroundKeysPattern() {\n    return /^(bg-|background-)/;\n  }\n  isEmpty(color) {\n    if (_isNil(color) || color === 'transparent') {\n      return true;\n    }\n    try {\n      Color(color);\n      return false;\n    } catch (error) {\n      console.warn('Colors.isEmpty failed:', error);\n      return true;\n    }\n  }\n  getColorName(colorValue) {\n    const color = colorStringValue(colorValue);\n    return ColorName.name(color)[1];\n  }\n  getSystemColorByHex(colorValue, options = {}) {\n    const color = colorStringValue(colorValue);\n    const results = [];\n    const validColors = options?.validColors;\n    for (const [key, value] of Object.entries(this)) {\n      if (value.toString() === color) {\n        if (validColors?.includes(key.split(/[0-9]/)[0])) {\n          return key;\n        } else {\n          results.push(key);\n        }\n      }\n    }\n    return validColors ? undefined : results[0];\n  }\n  shouldReverseOnDark = avoidReverseOnDark => !avoidReverseOnDark && this.shouldSupportDarkMode && Scheme.isDarkMode();\n  getColorTint(colorValue, tintKey, options = {}) {\n    if (_isUndefined(tintKey) || isNaN(tintKey) || _isUndefined(colorValue)) {\n      // console.error('\"Colors.getColorTint\" must accept a color and tintKey params');\n      return colorValue;\n    }\n    const color = colorStringValue(colorValue);\n    if (color === 'transparent') {\n      return color;\n    }\n    const colorKey = _findKey(this, (_value, key) => this[key] === color);\n    if (colorKey) {\n      const colorKeys = [1, 5, 10, 20, 30, 40, 50, 60, 70, 80];\n      const keyIndex = _indexOf(colorKeys, Number(tintKey));\n      const key = this.shouldReverseOnDark(options?.avoidReverseOnDark) ? colorKeys[colorKeys.length - 1 - keyIndex] : tintKey;\n      const requiredColorKey = `${colorKey.slice(0, -2)}${key}`;\n      const requiredColorKey1 = `${colorKey.slice(0, -1)}${key}`;\n      const requiredColor = this[requiredColorKey] || this[requiredColorKey1];\n      if (_isUndefined(requiredColor)) {\n        return this.getTintedColorForDynamicHex(color, tintKey);\n      }\n      return requiredColor;\n    }\n    return this.getTintedColorForDynamicHex(color, tintKey);\n  }\n  getTintedColorForDynamicHex(color, tintKey) {\n    // Handles dynamic colors (non uilib colors)\n    let tintLevel = Math.floor(Number(tintKey) / 10);\n    tintLevel = Math.max(1, tintLevel);\n    tintLevel = Math.min(8, tintLevel);\n    const colorsPalette = this.generateColorPalette(color);\n    return colorsPalette[tintLevel - 1];\n  }\n  generatePalette = _memoize((color, options) => {\n    const hsl = Color(color).hsl();\n    const colorLightness = hsl.color[2];\n    const lightness = Math.round(colorLightness);\n    const isWhite = lightness === 100;\n    const lightnessLevel = options?.addDarkestTints ? isWhite ? 5 : 0 : 20;\n    const lightColorsThreshold = options?.adjustLightness && this.shouldGenerateDarkerPalette(color) ? 5 : 0;\n    const step = /* options?.addDarkestTints ? 9 :  */10;\n    const ls = [colorLightness];\n    let l = lightness - step;\n    while (l >= lightnessLevel - lightColorsThreshold) {\n      // darker tints\n      ls.unshift(l);\n      l -= step;\n    }\n    l = lightness + step;\n    while (l < 100 - lightColorsThreshold) {\n      // lighter tints\n      ls.push(l);\n      l += step;\n    }\n    const tints = [];\n    _forEach(ls, e => {\n      const tint = generateColorTint(color, e);\n      tints.push(tint);\n    });\n    const size = options?.addDarkestTints ? 10 : 8;\n    const start = options?.addDarkestTints && colorLightness > 10 ? -size : 0;\n    const end = options?.addDarkestTints && colorLightness > 10 ? undefined : size;\n    const sliced = tints.slice(start, end);\n    const adjusted = options?.adjustSaturation && adjustSaturation(sliced, color, options?.saturationLevels);\n    return adjusted || sliced;\n  }, generatePaletteCacheResolver);\n  defaultPaletteOptions = {\n    adjustLightness: true,\n    adjustSaturation: true,\n    addDarkestTints: false,\n    avoidReverseOnDark: false,\n    saturationLevels: undefined\n  };\n  generateColorPalette = _memoize((color, options) => {\n    const _options = {\n      ...this.defaultPaletteOptions,\n      ...options\n    };\n    const palette = this.generatePalette(color, _options);\n    return this.shouldReverseOnDark(_options?.avoidReverseOnDark) ? _reverse(palette) : palette;\n  }, generatePaletteCacheResolver);\n  generateDesignTokens(primaryColor, dark) {\n    let colorPalette = this.generatePalette(primaryColor);\n    if (dark) {\n      colorPalette = _reverse(colorPalette);\n    }\n    const color30 = colorPalette[2];\n    const color50 = colorPalette[4];\n    const color70 = colorPalette[6];\n    const color80 = colorPalette[7];\n    const isPrimaryColorDark = this.isDark(primaryColor);\n    let mainColor = isPrimaryColorDark ? primaryColor : color30;\n    if (dark) {\n      mainColor = isPrimaryColorDark ? color30 : primaryColor;\n    }\n    return {\n      $backgroundPrimaryHeavy: mainColor,\n      $backgroundPrimaryLight: color80,\n      $backgroundPrimaryMedium: color70,\n      $iconPrimary: mainColor,\n      $iconPrimaryLight: color50,\n      $textPrimary: mainColor,\n      $outlinePrimary: mainColor\n    };\n  }\n  shouldGenerateDarkerPalette(color) {\n    const hsl = Color(color).hsl();\n    const hue = hsl.color[0];\n    return _inRange(hue, 51, 184);\n  }\n  isDark(colorValue, darkThreshold = 0.55) {\n    const color = colorValue === null ? undefined : colorStringValue(colorValue);\n    const lum = tinycolor(color).getLuminance();\n    return lum < darkThreshold;\n  }\n  isValidHex(string) {\n    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n  }\n  getHexString(color) {\n    return tinycolor(color).toHexString();\n  }\n  getHSL(color) {\n    return tinycolor(color).toHsl();\n  }\n  isTransparent(color) {\n    return color && _toUpper(color) === _toUpper('transparent');\n  }\n  areEqual(colorAValue, colorBValue) {\n    const colorA = colorStringValue(colorAValue);\n    const colorB = colorStringValue(colorBValue);\n    return _toLower(colorA) === _toLower(colorB);\n  }\n  isDesignToken(color) {\n    return !!(color?.semantic || color?.resource_paths);\n  }\n}\nfunction colorStringValue(color) {\n  return color?.toString();\n}\nfunction adjustAllSaturations(colors, baseColor, levels) {\n  const array = [];\n  _forEach(colors, (c, index) => {\n    if (c === baseColor) {\n      array[index] = baseColor;\n    } else {\n      const hsl = Color(c).hsl();\n      const saturation = hsl.color[1];\n      const level = levels[index];\n      if (level !== undefined) {\n        const saturationLevel = saturation + level;\n        const clampedLevel = _clamp(saturationLevel, 0, 100);\n        const adjusted = setSaturation(c, clampedLevel);\n        array[index] = adjusted;\n      }\n    }\n  });\n  return array;\n}\nfunction adjustSaturation(colors, baseColor, levels) {\n  if (levels) {\n    return adjustAllSaturations(colors, baseColor, levels);\n  }\n  let array;\n  const lightnessLevel = 80;\n  const saturationLevel = 60;\n  const hsl = Color(baseColor).hsl();\n  const lightness = Math.round(hsl.color[2]);\n  if (lightness > lightnessLevel) {\n    const saturation = Math.round(hsl.color[1]);\n    if (saturation > saturationLevel) {\n      array = _map(colors, e => e !== baseColor ? setSaturation(e, saturationLevel) : e);\n    }\n  }\n  return array;\n}\nfunction setSaturation(color, saturation) {\n  const hsl = Color(color).hsl();\n  hsl.color[1] = saturation;\n  return hsl.hex();\n}\nfunction generateColorTint(color, tintLevel) {\n  const hsl = Color(color).hsl();\n  hsl.color[2] = tintLevel;\n  return hsl.hex();\n}\nfunction validateRGB(value) {\n  if (isNaN(value) || value > 255 || value < 0) {\n    throw new Error(`${value} is invalid rgb code, please use number between 0-255`);\n  }\n  return value;\n}\nfunction validateHex(value) {\n  if (!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value)) {\n    throw new Error(`${value} is invalid hex color`);\n  }\n  value = value.replace('#', '');\n  if (value.length === 3) {\n    value = threeDigitHexToSix(value);\n  }\n  return value;\n}\nfunction threeDigitHexToSix(value) {\n  return value.replace(/./g, '$&$&');\n}\nfunction generatePaletteCacheResolver(color, options) {\n  return `${color}${options ? '_' + JSON.stringify(options) : ''}`;\n}\nconst TypedColors = Colors;\nconst colorObject = new TypedColors();\ncolorObject.loadColors(colorsPalette);\nexport default colorObject;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}