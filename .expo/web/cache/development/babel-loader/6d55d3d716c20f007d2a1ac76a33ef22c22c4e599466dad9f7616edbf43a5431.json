{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { Colors, Typography } from \"../../style\";\nimport { BORDER_RADIUS, getHexString, getTextColor } from \"./ColorPickerPresenter\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport { Constants } from \"../../commons/new\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Preview = function Preview(props) {\n  var _textInput$current;\n  var color = props.color,\n    text = props.text,\n    onChangeText = props.onChangeText,\n    previewInputStyle = props.previewInputStyle,\n    onFocus = props.onFocus,\n    accessibilityLabels = props.accessibilityLabels,\n    testID = props.testID;\n  var textInput = useRef(null);\n  var hex = getHexString(color);\n  var textColor = getTextColor(hex);\n  var fontScale = PixelRatio.getFontScale();\n  var value = Colors.isTransparent(text) ? '000000' : text;\n  return _jsx(View, {\n    style: [styles.preview, {\n      backgroundColor: hex\n    }],\n    children: _jsxs(TouchableOpacity, {\n      center: true,\n      onPress: (_textInput$current = textInput.current) == null ? void 0 : _textInput$current.focus,\n      activeOpacity: 1,\n      accessible: false,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          text60: true,\n          white: true,\n          \"marginL-13\": true,\n          \"marginR-5\": Constants.isIOS,\n          style: {\n            color: textColor,\n            transform: [{\n              scaleX: I18nManager.isRTL ? -1 : 1\n            }]\n          },\n          accessible: false,\n          recorderTag: 'unmask',\n          children: \"#\"\n        }), _jsx(TextInput, {\n          ref: textInput,\n          value: value,\n          maxLength: 6,\n          numberOfLines: 1,\n          onChangeText: onChangeText,\n          style: [styles.input, {\n            color: textColor,\n            width: value ? (value.length + 1) * 16.5 * fontScale : undefined\n          }, Constants.isAndroid && {\n            padding: 0\n          }, previewInputStyle],\n          selectionColor: textColor,\n          underlineColorAndroid: \"transparent\",\n          autoCorrect: false,\n          autoComplete: 'off',\n          autoCapitalize: 'characters',\n          returnKeyType: 'done',\n          enablesReturnKeyAutomatically: true,\n          onFocus: onFocus,\n          accessibilityLabel: accessibilityLabels == null ? void 0 : accessibilityLabels.input,\n          testID: `${testID}.dialog.textInput`\n        })]\n      }), _jsx(View, {\n        style: [{\n          backgroundColor: textColor\n        }, styles.underline]\n      })]\n    })\n  });\n};\nexport default Preview;\nvar styles = StyleSheet.create({\n  header: {\n    height: 56,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS,\n    backgroundColor: Colors.$backgroundDefault\n  },\n  preview: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    marginBottom: Constants.isAndroid ? 5 : 8,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  input: _objectSpread(_objectSpread({}, Typography.text60), {}, {\n    letterSpacing: 3,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }),\n  underline: {\n    height: 1.5,\n    width: Constants.isAndroid ? 119 : 134,\n    marginRight: Constants.isAndroid ? 13 : 8\n  }\n});","map":{"version":3,"names":["React","useRef","StyleSheet","TextInput","PixelRatio","I18nManager","Colors","Typography","BORDER_RADIUS","getHexString","getTextColor","View","TouchableOpacity","Text","Constants","jsx","_jsx","jsxs","_jsxs","Preview","props","_textInput$current","color","text","onChangeText","previewInputStyle","onFocus","accessibilityLabels","testID","textInput","hex","textColor","fontScale","getFontScale","value","isTransparent","style","styles","preview","backgroundColor","children","center","onPress","current","focus","activeOpacity","accessible","inputContainer","text60","white","isIOS","transform","scaleX","isRTL","recorderTag","ref","maxLength","numberOfLines","input","width","length","undefined","isAndroid","padding","selectionColor","underlineColorAndroid","autoCorrect","autoComplete","autoCapitalize","returnKeyType","enablesReturnKeyAutomatically","accessibilityLabel","underline","create","header","height","borderTopLeftRadius","borderTopRightRadius","$backgroundDefault","alignItems","justifyContent","flexDirection","marginBottom","_objectSpread","letterSpacing","marginRight"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/colorPicker/ColorPickerPreview.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { StyleSheet, TextInput, PixelRatio, I18nManager } from 'react-native';\nimport { Colors, Typography } from \"../../style\";\nimport { BORDER_RADIUS, getHexString, getTextColor } from \"./ColorPickerPresenter\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport { Constants } from \"../../commons/new\";\nconst Preview = props => {\n  const {\n    color,\n    text,\n    onChangeText,\n    previewInputStyle,\n    onFocus,\n    accessibilityLabels,\n    testID\n  } = props;\n  const textInput = useRef(null);\n  const hex = getHexString(color);\n  const textColor = getTextColor(hex);\n  const fontScale = PixelRatio.getFontScale();\n  const value = Colors.isTransparent(text) ? '000000' : text;\n  return <View style={[styles.preview, {\n    backgroundColor: hex\n  }]}>\n      <TouchableOpacity center onPress={textInput.current?.focus} activeOpacity={1} accessible={false}>\n        <View style={styles.inputContainer}>\n          <Text text60 white marginL-13 marginR-5={Constants.isIOS} style={{\n          color: textColor,\n          transform: [{\n            scaleX: I18nManager.isRTL ? -1 : 1\n          }]\n        }} accessible={false} recorderTag={'unmask'}>\n            #\n          </Text>\n          <TextInput ref={textInput} value={value} maxLength={6} numberOfLines={1} onChangeText={onChangeText} style={[styles.input, {\n          color: textColor,\n          width: value ? (value.length + 1) * 16.5 * fontScale : undefined\n        }, Constants.isAndroid && {\n          padding: 0\n        }, previewInputStyle]} selectionColor={textColor} underlineColorAndroid=\"transparent\" autoCorrect={false} autoComplete={'off'} autoCapitalize={'characters'}\n        // keyboardType={'numbers-and-punctuation'} // doesn't work with `autoCapitalize`\n        returnKeyType={'done'} enablesReturnKeyAutomatically onFocus={onFocus} accessibilityLabel={accessibilityLabels?.input} testID={`${testID}.dialog.textInput`} />\n        </View>\n        <View style={[{\n        backgroundColor: textColor\n      }, styles.underline]} />\n      </TouchableOpacity>\n    </View>;\n};\nexport default Preview;\nconst styles = StyleSheet.create({\n  header: {\n    height: 56,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS,\n    backgroundColor: Colors.$backgroundDefault\n  },\n  preview: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    marginBottom: Constants.isAndroid ? 5 : 8,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  input: {\n    ...Typography.text60,\n    letterSpacing: 3,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  underline: {\n    height: 1.5,\n    width: Constants.isAndroid ? 119 : 134,\n    marginRight: Constants.isAndroid ? 13 : 8\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}