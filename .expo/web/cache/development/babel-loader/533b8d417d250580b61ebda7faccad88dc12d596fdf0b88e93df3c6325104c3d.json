{"ast":null,"code":"import React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport Dash from \"../dash\";\nimport { LineTypes } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LINE_WIDTH = 2;\nvar ENTRY_POINT_HEIGHT = 2;\nvar Line = React.memo(function (props) {\n  var type = props.type,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'transparent' : _props$color,\n    entry = props.entry,\n    top = props.top,\n    style = props.style,\n    _props$width = props.width,\n    width = _props$width === void 0 ? LINE_WIDTH : _props$width;\n  var solidLineStyle = useMemo(function () {\n    return [style, styles.line, {\n      width: width,\n      backgroundColor: color\n    }];\n  }, [color, style, width]);\n  var dashedLineStyle = useMemo(function () {\n    return [style, styles.line];\n  }, [style]);\n  var renderStartPoint = function renderStartPoint() {\n    if (entry) {\n      return _jsx(View, {\n        style: [styles.entryPoint, {\n          backgroundColor: color\n        }]\n      });\n    }\n  };\n  var renderLine = function renderLine() {\n    if (type === LineTypes.DASHED) {\n      return _jsx(Dash, {\n        vertical: true,\n        color: color,\n        containerStyle: dashedLineStyle\n      });\n    }\n    return _jsx(View, {\n      style: solidLineStyle\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [top && renderStartPoint(), renderLine(), !top && renderStartPoint()]\n  });\n});\nexport default Line;\nvar styles = StyleSheet.create({\n  entryPoint: {\n    width: 12,\n    height: ENTRY_POINT_HEIGHT\n  },\n  line: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["React","useMemo","StyleSheet","View","Dash","LineTypes","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LINE_WIDTH","ENTRY_POINT_HEIGHT","Line","memo","props","type","_props$color","color","entry","top","style","_props$width","width","solidLineStyle","styles","line","backgroundColor","dashedLineStyle","renderStartPoint","entryPoint","renderLine","DASHED","vertical","containerStyle","children","create","height","overflow"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/timeline/Line.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport Dash from \"../dash\";\nimport { LineTypes } from \"./types\";\nconst LINE_WIDTH = 2;\nconst ENTRY_POINT_HEIGHT = 2;\nconst Line = React.memo(props => {\n  const {\n    type,\n    color = 'transparent',\n    entry,\n    top,\n    style,\n    width = LINE_WIDTH\n  } = props;\n  const solidLineStyle = useMemo(() => {\n    return [style, styles.line, {\n      width,\n      backgroundColor: color\n    }];\n  }, [color, style, width]);\n  const dashedLineStyle = useMemo(() => {\n    return [style, styles.line];\n  }, [style]);\n  const renderStartPoint = () => {\n    if (entry) {\n      return <View style={[styles.entryPoint, {\n        backgroundColor: color\n      }]} />;\n    }\n  };\n  const renderLine = () => {\n    if (type === LineTypes.DASHED) {\n      return <Dash vertical color={color} containerStyle={dashedLineStyle} />;\n    }\n    return <View style={solidLineStyle} />;\n  };\n  return <>\n      {top && renderStartPoint()}\n      {renderLine()}\n      {!top && renderStartPoint()}\n    </>;\n});\nexport default Line;\nconst styles = StyleSheet.create({\n  entryPoint: {\n    width: 12,\n    height: ENTRY_POINT_HEIGHT\n  },\n  line: {\n    overflow: 'hidden'\n  }\n});"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAEvC,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,SAASC,SAAS;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpC,IAAMC,UAAU,GAAG,CAAC;AACpB,IAAMC,kBAAkB,GAAG,CAAC;AAC5B,IAAMC,IAAI,GAAGd,KAAK,CAACe,IAAI,CAAC,UAAAC,KAAK,EAAI;EAC/B,IACEC,IAAI,GAMFD,KAAK,CANPC,IAAI;IAAAC,YAAA,GAMFF,KAAK,CALPG,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,aAAa,GAAAA,YAAA;IACrBE,KAAK,GAIHJ,KAAK,CAJPI,KAAK;IACLC,GAAG,GAGDL,KAAK,CAHPK,GAAG;IACHC,KAAK,GAEHN,KAAK,CAFPM,KAAK;IAAAC,YAAA,GAEHP,KAAK,CADPQ,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAGX,UAAU,GAAAW,YAAA;EAEpB,IAAME,cAAc,GAAGxB,OAAO,CAAC,YAAM;IACnC,OAAO,CAACqB,KAAK,EAAEI,MAAM,CAACC,IAAI,EAAE;MAC1BH,KAAK,EAALA,KAAK;MACLI,eAAe,EAAET;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,KAAK,EAAEG,KAAK,EAAEE,KAAK,CAAC,CAAC;EACzB,IAAMK,eAAe,GAAG5B,OAAO,CAAC,YAAM;IACpC,OAAO,CAACqB,KAAK,EAAEI,MAAM,CAACC,IAAI,CAAC;EAC7B,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EACX,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAIV,KAAK,EAAE;MACT,OAAOb,IAAA,CAACJ,IAAI;QAACmB,KAAK,EAAE,CAACI,MAAM,CAACK,UAAU,EAAE;UACtCH,eAAe,EAAET;QACnB,CAAC;MAAE,CAAE,CAAC;IACR;EACF,CAAC;EACD,IAAMa,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB,IAAIf,IAAI,KAAKZ,SAAS,CAAC4B,MAAM,EAAE;MAC7B,OAAO1B,IAAA,CAACH,IAAI;QAAC8B,QAAQ;QAACf,KAAK,EAAEA,KAAM;QAACgB,cAAc,EAAEN;MAAgB,CAAE,CAAC;IACzE;IACA,OAAOtB,IAAA,CAACJ,IAAI;MAACmB,KAAK,EAAEG;IAAe,CAAE,CAAC;EACxC,CAAC;EACD,OAAOd,KAAA,CAAAF,SAAA;IAAA2B,QAAA,GACFf,GAAG,IAAIS,gBAAgB,CAAC,CAAC,EACzBE,UAAU,CAAC,CAAC,EACZ,CAACX,GAAG,IAAIS,gBAAgB,CAAC,CAAC;EAAA,CAC3B,CAAC;AACP,CAAC,CAAC;AACF,eAAehB,IAAI;AACnB,IAAMY,MAAM,GAAGxB,UAAU,CAACmC,MAAM,CAAC;EAC/BN,UAAU,EAAE;IACVP,KAAK,EAAE,EAAE;IACTc,MAAM,EAAEzB;EACV,CAAC;EACDc,IAAI,EAAE;IACJY,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}