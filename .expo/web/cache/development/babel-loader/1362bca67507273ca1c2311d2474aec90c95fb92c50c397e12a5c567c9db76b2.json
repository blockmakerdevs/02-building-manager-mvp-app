{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSharedValue, useAnimatedStyle, withTiming, withRepeat, Easing } from 'react-native-reanimated';\nimport View from \"../view\";\nimport Text from \"../text\";\nimport { MarqueeDirections, MarqueeProps } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DEFAULT_DURATION = 3000;\nvar DEFAULT_DURATION_PER_WORD = 250;\nfunction Marquee(props) {\n  var label = props.label,\n    labelStyle = props.labelStyle,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? MarqueeDirections.LEFT : _props$direction,\n    duration = props.duration,\n    _props$numberOfReps = props.numberOfReps,\n    numberOfReps = _props$numberOfReps === void 0 ? -1 : _props$numberOfReps,\n    containerStyle = props.containerStyle;\n  var calcDuration = function calcDuration() {\n    var numOfWords = label.split(' ').length;\n    return DEFAULT_DURATION + DEFAULT_DURATION_PER_WORD * numOfWords;\n  };\n  var isHorizontal = direction === MarqueeDirections.LEFT || direction === MarqueeDirections.RIGHT;\n  var fixedDuration = duration || (isHorizontal ? calcDuration() : DEFAULT_DURATION);\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    viewLayout = _useState2[0],\n    setViewLayout = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textLayout = _useState4[0],\n    setTextLayout = _useState4[1];\n  var offset = useSharedValue(undefined);\n  var initialOffset = 0;\n  var axisX = false;\n  var axisY = false;\n  if (isHorizontal) {\n    axisX = true;\n  } else {\n    axisY = true;\n  }\n  var onLayoutView = useCallback(function (event) {\n    setViewLayout(event.nativeEvent.layout);\n  }, []);\n  var onLayoutText = useCallback(function (event) {\n    setTextLayout(event.nativeEvent.layout);\n  }, []);\n  var startAnimation = function startAnimation(fromValue, toValue, backToValue) {\n    initialOffset = fromValue;\n    offset.value = initialOffset;\n    offset.value = withRepeat(withTiming(toValue, {\n      duration: fixedDuration,\n      easing: Easing.linear\n    }), numberOfReps, false, function (finished) {\n      if (finished) {\n        offset.value = initialOffset;\n        offset.value = withTiming(backToValue, {\n          duration: fixedDuration,\n          easing: Easing.linear\n        });\n      }\n    });\n  };\n  useEffect(function () {\n    if (viewLayout && textLayout) {\n      switch (direction) {\n        case MarqueeDirections.RIGHT:\n          startAnimation(-textLayout.width, viewLayout.width, 0);\n          break;\n        case MarqueeDirections.LEFT:\n          startAnimation(viewLayout == null ? void 0 : viewLayout.width, -textLayout.width, viewLayout.width - textLayout.width);\n          break;\n        case MarqueeDirections.UP:\n          startAnimation(viewLayout.height, -textLayout.height, viewLayout.height - textLayout.height);\n          break;\n        case MarqueeDirections.DOWN:\n          startAnimation(-textLayout.height, viewLayout.height, 0);\n          break;\n      }\n    }\n  }, [viewLayout, textLayout]);\n  var translateStyle = useAnimatedStyle(function () {\n    if (offset.value) {\n      return {\n        transform: [{\n          translateX: axisX ? offset.value : 0\n        }, {\n          translateY: axisY ? offset.value : 0\n        }],\n        position: 'absolute',\n        width: !isHorizontal || textLayout != null && textLayout.width ? textLayout == null ? void 0 : textLayout.width : '400%'\n      };\n    }\n    return {\n      position: 'absolute',\n      width: !isHorizontal || textLayout != null && textLayout.width ? textLayout == null ? void 0 : textLayout.width : '400%'\n    };\n  });\n  return _jsxs(View, {\n    style: [styles.container, containerStyle],\n    onLayout: onLayoutView,\n    children: [_jsx(View, {\n      reanimated: true,\n      style: [translateStyle],\n      children: _jsx(Text, {\n        style: [styles.text, labelStyle],\n        onLayout: onLayoutText,\n        children: label\n      })\n    }), _jsx(Text, {\n      style: [styles.text, labelStyle, styles.hiddenText],\n      numberOfLines: 1,\n      children: label\n    })]\n  });\n}\nexport { MarqueeProps, MarqueeDirections };\nexport default Marquee;\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  text: {\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    color: 'transparent'\n  }\n});","map":{"version":3,"names":["React","useCallback","useEffect","useState","StyleSheet","useSharedValue","useAnimatedStyle","withTiming","withRepeat","Easing","View","Text","MarqueeDirections","MarqueeProps","jsx","_jsx","jsxs","_jsxs","DEFAULT_DURATION","DEFAULT_DURATION_PER_WORD","Marquee","props","label","labelStyle","_props$direction","direction","LEFT","duration","_props$numberOfReps","numberOfReps","containerStyle","calcDuration","numOfWords","split","length","isHorizontal","RIGHT","fixedDuration","_useState","undefined","_useState2","_slicedToArray","viewLayout","setViewLayout","_useState3","_useState4","textLayout","setTextLayout","offset","initialOffset","axisX","axisY","onLayoutView","event","nativeEvent","layout","onLayoutText","startAnimation","fromValue","toValue","backToValue","value","easing","linear","finished","width","UP","height","DOWN","translateStyle","transform","translateX","translateY","position","style","styles","container","onLayout","children","reanimated","text","hiddenText","numberOfLines","create","overflow","alignSelf","color"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/marquee/index.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useSharedValue, useAnimatedStyle, withTiming, withRepeat, Easing } from 'react-native-reanimated';\nimport View from \"../view\";\nimport Text from \"../text\";\nimport { MarqueeDirections, MarqueeProps } from \"./types\";\nconst DEFAULT_DURATION = 3000;\nconst DEFAULT_DURATION_PER_WORD = 250;\nfunction Marquee(props) {\n  const {\n    label,\n    labelStyle,\n    direction = MarqueeDirections.LEFT,\n    duration,\n    numberOfReps = -1,\n    containerStyle\n  } = props;\n  const calcDuration = () => {\n    const numOfWords = label.split(' ').length;\n    return DEFAULT_DURATION + DEFAULT_DURATION_PER_WORD * numOfWords;\n  };\n  const isHorizontal = direction === MarqueeDirections.LEFT || direction === MarqueeDirections.RIGHT;\n  const fixedDuration = duration || (isHorizontal ? calcDuration() : DEFAULT_DURATION);\n  const [viewLayout, setViewLayout] = useState(undefined);\n  const [textLayout, setTextLayout] = useState(undefined);\n  const offset = useSharedValue(undefined);\n  let initialOffset = 0;\n  let axisX = false;\n  let axisY = false;\n  if (isHorizontal) {\n    axisX = true;\n  } else {\n    axisY = true;\n  }\n  const onLayoutView = useCallback(event => {\n    setViewLayout(event.nativeEvent.layout);\n  }, []);\n  const onLayoutText = useCallback(event => {\n    setTextLayout(event.nativeEvent.layout);\n  }, []);\n  const startAnimation = (fromValue, toValue, backToValue) => {\n    initialOffset = fromValue;\n    offset.value = initialOffset;\n    offset.value = withRepeat(withTiming(toValue, {\n      duration: fixedDuration,\n      easing: Easing.linear\n    }), numberOfReps, false, finished => {\n      if (finished) {\n        offset.value = initialOffset;\n        offset.value = withTiming(backToValue, {\n          duration: fixedDuration,\n          easing: Easing.linear\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (viewLayout && textLayout) {\n      switch (direction) {\n        case MarqueeDirections.RIGHT:\n          startAnimation(-textLayout.width, viewLayout.width, 0);\n          break;\n        case MarqueeDirections.LEFT:\n          startAnimation(viewLayout?.width, -textLayout.width, viewLayout.width - textLayout.width);\n          break;\n        case MarqueeDirections.UP:\n          startAnimation(viewLayout.height, -textLayout.height, viewLayout.height - textLayout.height);\n          break;\n        case MarqueeDirections.DOWN:\n          startAnimation(-textLayout.height, viewLayout.height, 0);\n          break;\n      }\n    }\n  }, [viewLayout, textLayout]);\n\n  // @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881)\n  const translateStyle = useAnimatedStyle(() => {\n    if (offset.value) {\n      return {\n        transform: [{\n          translateX: axisX ? offset.value : 0\n        }, {\n          translateY: axisY ? offset.value : 0\n        }],\n        position: 'absolute',\n        width: !isHorizontal || textLayout?.width ? textLayout?.width : '400%'\n      };\n    }\n    return {\n      position: 'absolute',\n      width: !isHorizontal || textLayout?.width ? textLayout?.width : '400%'\n    };\n  });\n  return <View style={[styles.container, containerStyle]} onLayout={onLayoutView}>\n      {/* @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881) */}\n      <View reanimated style={[translateStyle]}>\n        <Text style={[styles.text, labelStyle]} onLayout={onLayoutText}>\n          {label}\n        </Text>\n      </View>\n      <Text style={[styles.text, labelStyle, styles.hiddenText]} numberOfLines={1}>\n        {label}\n      </Text>\n    </View>;\n}\nexport { MarqueeProps, MarqueeDirections };\nexport default Marquee;\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  text: {\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    color: 'transparent'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}