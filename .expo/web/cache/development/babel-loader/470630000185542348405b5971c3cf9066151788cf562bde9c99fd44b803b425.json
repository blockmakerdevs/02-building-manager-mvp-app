{"ast":null,"code":"import _isUndefined from \"lodash/isUndefined\";\nimport React, { useEffect, useRef, useCallback, useContext } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport PanningContext from \"../panningViews/panningContext\";\nimport PanningProvider from \"../panningViews/panningProvider\";\nimport PanResponderView from \"../panningViews/panResponderView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MAXIMUM_DRAGS_AFTER_SWIPE = 2;\nvar DEFAULT_DIRECTION = PanningProvider.Directions.DOWN;\nvar DialogDismissibleView = function DialogDismissibleView(props) {\n  var _props$direction = props.direction,\n    direction = _props$direction === void 0 ? DEFAULT_DIRECTION : _props$direction,\n    propsVisible = props.visible,\n    containerStyle = props.containerStyle,\n    style = props.style,\n    children = props.children,\n    onDismiss = props.onDismiss;\n  var _useContext = useContext(PanningContext),\n    isPanning = _useContext.isPanning,\n    dragDeltas = _useContext.dragDeltas,\n    swipeDirections = _useContext.swipeDirections;\n  var width = useRef(Constants.screenWidth);\n  var height = useRef(Constants.screenHeight);\n  var TOP_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().top : Constants.isIOS ? 20 : 0);\n  var BOTTOM_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().bottom : Constants.isIOS ? 20 : 0);\n  var thresholdX = useRef(0);\n  var thresholdY = useRef(0);\n  var dragsCounter = useRef(0);\n  var containerRef = useRef();\n  var animatedValue = useRef(new Animated.Value(0));\n  var mutableSwipeDirections = useRef({});\n  var prevDragDeltas = useRef();\n  var prevSwipeDirections = useRef();\n  var visible = useRef(Boolean(propsVisible));\n  var getHiddenLocation = useCallback(function (left, top) {\n    var result = {\n      left: 0,\n      top: 0\n    };\n    switch (direction) {\n      case PanningProvider.Directions.LEFT:\n        result.left = -left - width.current;\n        break;\n      case PanningProvider.Directions.RIGHT:\n        result.left = Constants.screenWidth - left;\n        break;\n      case PanningProvider.Directions.UP:\n        result.top = -top - height.current - TOP_INSET.current;\n        break;\n      case PanningProvider.Directions.DOWN:\n      default:\n        result.top = Constants.screenHeight - top + BOTTOM_INSET.current;\n        break;\n    }\n    return result;\n  }, [direction]);\n  var hiddenLocation = useRef(getHiddenLocation(0, 0));\n  var animateTo = useCallback(function (toValue, animationEndCallback) {\n    Animated.timing(animatedValue.current, {\n      toValue: toValue,\n      duration: 300,\n      easing: Easing.bezier(0.2, 0, 0.35, 1),\n      useNativeDriver: true\n    }).start(animationEndCallback);\n  }, []);\n  var isSwiping = useCallback(function () {\n    return !_isUndefined(mutableSwipeDirections.current.x) || !_isUndefined(mutableSwipeDirections.current.y);\n  }, []);\n  var resetSwipe = useCallback(function () {\n    dragsCounter.current = 0;\n    mutableSwipeDirections.current = {};\n  }, []);\n  var onDrag = useCallback(function () {\n    if (isSwiping()) {\n      if (dragsCounter.current < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        dragsCounter.current += 1;\n      } else {\n        resetSwipe();\n      }\n    }\n  }, [isSwiping, resetSwipe]);\n  var hide = useCallback(function () {\n    animateTo(0, function () {\n      visible.current = false;\n      onDismiss == null ? void 0 : onDismiss();\n    });\n  }, [animateTo, onDismiss]);\n  useEffect(function () {\n    var _prevDragDeltas$curre, _prevDragDeltas$curre2;\n    if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== ((_prevDragDeltas$curre = prevDragDeltas.current) == null ? void 0 : _prevDragDeltas$curre.x) || dragDeltas.y !== ((_prevDragDeltas$curre2 = prevDragDeltas.current) == null ? void 0 : _prevDragDeltas$curre2.y))) {\n      onDrag();\n      prevDragDeltas.current = dragDeltas;\n    }\n  }, [isPanning, dragDeltas, onDrag, hide]);\n  useEffect(function () {\n    var _prevSwipeDirections$, _prevSwipeDirections$2;\n    if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== ((_prevSwipeDirections$ = prevSwipeDirections.current) == null ? void 0 : _prevSwipeDirections$.x) || swipeDirections.y !== ((_prevSwipeDirections$2 = prevSwipeDirections.current) == null ? void 0 : _prevSwipeDirections$2.y))) {\n      mutableSwipeDirections.current = swipeDirections;\n    }\n  }, [isPanning, swipeDirections, hide]);\n  useEffect(function () {\n    if (visible.current && !propsVisible) {\n      hide();\n    }\n  }, [propsVisible, hide]);\n  var onLayout = useCallback(function (event) {\n    var layout = event.nativeEvent.layout;\n    width.current = layout.width;\n    height.current = layout.height;\n    thresholdX.current = width.current / 2;\n    thresholdY.current = height.current / 2;\n    if (containerRef.current) {\n      containerRef.current.measureInWindow(function (x, y) {\n        hiddenLocation.current = getHiddenLocation(x, y);\n        animateTo(1);\n      });\n    }\n  }, [getHiddenLocation, animateTo]);\n  var getAnimationStyle = useCallback(function () {\n    return {\n      transform: [{\n        translateX: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.left, 0]\n        })\n      }, {\n        translateY: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.top, 0]\n        })\n      }]\n    };\n  }, []);\n  var resetToShown = useCallback(function (left, top, direction) {\n    var toValue = [PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT].includes(direction) ? 1 + left / hiddenLocation.current.left : 1 + top / hiddenLocation.current.top;\n    animateTo(toValue);\n  }, [animateTo]);\n  var onPanLocationChanged = useCallback(function (_ref) {\n    var _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top;\n    var endValue = {\n      x: Math.round(left),\n      y: Math.round(top)\n    };\n    if (isSwiping()) {\n      hide();\n    } else {\n      resetSwipe();\n      if (direction === PanningProvider.Directions.LEFT && endValue.x <= -thresholdX.current || direction === PanningProvider.Directions.RIGHT && endValue.x >= thresholdX.current || direction === PanningProvider.Directions.UP && endValue.y <= -thresholdY.current || direction === PanningProvider.Directions.DOWN && endValue.y >= thresholdY.current) {\n        hide();\n      } else {\n        resetToShown(left, top, direction);\n      }\n    }\n  }, [isSwiping, hide, resetSwipe, direction, resetToShown]);\n  return _jsx(View, {\n    ref: containerRef,\n    style: containerStyle,\n    onLayout: onLayout,\n    children: _jsx(PanResponderView, {\n      style: [style, getAnimationStyle(), !visible.current && styles.hidden],\n      isAnimated: true,\n      onPanLocationChanged: onPanLocationChanged,\n      children: children\n    })\n  });\n};\nDialogDismissibleView.displayName = 'IGNORE';\nDialogDismissibleView.defaultProps = {\n  direction: DEFAULT_DIRECTION,\n  onDismiss: function onDismiss() {}\n};\nexport default DialogDismissibleView;\nvar styles = StyleSheet.create({\n  hidden: {\n    opacity: 0\n  }\n});","map":{"version":3,"names":["_isUndefined","React","useEffect","useRef","useCallback","useContext","Animated","Easing","StyleSheet","Constants","View","PanningContext","PanningProvider","PanResponderView","jsx","_jsx","MAXIMUM_DRAGS_AFTER_SWIPE","DEFAULT_DIRECTION","Directions","DOWN","DialogDismissibleView","props","_props$direction","direction","propsVisible","visible","containerStyle","style","children","onDismiss","_useContext","isPanning","dragDeltas","swipeDirections","width","screenWidth","height","screenHeight","TOP_INSET","isIphoneX","getSafeAreaInsets","top","isIOS","BOTTOM_INSET","bottom","thresholdX","thresholdY","dragsCounter","containerRef","animatedValue","Value","mutableSwipeDirections","prevDragDeltas","prevSwipeDirections","Boolean","getHiddenLocation","left","result","LEFT","current","RIGHT","UP","hiddenLocation","animateTo","toValue","animationEndCallback","timing","duration","easing","bezier","useNativeDriver","start","isSwiping","x","y","resetSwipe","onDrag","hide","_prevDragDeltas$curre","_prevDragDeltas$curre2","_prevSwipeDirections$","_prevSwipeDirections$2","onLayout","event","layout","nativeEvent","measureInWindow","getAnimationStyle","transform","translateX","interpolate","inputRange","outputRange","translateY","resetToShown","includes","onPanLocationChanged","_ref","_ref$left","_ref$top","endValue","Math","round","ref","styles","hidden","isAnimated","displayName","defaultProps","create","opacity"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/dialog/DialogDismissibleView.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport React, { useEffect, useRef, useCallback, useContext } from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport PanningContext from \"../panningViews/panningContext\";\nimport PanningProvider from \"../panningViews/panningProvider\";\nimport PanResponderView from \"../panningViews/panResponderView\";\nconst MAXIMUM_DRAGS_AFTER_SWIPE = 2;\n\n// TODO: move this to panningContext\n\nconst DEFAULT_DIRECTION = PanningProvider.Directions.DOWN;\nconst DialogDismissibleView = props => {\n  const {\n    direction = DEFAULT_DIRECTION,\n    visible: propsVisible,\n    containerStyle,\n    style,\n    children,\n    onDismiss\n  } = props;\n  // @ts-expect-error\n  const {\n    isPanning,\n    dragDeltas,\n    swipeDirections\n  } = useContext(PanningContext);\n  const width = useRef(Constants.screenWidth);\n  const height = useRef(Constants.screenHeight);\n  const TOP_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().top : Constants.isIOS ? 20 : 0);\n  const BOTTOM_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().bottom : Constants.isIOS ? 20 : 0);\n  const thresholdX = useRef(0);\n  const thresholdY = useRef(0);\n  const dragsCounter = useRef(0);\n  const containerRef = useRef();\n  const animatedValue = useRef(new Animated.Value(0));\n  const mutableSwipeDirections = useRef({});\n  const prevDragDeltas = useRef();\n  const prevSwipeDirections = useRef();\n  const visible = useRef(Boolean(propsVisible));\n  const getHiddenLocation = useCallback((left, top) => {\n    const result = {\n      left: 0,\n      top: 0\n    };\n    switch (direction) {\n      case PanningProvider.Directions.LEFT:\n        result.left = -left - width.current;\n        break;\n      case PanningProvider.Directions.RIGHT:\n        result.left = Constants.screenWidth - left;\n        break;\n      case PanningProvider.Directions.UP:\n        result.top = -top - height.current - TOP_INSET.current;\n        break;\n      case PanningProvider.Directions.DOWN:\n      default:\n        result.top = Constants.screenHeight - top + BOTTOM_INSET.current;\n        break;\n    }\n    return result;\n  }, [direction]);\n  const hiddenLocation = useRef(getHiddenLocation(0, 0));\n  const animateTo = useCallback((toValue, animationEndCallback) => {\n    Animated.timing(animatedValue.current, {\n      toValue,\n      duration: 300,\n      easing: Easing.bezier(0.2, 0, 0.35, 1),\n      useNativeDriver: true\n    }).start(animationEndCallback);\n  }, []);\n  const isSwiping = useCallback(() => {\n    return !_isUndefined(mutableSwipeDirections.current.x) || !_isUndefined(mutableSwipeDirections.current.y);\n  }, []);\n  const resetSwipe = useCallback(() => {\n    dragsCounter.current = 0;\n    mutableSwipeDirections.current = {};\n  }, []);\n  const onDrag = useCallback(() => {\n    if (isSwiping()) {\n      if (dragsCounter.current < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        dragsCounter.current += 1;\n      } else {\n        resetSwipe();\n      }\n    }\n  }, [isSwiping, resetSwipe]);\n  const hide = useCallback(() => {\n    // TODO: test we're not animating?\n    animateTo(0, () => {\n      visible.current = false;\n      onDismiss?.();\n    });\n  }, [animateTo, onDismiss]);\n  useEffect(() => {\n    if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.current?.x || dragDeltas.y !== prevDragDeltas.current?.y)) {\n      onDrag();\n      prevDragDeltas.current = dragDeltas;\n    }\n  }, [isPanning, dragDeltas, onDrag, hide]);\n  useEffect(() => {\n    if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.current?.x || swipeDirections.y !== prevSwipeDirections.current?.y)) {\n      mutableSwipeDirections.current = swipeDirections;\n    }\n  }, [isPanning, swipeDirections, hide]);\n  useEffect(() => {\n    if (visible.current && !propsVisible) {\n      hide();\n    }\n  }, [propsVisible, hide]);\n  const onLayout = useCallback(event => {\n    // DO NOT move the width\\height into the measureInWindow - it causes errors with orientation change\n    const layout = event.nativeEvent.layout;\n    width.current = layout.width;\n    height.current = layout.height;\n    thresholdX.current = width.current / 2;\n    thresholdY.current = height.current / 2;\n    if (containerRef.current) {\n      // @ts-ignore TODO: can we fix this on ViewProps \\ View?\n      containerRef.current.measureInWindow((x, y) => {\n        hiddenLocation.current = getHiddenLocation(x, y);\n        animateTo(1);\n      });\n    }\n  }, [getHiddenLocation, animateTo]);\n  const getAnimationStyle = useCallback(() => {\n    return {\n      transform: [{\n        translateX: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.left, 0]\n        })\n      }, {\n        translateY: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.top, 0]\n        })\n      }]\n    };\n  }, []);\n  const resetToShown = useCallback((left, top, direction) => {\n    const toValue =\n    //@ts-expect-error\n    [PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT].includes(direction) ? 1 + left / hiddenLocation.current.left : 1 + top / hiddenLocation.current.top;\n    animateTo(toValue);\n  }, [animateTo]);\n  const onPanLocationChanged = useCallback(({\n    left = 0,\n    top = 0\n  }) => {\n    const endValue = {\n      x: Math.round(left),\n      y: Math.round(top)\n    };\n    if (isSwiping()) {\n      hide();\n    } else {\n      resetSwipe();\n      if (direction === PanningProvider.Directions.LEFT && endValue.x <= -thresholdX.current || direction === PanningProvider.Directions.RIGHT && endValue.x >= thresholdX.current || direction === PanningProvider.Directions.UP && endValue.y <= -thresholdY.current || direction === PanningProvider.Directions.DOWN && endValue.y >= thresholdY.current) {\n        hide();\n      } else {\n        resetToShown(left, top, direction);\n      }\n    }\n  }, [isSwiping, hide, resetSwipe, direction, resetToShown]);\n  return (\n    // @ts-ignore\n    <View ref={containerRef} style={containerStyle} onLayout={onLayout}>\n      <PanResponderView\n      // !visible.current && styles.hidden is done to fix a bug is iOS\n      style={[style, getAnimationStyle(), !visible.current && styles.hidden]} isAnimated onPanLocationChanged={onPanLocationChanged}>\n        {children}\n      </PanResponderView>\n    </View>\n  );\n};\nDialogDismissibleView.displayName = 'IGNORE';\nDialogDismissibleView.defaultProps = {\n  direction: DEFAULT_DIRECTION,\n  onDismiss: () => {}\n};\nexport default DialogDismissibleView;\nconst styles = StyleSheet.create({\n  hidden: {\n    opacity: 0\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}