{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useCallback, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport ColorPalette from \"../colorPalette\";\nimport { SWATCH_MARGIN, SWATCH_SIZE } from \"../colorSwatch\";\nimport ColorPickerDialog from \"./ColorPickerDialog\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ACCESSIBILITY_LABELS = {\n  addButton: 'add custom color using hex code',\n  dismissButton: 'dismiss',\n  doneButton: 'done',\n  input: 'custom hex color code'\n};\nvar ColorPicker = function ColorPicker(props) {\n  var _props$accessibilityL = props.accessibilityLabels,\n    accessibilityLabels = _props$accessibilityL === void 0 ? ACCESSIBILITY_LABELS : _props$accessibilityL,\n    _props$backgroundColo = props.backgroundColor,\n    backgroundColor = _props$backgroundColo === void 0 ? Colors.$backgroundDefault : _props$backgroundColo,\n    initialColor = props.initialColor,\n    colors = props.colors,\n    value = props.value,\n    testID = props.testID,\n    onValueChange = props.onValueChange,\n    animatedIndex = props.animatedIndex;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var showDialog = useCallback(function () {\n    return setShow(true);\n  }, []);\n  var hideDialog = useCallback(function () {\n    return setShow(false);\n  }, []);\n  return _jsxs(View, {\n    row: true,\n    testID: testID,\n    style: {\n      backgroundColor: backgroundColor\n    },\n    children: [_jsx(ColorPalette, {\n      value: value,\n      colors: colors,\n      style: styles.palette,\n      usePagination: false,\n      animatedIndex: animatedIndex != null ? animatedIndex : colors.length - 1,\n      onValueChange: onValueChange,\n      testID: `${testID}-palette`,\n      backgroundColor: backgroundColor\n    }), _jsx(View, {\n      style: [styles.buttonContainer, {\n        backgroundColor: backgroundColor\n      }],\n      children: _jsx(Button, {\n        color: Colors.$textDefault,\n        outlineColor: Colors.$textDefault,\n        style: styles.button,\n        round: true,\n        outline: true,\n        iconSource: Assets.icons.plusSmall,\n        onPress: showDialog,\n        testID: `${testID}-button`,\n        accessibilityLabel: accessibilityLabels == null ? void 0 : accessibilityLabels.addButton\n      })\n    }), _createElement(ColorPickerDialog, _objectSpread(_objectSpread({}, props), {}, {\n      key: initialColor,\n      visible: show,\n      onDismiss: hideDialog,\n      accessibilityLabels: {\n        dismissButton: accessibilityLabels == null ? void 0 : accessibilityLabels.dismissButton,\n        doneButton: accessibilityLabels == null ? void 0 : accessibilityLabels.doneButton,\n        input: accessibilityLabels == null ? void 0 : accessibilityLabels.input\n      },\n      migrate: true\n    }))]\n  });\n};\nColorPicker.displayName = 'ColorPicker';\nexport default asBaseComponent(ColorPicker);\nvar plusButtonContainerWidth = SWATCH_SIZE + 20 + 12;\nvar plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\nvar styles = StyleSheet.create({\n  palette: {\n    paddingLeft: plusButtonContainerWidth\n  },\n  buttonContainer: {\n    position: 'absolute',\n    left: 0,\n    width: plusButtonContainerWidth,\n    height: plusButtonContainerHeight,\n    marginTop: SWATCH_MARGIN,\n    marginBottom: SWATCH_MARGIN,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    paddingTop: 1\n  },\n  button: {\n    width: SWATCH_SIZE,\n    height: SWATCH_SIZE,\n    marginRight: 12\n  }\n});","map":{"version":3,"names":["React","useCallback","useState","StyleSheet","asBaseComponent","Assets","Colors","View","Button","ColorPalette","SWATCH_MARGIN","SWATCH_SIZE","ColorPickerDialog","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","ACCESSIBILITY_LABELS","addButton","dismissButton","doneButton","input","ColorPicker","props","_props$accessibilityL","accessibilityLabels","_props$backgroundColo","backgroundColor","$backgroundDefault","initialColor","colors","value","testID","onValueChange","animatedIndex","_useState","_useState2","_slicedToArray","show","setShow","showDialog","hideDialog","row","style","children","styles","palette","usePagination","length","buttonContainer","color","$textDefault","outlineColor","button","round","outline","iconSource","icons","plusSmall","onPress","accessibilityLabel","_objectSpread","key","visible","onDismiss","migrate","displayName","plusButtonContainerWidth","plusButtonContainerHeight","create","paddingLeft","position","left","width","height","marginTop","marginBottom","alignItems","justifyContent","paddingTop","marginRight"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/colorPicker/index.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport ColorPalette from \"../colorPalette\";\nimport { SWATCH_MARGIN, SWATCH_SIZE } from \"../colorSwatch\";\nimport ColorPickerDialog from \"./ColorPickerDialog\";\nconst ACCESSIBILITY_LABELS = {\n  addButton: 'add custom color using hex code',\n  dismissButton: 'dismiss',\n  doneButton: 'done',\n  input: 'custom hex color code'\n};\n\n/**\n * @description: A color picker component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n * @notes: This is a screen width component\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPicker/ColorPicker.gif?raw=true\n */\nconst ColorPicker = props => {\n  const {\n    accessibilityLabels = ACCESSIBILITY_LABELS,\n    backgroundColor = Colors.$backgroundDefault,\n    initialColor,\n    colors,\n    value,\n    testID,\n    onValueChange,\n    animatedIndex\n  } = props;\n  const [show, setShow] = useState(false);\n  const showDialog = useCallback(() => setShow(true), []);\n  const hideDialog = useCallback(() => setShow(false), []);\n  return <View row testID={testID} style={{\n    backgroundColor\n  }}>\n      <ColorPalette value={value} colors={colors} style={styles.palette} usePagination={false} animatedIndex={animatedIndex ?? colors.length - 1} onValueChange={onValueChange} testID={`${testID}-palette`} backgroundColor={backgroundColor} />\n      <View style={[styles.buttonContainer, {\n      backgroundColor\n    }]}>\n        <Button color={Colors.$textDefault} outlineColor={Colors.$textDefault} style={styles.button} round outline iconSource={Assets.icons.plusSmall} onPress={showDialog} testID={`${testID}-button`} accessibilityLabel={accessibilityLabels?.addButton} />\n      </View>\n      <ColorPickerDialog {...props} key={initialColor} visible={show} onDismiss={hideDialog} accessibilityLabels={{\n      dismissButton: accessibilityLabels?.dismissButton,\n      doneButton: accessibilityLabels?.doneButton,\n      input: accessibilityLabels?.input\n    }} migrate />\n    </View>;\n};\nColorPicker.displayName = 'ColorPicker';\nexport default asBaseComponent(ColorPicker);\nconst plusButtonContainerWidth = SWATCH_SIZE + 20 + 12;\nconst plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\nconst styles = StyleSheet.create({\n  palette: {\n    paddingLeft: plusButtonContainerWidth\n  },\n  buttonContainer: {\n    position: 'absolute',\n    left: 0,\n    width: plusButtonContainerWidth,\n    height: plusButtonContainerHeight,\n    marginTop: SWATCH_MARGIN,\n    marginBottom: SWATCH_MARGIN,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    paddingTop: 1\n  },\n  button: {\n    width: SWATCH_SIZE,\n    height: SWATCH_SIZE,\n    marginRight: 12\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}