{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport ColorSliderGroup from \"../slider/ColorSliderGroup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Sliders = function Sliders(props) {\n  var keyboardHeight = props.keyboardHeight,\n    color = props.color,\n    migrate = props.migrate,\n    onSliderValueChange = props.onSliderValueChange;\n  var colorValue = color.a === 0 ? Colors.$backgroundInverted : Colors.getHexString(color);\n  return _jsx(ColorSliderGroup, {\n    initialColor: colorValue,\n    containerStyle: [styles.sliderGroup, {\n      height: keyboardHeight\n    }],\n    sliderContainerStyle: styles.slider,\n    showLabels: true,\n    labelsStyle: styles.label,\n    accessible: false,\n    migrate: migrate,\n    onValueChange: onSliderValueChange\n  });\n};\nexport default Sliders;\nvar styles = StyleSheet.create({\n  sliderGroup: {\n    paddingTop: 12,\n    marginHorizontal: 20\n  },\n  slider: {\n    marginBottom: 15,\n    height: 26\n  },\n  label: {\n    marginBottom: 3\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Colors","ColorSliderGroup","jsx","_jsx","Sliders","props","keyboardHeight","color","migrate","onSliderValueChange","colorValue","a","$backgroundInverted","getHexString","initialColor","containerStyle","styles","sliderGroup","height","sliderContainerStyle","slider","showLabels","labelsStyle","label","accessible","onValueChange","create","paddingTop","marginHorizontal","marginBottom"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/colorPicker/ColorPickerDialogSliders.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport ColorSliderGroup from \"../slider/ColorSliderGroup\";\nconst Sliders = props => {\n  const {\n    keyboardHeight,\n    color,\n    migrate,\n    onSliderValueChange\n  } = props;\n  const colorValue = color.a === 0 ? Colors.$backgroundInverted : Colors.getHexString(color);\n  return <ColorSliderGroup initialColor={colorValue} containerStyle={[styles.sliderGroup, {\n    height: keyboardHeight\n  }]} sliderContainerStyle={styles.slider} showLabels labelsStyle={styles.label} accessible={false} migrate={migrate} onValueChange={onSliderValueChange} />;\n};\nexport default Sliders;\nconst styles = StyleSheet.create({\n  sliderGroup: {\n    paddingTop: 12,\n    marginHorizontal: 20\n  },\n  slider: {\n    marginBottom: 15,\n    height: 26\n  },\n  label: {\n    marginBottom: 3\n  }\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE1B,SAASC,MAAM;AACf,OAAOC,gBAAgB;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAC1D,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAGC,KAAK,EAAI;EACvB,IACEC,cAAc,GAIZD,KAAK,CAJPC,cAAc;IACdC,KAAK,GAGHF,KAAK,CAHPE,KAAK;IACLC,OAAO,GAELH,KAAK,CAFPG,OAAO;IACPC,mBAAmB,GACjBJ,KAAK,CADPI,mBAAmB;EAErB,IAAMC,UAAU,GAAGH,KAAK,CAACI,CAAC,KAAK,CAAC,GAAGX,MAAM,CAACY,mBAAmB,GAAGZ,MAAM,CAACa,YAAY,CAACN,KAAK,CAAC;EAC1F,OAAOJ,IAAA,CAACF,gBAAgB;IAACa,YAAY,EAAEJ,UAAW;IAACK,cAAc,EAAE,CAACC,MAAM,CAACC,WAAW,EAAE;MACtFC,MAAM,EAAEZ;IACV,CAAC,CAAE;IAACa,oBAAoB,EAAEH,MAAM,CAACI,MAAO;IAACC,UAAU;IAACC,WAAW,EAAEN,MAAM,CAACO,KAAM;IAACC,UAAU,EAAE,KAAM;IAAChB,OAAO,EAAEA,OAAQ;IAACiB,aAAa,EAAEhB;EAAoB,CAAE,CAAC;AAC5J,CAAC;AACD,eAAeL,OAAO;AACtB,IAAMY,MAAM,GAAGjB,UAAU,CAAC2B,MAAM,CAAC;EAC/BT,WAAW,EAAE;IACXU,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE;EACpB,CAAC;EACDR,MAAM,EAAE;IACNS,YAAY,EAAE,EAAE;IAChBX,MAAM,EAAE;EACV,CAAC;EACDK,KAAK,EAAE;IACLM,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}