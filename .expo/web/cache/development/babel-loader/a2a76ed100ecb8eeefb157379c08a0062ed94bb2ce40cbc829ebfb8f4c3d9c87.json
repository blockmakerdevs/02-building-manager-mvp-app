{"ast":null,"code":"import { useImperativeHandle, useRef } from 'react';\nvar useImperativePickerHandle = function useImperativePickerHandle(ref, expandableRef) {\n  var pickerRef = useRef();\n  useImperativeHandle(ref, function () {\n    var _pickerRef$current;\n    var _ref = (_pickerRef$current = pickerRef.current) != null ? _pickerRef$current : {},\n      isFocused = _ref.isFocused,\n      focus = _ref.focus,\n      blur = _ref.blur,\n      clear = _ref.clear,\n      validate = _ref.validate,\n      isValid = _ref.isValid;\n    var _expandableRef$curren = expandableRef.current,\n      openExpandable = _expandableRef$curren.openExpandable,\n      closeExpandable = _expandableRef$curren.closeExpandable,\n      toggleExpandable = _expandableRef$curren.toggleExpandable;\n    return {\n      isFocused: isFocused,\n      focus: focus,\n      blur: blur,\n      clear: clear,\n      validate: validate,\n      isValid: isValid,\n      openExpandable: openExpandable,\n      closeExpandable: closeExpandable,\n      toggleExpandable: toggleExpandable\n    };\n  });\n  return pickerRef;\n};\nexport default useImperativePickerHandle;","map":{"version":3,"names":["useImperativeHandle","useRef","useImperativePickerHandle","ref","expandableRef","pickerRef","_pickerRef$current","_ref","current","isFocused","focus","blur","clear","validate","isValid","_expandableRef$curren","openExpandable","closeExpandable","toggleExpandable"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/picker/helpers/useImperativePickerHandle.js"],"sourcesContent":["import { useImperativeHandle, useRef } from 'react';\nconst useImperativePickerHandle = (ref, expandableRef) => {\n  const pickerRef = useRef();\n  useImperativeHandle(ref, () => {\n    const {\n      isFocused,\n      focus,\n      blur,\n      clear,\n      validate,\n      isValid\n    } = pickerRef.current ?? {};\n    // @ts-expect-error useRef return type is possible null therefor it throw TS error\n    const {\n      openExpandable,\n      closeExpandable,\n      toggleExpandable\n    } = expandableRef.current;\n    return {\n      isFocused,\n      focus,\n      blur,\n      clear,\n      validate,\n      isValid,\n      openExpandable,\n      closeExpandable,\n      toggleExpandable\n    };\n  });\n  return pickerRef;\n};\nexport default useImperativePickerHandle;"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AACnD,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIC,GAAG,EAAEC,aAAa,EAAK;EACxD,IAAMC,SAAS,GAAGJ,MAAM,CAAC,CAAC;EAC1BD,mBAAmB,CAACG,GAAG,EAAE,YAAM;IAAA,IAAAG,kBAAA;IAC7B,IAAAC,IAAA,IAAAD,kBAAA,GAOID,SAAS,CAACG,OAAO,YAAAF,kBAAA,GAAI,CAAC,CAAC;MANzBG,SAAS,GAAAF,IAAA,CAATE,SAAS;MACTC,KAAK,GAAAH,IAAA,CAALG,KAAK;MACLC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;MACJC,KAAK,GAAAL,IAAA,CAALK,KAAK;MACLC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;MACRC,OAAO,GAAAP,IAAA,CAAPO,OAAO;IAGT,IAAAC,qBAAA,GAIIX,aAAa,CAACI,OAAO;MAHvBQ,cAAc,GAAAD,qBAAA,CAAdC,cAAc;MACdC,eAAe,GAAAF,qBAAA,CAAfE,eAAe;MACfC,gBAAgB,GAAAH,qBAAA,CAAhBG,gBAAgB;IAElB,OAAO;MACLT,SAAS,EAATA,SAAS;MACTC,KAAK,EAALA,KAAK;MACLC,IAAI,EAAJA,IAAI;MACJC,KAAK,EAALA,KAAK;MACLC,QAAQ,EAARA,QAAQ;MACRC,OAAO,EAAPA,OAAO;MACPE,cAAc,EAAdA,cAAc;MACdC,eAAe,EAAfA,eAAe;MACfC,gBAAgB,EAAhBA;IACF,CAAC;EACH,CAAC,CAAC;EACF,OAAOb,SAAS;AAClB,CAAC;AACD,eAAeH,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}