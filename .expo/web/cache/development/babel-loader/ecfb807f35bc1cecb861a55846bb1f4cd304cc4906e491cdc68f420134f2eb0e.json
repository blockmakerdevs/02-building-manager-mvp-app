{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport throttle from 'lodash/throttle';\nimport React, { useContext, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Reanimated, { useAnimatedProps } from 'react-native-reanimated';\nimport { Colors, Typography } from \"../../style\";\nimport View from \"../../components/view\";\nimport Button from \"../../components/button\";\nimport { getDateObject, getMonthForIndex, addMonths } from \"./helpers/DateUtils\";\nimport { DayNamesFormat, UpdateSource } from \"./types\";\nimport CalendarContext from \"./CalendarContext\";\nimport WeekDaysNames from \"./WeekDaysNames\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WEEK_NUMBER_WIDTH = 32;\nvar ARROW_NEXT = require(\"./assets/arrowNext.png\");\nvar ARROW_BACK = require(\"./assets/arrowBack.png\");\nvar AnimatedTextInput = Reanimated.createAnimatedComponent(TextInput);\nvar Header = function Header(props) {\n  var month = props.month,\n    year = props.year;\n  var _useContext = useContext(CalendarContext),\n    selectedDate = _useContext.selectedDate,\n    setDate = _useContext.setDate,\n    showWeeksNumbers = _useContext.showWeeksNumbers,\n    staticHeader = _useContext.staticHeader,\n    setHeaderHeight = _useContext.setHeaderHeight;\n  var getNewDate = useCallback(function (count) {\n    return addMonths(selectedDate.value, count, true);\n  }, []);\n  var onLeftArrowPress = useCallback(throttle(function () {\n    setDate(getNewDate(-1), UpdateSource.MONTH_ARROW);\n  }, 300), [setDate, getNewDate]);\n  var onRightArrowPress = useCallback(throttle(function () {\n    setDate(getNewDate(1), UpdateSource.MONTH_ARROW);\n  }, 300), [setDate, getNewDate]);\n  var getTitle = useCallback(function (date) {\n    'worklet';\n\n    var dateObject = getDateObject(date);\n    var m = dateObject.month;\n    var y = dateObject.year;\n    return getMonthForIndex(m) + ` ${y}`;\n  }, []);\n  var animatedProps = useAnimatedProps(function () {\n    return {\n      text: getTitle(selectedDate.value)\n    };\n  });\n  var onLayout = useCallback(function (event) {\n    setHeaderHeight == null ? void 0 : setHeaderHeight(event.nativeEvent.layout.height);\n  }, [setHeaderHeight]);\n  var renderTitle = function renderTitle() {\n    if (!staticHeader) {\n      var title = getMonthForIndex(month) + ` ${year}`;\n      return _jsx(Text, {\n        style: styles.title,\n        children: title\n      });\n    }\n    return _jsx(AnimatedTextInput, {\n      value: getTitle(selectedDate.value),\n      animatedProps: animatedProps,\n      editable: false,\n      style: styles.title\n    });\n  };\n  var renderArrow = function renderArrow(source, onPress) {\n    return _jsx(Button, {\n      link: true,\n      size: Button.sizes.xSmall,\n      iconSource: source,\n      onPress: onPress\n    });\n  };\n  var renderNavigation = function renderNavigation() {\n    return _jsxs(View, {\n      row: true,\n      spread: true,\n      style: styles.navigation,\n      children: [renderArrow(ARROW_BACK, onLeftArrowPress), renderTitle(), renderArrow(ARROW_NEXT, onRightArrowPress)]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    onLayout: onLayout,\n    children: [renderNavigation(), _jsx(WeekDaysNames, {\n      format: DayNamesFormat.LONG_ABBREVIATION,\n      containerStyle: [styles.weekDaysNames, showWeeksNumbers && {\n        marginLeft: WEEK_NUMBER_WIDTH\n      }]\n    })]\n  });\n};\nexport default Header;\nvar styles = StyleSheet.create({\n  container: {},\n  navigation: {\n    marginTop: 12,\n    marginBottom: 16,\n    marginHorizontal: 8\n  },\n  title: _objectSpread({\n    color: Colors.$textDefault,\n    paddingVertical: 0\n  }, Typography.text60),\n  weekDaysNames: {\n    marginBottom: 8,\n    marginHorizontal: 16\n  }\n});","map":{"version":3,"names":["throttle","React","useContext","useCallback","StyleSheet","TextInput","Text","Reanimated","useAnimatedProps","Colors","Typography","View","Button","getDateObject","getMonthForIndex","addMonths","DayNamesFormat","UpdateSource","CalendarContext","WeekDaysNames","jsx","_jsx","jsxs","_jsxs","WEEK_NUMBER_WIDTH","ARROW_NEXT","require","ARROW_BACK","AnimatedTextInput","createAnimatedComponent","Header","props","month","year","_useContext","selectedDate","setDate","showWeeksNumbers","staticHeader","setHeaderHeight","getNewDate","count","value","onLeftArrowPress","MONTH_ARROW","onRightArrowPress","getTitle","date","dateObject","m","y","animatedProps","text","onLayout","event","nativeEvent","layout","height","renderTitle","title","style","styles","children","editable","renderArrow","source","onPress","link","size","sizes","xSmall","iconSource","renderNavigation","row","spread","navigation","container","format","LONG_ABBREVIATION","containerStyle","weekDaysNames","marginLeft","create","marginTop","marginBottom","marginHorizontal","_objectSpread","color","$textDefault","paddingVertical","text60"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/incubator/Calendar/Header.js"],"sourcesContent":["import throttle from 'lodash/throttle';\nimport React, { useContext, useCallback } from 'react';\nimport { StyleSheet, TextInput, Text } from 'react-native';\nimport Reanimated, { useAnimatedProps } from 'react-native-reanimated';\nimport { Colors, Typography } from \"../../style\";\nimport View from \"../../components/view\";\nimport Button from \"../../components/button\";\nimport { getDateObject, getMonthForIndex, addMonths } from \"./helpers/DateUtils\";\nimport { DayNamesFormat, UpdateSource } from \"./types\";\nimport CalendarContext from \"./CalendarContext\";\nimport WeekDaysNames from \"./WeekDaysNames\";\nconst WEEK_NUMBER_WIDTH = 32;\nconst ARROW_NEXT = require(\"./assets/arrowNext.png\");\nconst ARROW_BACK = require(\"./assets/arrowBack.png\");\nconst AnimatedTextInput = Reanimated.createAnimatedComponent(TextInput);\nconst Header = props => {\n  const {\n    month,\n    year\n  } = props;\n  const {\n    selectedDate,\n    setDate,\n    showWeeksNumbers,\n    staticHeader,\n    setHeaderHeight\n  } = useContext(CalendarContext);\n  const getNewDate = useCallback(count => {\n    return addMonths(selectedDate.value, count, true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onLeftArrowPress = useCallback(throttle(() => {\n    setDate(getNewDate(-1), UpdateSource.MONTH_ARROW);\n  }, 300), [setDate, getNewDate]);\n  const onRightArrowPress = useCallback(throttle(() => {\n    setDate(getNewDate(1), UpdateSource.MONTH_ARROW);\n  }, 300), [setDate, getNewDate]);\n  const getTitle = useCallback(date => {\n    'worklet';\n\n    const dateObject = getDateObject(date);\n    const m = dateObject.month;\n    const y = dateObject.year;\n    return getMonthForIndex(m) + ` ${y}`;\n  }, []);\n  const animatedProps = useAnimatedProps(() => {\n    // get called only on value update\n    return {\n      text: getTitle(selectedDate.value)\n    };\n  });\n  const onLayout = useCallback(event => {\n    setHeaderHeight?.(event.nativeEvent.layout.height);\n  }, [setHeaderHeight]);\n  const renderTitle = () => {\n    if (!staticHeader) {\n      const title = getMonthForIndex(month) + ` ${year}`;\n      return <Text style={styles.title}>{title}</Text>;\n    }\n    return <AnimatedTextInput value={getTitle(selectedDate.value)} // setting initial value\n    {...{\n      animatedProps\n    }} editable={false}\n    // @ts-expect-error should be fixed in version 3.5 (https://github.com/software-mansion/react-native-reanimated/pull/4881)\n    style={styles.title} />;\n  };\n  const renderArrow = (source, onPress) => {\n    return <Button link size={Button.sizes.xSmall} iconSource={source} onPress={onPress} />;\n  };\n  const renderNavigation = () => {\n    return <View row spread style={styles.navigation}>\n        {renderArrow(ARROW_BACK, onLeftArrowPress)}\n        {renderTitle()}\n        {renderArrow(ARROW_NEXT, onRightArrowPress)}\n      </View>;\n  };\n  return <View style={styles.container} onLayout={onLayout}>\n      {renderNavigation()}\n      <WeekDaysNames format={DayNamesFormat.LONG_ABBREVIATION} containerStyle={[styles.weekDaysNames, showWeeksNumbers && {\n      marginLeft: WEEK_NUMBER_WIDTH\n    }]} />\n    </View>;\n};\nexport default Header;\nconst styles = StyleSheet.create({\n  container: {},\n  navigation: {\n    marginTop: 12,\n    marginBottom: 16,\n    marginHorizontal: 8\n  },\n  title: {\n    color: Colors.$textDefault,\n    paddingVertical: 0,\n    // for Android inner paddings\n    ...Typography.text60\n  },\n  weekDaysNames: {\n    marginBottom: 8,\n    marginHorizontal: 16\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}