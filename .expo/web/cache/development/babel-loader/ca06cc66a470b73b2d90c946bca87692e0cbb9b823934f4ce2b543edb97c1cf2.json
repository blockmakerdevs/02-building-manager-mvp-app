{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _global$_UILIB_TESTIN;\nimport _isEqual from \"lodash/isEqual\";\nimport { useCallback, useRef, useState } from 'react';\nimport { Constants } from \"../../commons/new\";\nvar wasMeasuredDefaultValue = (_global$_UILIB_TESTIN = global._UILIB_TESTING) != null ? _global$_UILIB_TESTIN : false;\nexport default function useHiddenLocation() {\n  var getHiddenLocation = function getHiddenLocation(_ref) {\n    var _ref$wasMeasured = _ref.wasMeasured,\n      wasMeasured = _ref$wasMeasured === void 0 ? wasMeasuredDefaultValue : _ref$wasMeasured;\n    return {\n      up: -Constants.screenHeight,\n      down: Constants.screenHeight,\n      left: -Constants.windowWidth,\n      right: Constants.windowWidth,\n      wasMeasured: wasMeasured\n    };\n  };\n  var _useState = useState(getHiddenLocation({})),\n    _useState2 = _slicedToArray(_useState, 2),\n    hiddenLocation = _useState2[0],\n    setHiddenLocation = _useState2[1];\n  var ref = useRef();\n  var layoutData = useRef();\n  var wasMeasured = useRef(wasMeasuredDefaultValue);\n  var measure = useCallback(function () {\n    if (ref.current) {\n      wasMeasured.current = true;\n      setHiddenLocation(getHiddenLocation({\n        wasMeasured: true\n      }));\n    }\n  }, []);\n  var setRef = useCallback(function (node) {\n    if (node) {\n      ref.current = node;\n      measure();\n    }\n  }, [measure]);\n  var onLayout = useCallback(function (event) {\n    if (!_isEqual(layoutData.current, event.nativeEvent.layout)) {\n      layoutData.current = event.nativeEvent.layout;\n      measure();\n    }\n  }, [measure]);\n  return {\n    setRef: setRef,\n    onLayout: onLayout,\n    hiddenLocation: hiddenLocation\n  };\n}","map":{"version":3,"names":["_isEqual","useCallback","useRef","useState","Constants","wasMeasuredDefaultValue","_global$_UILIB_TESTIN","global","_UILIB_TESTING","useHiddenLocation","getHiddenLocation","_ref","_ref$wasMeasured","wasMeasured","up","screenHeight","down","left","windowWidth","right","_useState","_useState2","_slicedToArray","hiddenLocation","setHiddenLocation","ref","layoutData","measure","current","setRef","node","onLayout","event","nativeEvent","layout"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/incubator/hooks/useHiddenLocation.web.js"],"sourcesContent":["import _isEqual from \"lodash/isEqual\";\nimport { useCallback, useRef, useState } from 'react';\nimport { Constants } from \"../../commons/new\";\n// Adding this for headless tests that are not triggering onLayout\nconst wasMeasuredDefaultValue = global._UILIB_TESTING ?? false;\nexport default function useHiddenLocation() {\n  const getHiddenLocation = ({\n    wasMeasured = wasMeasuredDefaultValue\n  }) => {\n    return {\n      up: -Constants.screenHeight,\n      down: Constants.screenHeight,\n      left: -Constants.windowWidth,\n      right: Constants.windowWidth,\n      wasMeasured\n    };\n  };\n  const [hiddenLocation, setHiddenLocation] = useState(getHiddenLocation({}));\n  const ref = useRef();\n  const layoutData = useRef();\n  const wasMeasured = useRef(wasMeasuredDefaultValue);\n  const measure = useCallback(() => {\n    if (ref.current) {\n      wasMeasured.current = true;\n      setHiddenLocation(getHiddenLocation({\n        wasMeasured: true\n      }));\n    }\n  }, []);\n  const setRef = useCallback(node => {\n    if (node) {\n      ref.current = node;\n      measure();\n    }\n  }, [measure]);\n  const onLayout = useCallback(event => {\n    if (!_isEqual(layoutData.current, event.nativeEvent.layout)) {\n      layoutData.current = event.nativeEvent.layout;\n      measure();\n    }\n  }, [measure]);\n  return {\n    setRef,\n    onLayout,\n    hiddenLocation\n  };\n}"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,SAASC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,SAAS;AAElB,IAAMC,uBAAuB,IAAAC,qBAAA,GAAGC,MAAM,CAACC,cAAc,YAAAF,qBAAA,GAAI,KAAK;AAC9D,eAAe,SAASG,iBAAiBA,CAAA,EAAG;EAC1C,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAEjB;IAAA,IAAAC,gBAAA,GAAAD,IAAA,CADJE,WAAW;MAAXA,WAAW,GAAAD,gBAAA,cAAGP,uBAAuB,GAAAO,gBAAA;IAErC,OAAO;MACLE,EAAE,EAAE,CAACV,SAAS,CAACW,YAAY;MAC3BC,IAAI,EAAEZ,SAAS,CAACW,YAAY;MAC5BE,IAAI,EAAE,CAACb,SAAS,CAACc,WAAW;MAC5BC,KAAK,EAAEf,SAAS,CAACc,WAAW;MAC5BL,WAAW,EAAXA;IACF,CAAC;EACH,CAAC;EACD,IAAAO,SAAA,GAA4CjB,QAAQ,CAACO,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApEG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxC,IAAMI,GAAG,GAAGvB,MAAM,CAAC,CAAC;EACpB,IAAMwB,UAAU,GAAGxB,MAAM,CAAC,CAAC;EAC3B,IAAMW,WAAW,GAAGX,MAAM,CAACG,uBAAuB,CAAC;EACnD,IAAMsB,OAAO,GAAG1B,WAAW,CAAC,YAAM;IAChC,IAAIwB,GAAG,CAACG,OAAO,EAAE;MACff,WAAW,CAACe,OAAO,GAAG,IAAI;MAC1BJ,iBAAiB,CAACd,iBAAiB,CAAC;QAClCG,WAAW,EAAE;MACf,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,EAAE,CAAC;EACN,IAAMgB,MAAM,GAAG5B,WAAW,CAAC,UAAA6B,IAAI,EAAI;IACjC,IAAIA,IAAI,EAAE;MACRL,GAAG,CAACG,OAAO,GAAGE,IAAI;MAClBH,OAAO,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,IAAMI,QAAQ,GAAG9B,WAAW,CAAC,UAAA+B,KAAK,EAAI;IACpC,IAAI,CAAChC,QAAQ,CAAC0B,UAAU,CAACE,OAAO,EAAEI,KAAK,CAACC,WAAW,CAACC,MAAM,CAAC,EAAE;MAC3DR,UAAU,CAACE,OAAO,GAAGI,KAAK,CAACC,WAAW,CAACC,MAAM;MAC7CP,OAAO,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,OAAO;IACLE,MAAM,EAANA,MAAM;IACNE,QAAQ,EAARA,QAAQ;IACRR,cAAc,EAAdA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}