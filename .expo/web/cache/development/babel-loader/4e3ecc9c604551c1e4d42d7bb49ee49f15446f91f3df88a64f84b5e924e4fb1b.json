{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"style\", \"placeholderTextColor\", \"multiline\", \"numberOfLines\", \"expandable\", \"rightIconSource\", \"color\", \"placeholder\", \"helperText\"],\n  _excluded2 = [\"lineHeight\"],\n  _excluded3 = [\"style\", \"iconSource\", \"iconColor\", \"accessibilityLabel\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _get from \"lodash/get\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nimport _invoke from \"lodash/invoke\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport memoize from 'memoize-one';\nimport { Constants } from \"../../commons/new\";\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport BaseInput from \"../baseInput\";\nimport Modal from \"../modal\";\nimport TextArea from \"../textArea\";\nimport View from \"../view\";\nimport Image from \"../image\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar COLOR_BY_STATE = {\n  default: Colors.grey10,\n  focus: Colors.grey10,\n  error: Colors.grey10,\n  disabled: Colors.grey50\n};\nvar UNDERLINE_COLOR_BY_STATE = {\n  default: Colors.grey50,\n  focus: Colors.$outlinePrimary,\n  error: Colors.red30\n};\nvar PLACEHOLDER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  focus: Colors.$textPrimary\n};\nvar CHAR_COUNTER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  error: Colors.red30\n};\nvar LABEL_TYPOGRAPHY = Typography.text80;\nvar ICON_SIZE = 24;\nvar ICON_LEFT_PADDING = 6;\nvar FLOATING_PLACEHOLDER_SCALE = 0.875;\nvar TextField = function (_BaseInput) {\n  _inherits(TextField, _BaseInput);\n  function TextField(props) {\n    var _this;\n    _classCallCheck(this, TextField);\n    _this = _callSuper(this, TextField, [props]);\n    _this.onPlaceholderLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n      var translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n      _this.setState({\n        floatingPlaceholderTranslate: translate / FLOATING_PLACEHOLDER_SCALE\n      });\n    };\n    _this.toggleExpandableModal = function (value) {\n      _this.setState({\n        showExpandableModal: value\n      });\n      _invoke(_this.props, 'onToggleExpandableModal', value);\n    };\n    _this.updateFloatingPlaceholderState = function (withoutAnimation) {\n      if (withoutAnimation) {\n        _this.state.floatingPlaceholderState.setValue(_this.shouldFloatPlaceholder() ? 1 : 0);\n      } else {\n        Animated.spring(_this.state.floatingPlaceholderState, {\n          toValue: _this.shouldFloatPlaceholder() ? 1 : 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      }\n    };\n    _this.getPlaceholderText = memoize(function (placeholder, helperText) {\n      var text = _this.shouldFakePlaceholder() ? _this.shouldShowHelperText() ? helperText : ' ' : _this.shouldShowTopError() && _this.shouldShowHelperText() ? helperText : _this.getRequiredPlaceholder(placeholder);\n      return text;\n    });\n    _this.onPressRightButton = function () {\n      _invoke(_this.props, 'rightButtonProps.onPress');\n    };\n    _this.onDoneEditingExpandableInput = function () {\n      var expandableInputValue = _get(_this.expandableInput, 'state.value');\n      _this.setState({\n        value: expandableInputValue\n      });\n      _this.state.floatingPlaceholderState.setValue(expandableInputValue ? 1 : 0);\n      _invoke(_this.props, 'onChangeText', expandableInputValue);\n      _this.toggleExpandableModal(false);\n    };\n    _this.onKeyPress = function (event) {\n      _this.lastKey = event.nativeEvent.key;\n      _this.setCharCountColor(_this.lastKey);\n      _invoke(_this.props, 'onKeyPress', event);\n    };\n    _this.onChangeText = function (text) {\n      if (text === '' && _this.lastKey && _this.lastKey !== Constants.backspaceKey) {\n        return;\n      }\n      var _this$props = _this.props,\n        transformer = _this$props.transformer,\n        validateOnChange = _this$props.validateOnChange;\n      var transformedText = text;\n      if (_isFunction(transformer)) {\n        transformedText = transformer(text);\n      }\n      _invoke(_this.props, 'onChangeText', transformedText);\n      _this.setState({\n        value: transformedText\n      }, function () {\n        if (validateOnChange) {\n          setImmediate(_this.validate);\n        }\n      });\n    };\n    _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n      value: props.value,\n      floatingPlaceholderState: new Animated.Value(_this.shouldFloatPlaceholder(props.value) ? 1 : 0),\n      showExpandableModal: false,\n      floatingPlaceholderTranslate: 0,\n      charCountColor: CHAR_COUNTER_COLOR_BY_STATE.default\n    });\n    _this.generatePropsWarnings(props);\n    return _this;\n  }\n  _createClass(TextField, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      if (nextProps.value !== this.props.value) {\n        this.setState({\n          value: nextProps.value\n        }, function () {\n          _this2.updateFloatingPlaceholderState();\n          if (nextProps.validateOnChange) {\n            _this2.validate();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps, prevState) {\n      if (_isEmpty(prevState.value) !== _isEmpty(this.state.value) || prevState.focused !== this.state.focused) {\n        this.updateFloatingPlaceholderState();\n      }\n    }\n  }, {\n    key: \"generatePropsWarnings\",\n    value: function generatePropsWarnings(props) {\n      if (props.maxLength === 0) {\n        console.warn('Setting maxLength to zero will block typing in this input');\n      }\n      if (props.showCharacterCounter && !props.maxLength) {\n        console.warn('In order to use showCharacterCount please pass \\'maxLength\\' prop');\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps(), this.getTopPaddings());\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$getThemeProps = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps.floatingPlaceholder,\n        placeholder = _this$getThemeProps.placeholder;\n      var accessibilityState = this.isDisabled() ? {\n        disabled: true\n      } : undefined;\n      var accessibilityLabel = floatingPlaceholder ? this.props.accessibilityLabel || placeholder : '';\n      if (this.isRequiredField()) {\n        accessibilityLabel = `${accessibilityLabel}. Mandatory`;\n      }\n      return {\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: Constants.isIOS ? accessibilityState : undefined\n      };\n    }\n  }, {\n    key: \"getStateColor\",\n    value: function getStateColor() {\n      var colorProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var focused = this.state.focused;\n      var error = this.getErrorMessage();\n      var _this$getThemeProps2 = this.getThemeProps(),\n        disabledColor = _this$getThemeProps2.disabledColor;\n      if (_isString(colorProp)) {\n        return colorProp || Colors.grey10;\n      } else if (_isPlainObject(colorProp)) {\n        var mergedColorState = _objectSpread(_objectSpread({}, COLOR_BY_STATE), colorProp);\n        if (this.isDisabled()) {\n          return disabledColor || mergedColorState.disabled;\n        } else if (error) {\n          return mergedColorState.error;\n        } else if (focused) {\n          return mergedColorState.focus;\n        } else {\n          return mergedColorState.default;\n        }\n      }\n      return colorProp || Colors.grey10;\n    }\n  }, {\n    key: \"getCharCount\",\n    value: function getCharCount() {\n      var value = this.state.value;\n      if (value) {\n        return value.length;\n      }\n      return 0;\n    }\n  }, {\n    key: \"setCharCountColor\",\n    value: function setCharCountColor(key) {\n      this.maxReached = key === Constants.backspaceKey ? false : this.isCounterLimit();\n      var color = this.state.focused && this.maxReached ? CHAR_COUNTER_COLOR_BY_STATE.error : CHAR_COUNTER_COLOR_BY_STATE.default;\n      if (color !== this.state.charCountColor) {\n        this.setState({\n          charCountColor: color\n        });\n      }\n    }\n  }, {\n    key: \"getCharCountColor\",\n    value: function getCharCountColor() {\n      var charCountColor = this.state.charCountColor;\n      var _this$getThemeProps3 = this.getThemeProps(),\n        disabledColor = _this$getThemeProps3.disabledColor;\n      return this.isDisabled() && disabledColor ? disabledColor : charCountColor;\n    }\n  }, {\n    key: \"getTopPaddings\",\n    value: function getTopPaddings() {\n      return this.shouldFakePlaceholder() ? this.shouldShowTopError() ? undefined : 25 : undefined;\n    }\n  }, {\n    key: \"getTopErrorsPosition\",\n    value: function getTopErrorsPosition() {\n      return !this.props.title && this.shouldShowTopError() ? {\n        top: Constants.isIOS ? -25 : -27\n      } : undefined;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return this.props.editable === false;\n    }\n  }, {\n    key: \"isCounterLimit\",\n    value: function isCounterLimit() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n        maxLength = _this$getThemeProps4.maxLength;\n      var counter = this.getCharCount();\n      return counter === 0 ? false : maxLength <= counter;\n    }\n  }, {\n    key: \"hasText\",\n    value: function hasText(value) {\n      return !_isEmpty(value || this.state.value);\n    }\n  }, {\n    key: \"shouldShowHelperText\",\n    value: function shouldShowHelperText() {\n      var focused = this.state.focused;\n      var helperText = this.props.helperText;\n      return focused && helperText;\n    }\n  }, {\n    key: \"shouldFloatOnFocus\",\n    value: function shouldFloatOnFocus() {\n      var focused = this.state.focused;\n      var _this$getThemeProps5 = this.getThemeProps(),\n        floatOnFocus = _this$getThemeProps5.floatOnFocus;\n      return focused && floatOnFocus;\n    }\n  }, {\n    key: \"shouldFloatPlaceholder\",\n    value: function shouldFloatPlaceholder(text) {\n      return this.hasText(text) || this.shouldShowHelperText() || this.shouldFloatOnFocus();\n    }\n  }, {\n    key: \"shouldFakePlaceholder\",\n    value: function shouldFakePlaceholder() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps6.floatingPlaceholder,\n        centered = _this$getThemeProps6.centered,\n        leadingIcon = _this$getThemeProps6.leadingIcon,\n        prefix = _this$getThemeProps6.prefix;\n      return !leadingIcon && !prefix && Boolean(floatingPlaceholder && !centered && !this.shouldShowTopError());\n    }\n  }, {\n    key: \"shouldShowError\",\n    value: function shouldShowError() {\n      var _this$getThemeProps7 = this.getThemeProps(),\n        enableErrors = _this$getThemeProps7.enableErrors;\n      var error = this.getErrorMessage();\n      return enableErrors && error;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage() {\n      var _this$props2, _this$state;\n      return ((_this$props2 = this.props) == null ? void 0 : _this$props2.error) || ((_this$state = this.state) == null ? void 0 : _this$state.error);\n    }\n  }, {\n    key: \"shouldShowTopError\",\n    value: function shouldShowTopError() {\n      var _this$getThemeProps8 = this.getThemeProps(),\n        useTopErrors = _this$getThemeProps8.useTopErrors;\n      return this.shouldShowError() && useTopErrors;\n    }\n  }, {\n    key: \"shouldDisplayRightButton\",\n    value: function shouldDisplayRightButton() {\n      var _this$getThemeProps9 = this.getThemeProps(),\n        rightButtonProps = _this$getThemeProps9.rightButtonProps,\n        expandable = _this$getThemeProps9.expandable;\n      return !expandable && rightButtonProps && rightButtonProps.iconSource;\n    }\n  }, {\n    key: \"shouldRenderTitle\",\n    value: function shouldRenderTitle() {\n      var _this$getThemeProps10 = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps10.floatingPlaceholder,\n        title = _this$getThemeProps10.title;\n      return !floatingPlaceholder && title;\n    }\n  }, {\n    key: \"renderPlaceholder\",\n    value: function renderPlaceholder() {\n      var _this$state2 = this.state,\n        floatingPlaceholderState = _this$state2.floatingPlaceholderState,\n        floatingPlaceholderTranslate = _this$state2.floatingPlaceholderTranslate;\n      var _this$getThemeProps11 = this.getThemeProps(),\n        placeholder = _this$getThemeProps11.placeholder,\n        placeholderTextColor = _this$getThemeProps11.placeholderTextColor,\n        floatingPlaceholderColor = _this$getThemeProps11.floatingPlaceholderColor,\n        floatingPlaceholderStyle = _this$getThemeProps11.floatingPlaceholderStyle;\n      var typography = this.getTypography();\n      var placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n      if (this.shouldFakePlaceholder()) {\n        return _jsx(View, {\n          absF: true,\n          left: true,\n          children: _jsx(Animated.Text, {\n            pointerEvents: \"none\",\n            numberOfLines: 1,\n            suppressHighlighting: true,\n            accessible: false,\n            onLayout: this.onPlaceholderLayout,\n            style: [this.styles.placeholder, this.getTopErrorsPosition(), typography, {\n              lineHeight: undefined\n            }, {\n              transform: [{\n                scale: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, FLOATING_PLACEHOLDER_SCALE]\n                })\n              }, {\n                translateY: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [25, 0]\n                })\n              }, {\n                translateX: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0, -floatingPlaceholderTranslate]\n                })\n              }],\n              color: this.shouldFloatPlaceholder() ? this.getStateColor(floatingPlaceholderColor || PLACEHOLDER_COLOR_BY_STATE) : placeholderColor\n            }, floatingPlaceholderStyle],\n            children: this.getRequiredPlaceholder(placeholder)\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderPrefix\",\n    value: function renderPrefix() {\n      var _this$props3 = this.props,\n        prefix = _this$props3.prefix,\n        prefixStyle = _this$props3.prefixStyle;\n      if (prefix) {\n        var typography = this.getTypography();\n        return _jsx(Text, {\n          style: [this.styles.prefix, typography, {\n            lineHeight: undefined\n          }, prefixStyle],\n          children: prefix\n        });\n      }\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$getThemeProps12 = this.getThemeProps(),\n        title = _this$getThemeProps12.title,\n        titleColor = _this$getThemeProps12.titleColor,\n        titleStyle = _this$getThemeProps12.titleStyle;\n      var color = this.getStateColor(titleColor || PLACEHOLDER_COLOR_BY_STATE);\n      if (this.shouldRenderTitle()) {\n        return _jsx(Text, {\n          style: [{\n            color: color\n          }, this.styles.topLabel, this.styles.label, titleStyle],\n          children: title\n        });\n      }\n    }\n  }, {\n    key: \"renderCharCounter\",\n    value: function renderCharCounter() {\n      var _this$getThemeProps13 = this.getThemeProps(),\n        maxLength = _this$getThemeProps13.maxLength,\n        showCharacterCounter = _this$getThemeProps13.showCharacterCounter;\n      if (maxLength && showCharacterCounter) {\n        var counter = this.getCharCount();\n        var color = this.getCharCountColor();\n        return _jsxs(Text, {\n          style: [{\n            color: color\n          }, this.styles.bottomLabel, this.styles.label],\n          accessibilityLabel: `${counter} out of ${maxLength} max characters`,\n          children: [counter, \" / \", maxLength]\n        });\n      }\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(visible) {\n      var _this$getThemeProps14 = this.getThemeProps(),\n        enableErrors = _this$getThemeProps14.enableErrors,\n        useTopErrors = _this$getThemeProps14.useTopErrors,\n        errorColor = _this$getThemeProps14.errorColor;\n      var textColor = errorColor ? {\n        color: errorColor\n      } : undefined;\n      var positionStyle = useTopErrors ? this.styles.topLabel : this.styles.bottomLabel;\n      var error = this.getErrorMessage();\n      if (visible && enableErrors) {\n        return _jsx(Text, {\n          style: [this.styles.errorMessage, this.styles.label, positionStyle, textColor],\n          accessible: !_isEmpty(error) && !useTopErrors,\n          children: error\n        });\n      }\n    }\n  }, {\n    key: \"renderExpandableModal\",\n    value: function renderExpandableModal() {\n      var _this3 = this;\n      var _this$getThemeProps15 = this.getThemeProps(),\n        renderExpandable = _this$getThemeProps15.renderExpandable,\n        topBarProps = _this$getThemeProps15.topBarProps;\n      var showExpandableModal = this.state.showExpandableModal;\n      if (_isFunction(renderExpandable) && showExpandableModal) {\n        return renderExpandable(this.getThemeProps(), this.state);\n      }\n      var textInputProps = TextField.extractOwnProps(this.props, ['error', 'testID']);\n      return _jsxs(Modal, {\n        animationType: 'slide',\n        visible: showExpandableModal,\n        onRequestClose: function onRequestClose() {\n          return _this3.toggleExpandableModal(false);\n        },\n        children: [_jsx(Modal.TopBar, _objectSpread(_objectSpread({}, topBarProps), {}, {\n          onCancel: function onCancel() {\n            return _this3.toggleExpandableModal(false);\n          },\n          onDone: this.onDoneEditingExpandableInput\n        })), _jsx(View, {\n          style: this.styles.expandableModalContent,\n          children: _jsx(TextArea, _objectSpread(_objectSpread({\n            ref: function ref(textarea) {\n              _this3.expandableInput = textarea;\n            }\n          }, textInputProps), {}, {\n            value: this.state.value\n          }))\n        })]\n      });\n    }\n  }, {\n    key: \"renderExpandableInput\",\n    value: function renderExpandableInput() {\n      var _this4 = this;\n      var _this$getThemeProps16 = this.getThemeProps(),\n        renderExpandableInput = _this$getThemeProps16.renderExpandableInput,\n        testID = _this$getThemeProps16.testID;\n      if (_isFunction(renderExpandableInput)) {\n        return renderExpandableInput(this.getThemeProps(), this.toggleExpandableModal);\n      }\n      return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n        style: this.styles.expandableInput,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return !_this4.isDisabled() && _this4.toggleExpandableModal(true);\n        },\n        testID: `${testID}.expandable`\n      }, this.getAccessibilityInfo()), {}, {\n        children: this.renderTextInput()\n      }));\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this5 = this;\n      var value = this.state.value;\n      var _this$getThemeProps17 = this.getThemeProps(),\n        style = _this$getThemeProps17.style,\n        placeholderTextColor = _this$getThemeProps17.placeholderTextColor,\n        multiline = _this$getThemeProps17.multiline,\n        numberOfLines = _this$getThemeProps17.numberOfLines,\n        expandable = _this$getThemeProps17.expandable,\n        rightIconSource = _this$getThemeProps17.rightIconSource,\n        color = _this$getThemeProps17.color,\n        placeholder = _this$getThemeProps17.placeholder,\n        helperText = _this$getThemeProps17.helperText,\n        others = _objectWithoutProperties(_this$getThemeProps17, _excluded);\n      var typography = this.getTypography();\n      var lineHeight = typography.lineHeight,\n        typographyStyle = _objectWithoutProperties(typography, _excluded2);\n      var textColor = this.getStateColor(color || this.extractColorValue());\n      var hasRightElement = this.shouldDisplayRightButton() || rightIconSource;\n      var shouldUseMultiline = multiline;\n      var inputStyle = [hasRightElement && this.styles.rightElement, this.styles.input, _objectSpread({}, typographyStyle), expandable && {\n        maxHeight: lineHeight * (Constants.isAndroid ? 3 : 3.3)\n      }, Constants.isRTL && {\n        minHeight: lineHeight + 3\n      }, Constants.isIOS && shouldUseMultiline && {\n        paddingTop: 0\n      }, {\n        color: textColor\n      }, style];\n      var placeholderText = this.getPlaceholderText(placeholder, helperText);\n      var placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n      var isEditable = !this.isDisabled() && !expandable;\n      return _jsx(RNTextInput, _objectSpread(_objectSpread(_objectSpread({}, this.getAccessibilityInfo()), {}, {\n        pointerEvents: expandable ? 'none' : undefined\n      }, others), {}, {\n        value: value,\n        placeholder: placeholderText,\n        placeholderTextColor: placeholderColor,\n        underlineColorAndroid: \"transparent\",\n        style: inputStyle,\n        multiline: shouldUseMultiline,\n        numberOfLines: numberOfLines,\n        onKeyPress: this.onKeyPress,\n        onChangeText: this.onChangeText,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        ref: function ref(input) {\n          _this5.input = input;\n        },\n        editable: isEditable\n      }));\n    }\n  }, {\n    key: \"renderRightButton\",\n    value: function renderRightButton() {\n      if (this.shouldDisplayRightButton()) {\n        var _this$getThemeProps18 = this.getThemeProps(),\n          rightButtonProps = _this$getThemeProps18.rightButtonProps;\n        var style = rightButtonProps.style,\n          iconSource = rightButtonProps.iconSource,\n          iconColor = rightButtonProps.iconColor,\n          accessibilityLabel = rightButtonProps.accessibilityLabel,\n          others = _objectWithoutProperties(rightButtonProps, _excluded3);\n        return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, others), {}, {\n          accessibilityLabel: accessibilityLabel,\n          style: [this.styles.rightButton, this.getTopErrorsPosition(), style],\n          onPress: this.onPressRightButton,\n          children: _jsx(Image, {\n            pointerEvents: \"none\",\n            source: iconSource,\n            resizeMode: 'contain',\n            style: [this.styles.rightButtonImage, {\n              tintColor: iconColor || Colors.$iconPrimary\n            }]\n          })\n        }));\n      }\n    }\n  }, {\n    key: \"renderRightIcon\",\n    value: function renderRightIcon() {\n      var _this$getThemeProps19 = this.getThemeProps(),\n        rightIconSource = _this$getThemeProps19.rightIconSource,\n        rightIconStyle = _this$getThemeProps19.rightIconStyle;\n      if (rightIconSource) {\n        return _jsx(View, {\n          style: [this.styles.rightButton, this.getTopErrorsPosition()],\n          pointerEvents: \"none\",\n          children: _jsx(Image, {\n            source: rightIconSource,\n            resizeMode: 'center',\n            style: [this.styles.rightButtonImage, rightIconStyle]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps20 = this.getThemeProps(),\n        expandable = _this$getThemeProps20.expandable,\n        containerStyle = _this$getThemeProps20.containerStyle,\n        underlineColor = _this$getThemeProps20.underlineColor,\n        useTopErrors = _this$getThemeProps20.useTopErrors,\n        hideUnderline = _this$getThemeProps20.hideUnderline,\n        leadingIcon = _this$getThemeProps20.leadingIcon;\n      var underlineStateColor = this.getStateColor(underlineColor || UNDERLINE_COLOR_BY_STATE);\n      return _jsxs(View, {\n        style: [this.styles.container, containerStyle],\n        collapsable: false,\n        children: [this.shouldShowTopError() ? this.renderError(useTopErrors) : this.renderTitle(), _jsxs(View, {\n          style: [this.styles.innerContainer, hideUnderline && this.styles.innerContainerWithoutUnderline, {\n            borderColor: underlineStateColor\n          }, {\n            paddingTop: this.getTopPaddings()\n          }],\n          children: [leadingIcon && _jsx(Image, _objectSpread(_objectSpread({}, leadingIcon), {}, {\n            style: [this.styles.leadingIcon, leadingIcon.style]\n          })), this.renderPrefix(), this.renderPlaceholder(), expandable ? this.renderExpandableInput() : this.renderTextInput(), this.renderRightButton(), this.renderRightIcon(), expandable && this.renderExpandableModal()]\n        }), !_isUndefined(this.getErrorMessage()) && useTopErrors && _jsx(View, {\n          style: this.styles.accessibilityDummyErrorMessage,\n          accessible: true,\n          accessibilityLabel: this.getErrorMessage()\n        }), _jsxs(View, {\n          row: true,\n          children: [_jsx(View, {\n            flex: true,\n            children: this.renderError(!useTopErrors)\n          }), this.renderCharCounter()]\n        })]\n      });\n    }\n  }]);\n  return TextField;\n}(BaseInput);\nTextField.displayName = 'TextFieldOld';\nTextField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, TextInputPropTypes), BaseInput.propTypes), {}, {\n  floatingPlaceholder: PropTypes.bool,\n  floatingPlaceholderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  floatingPlaceholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  helperText: PropTypes.string,\n  hideUnderline: PropTypes.bool,\n  underlineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  disabledColor: PropTypes.string,\n  centered: PropTypes.bool,\n  error: PropTypes.string,\n  enableErrors: PropTypes.bool,\n  errorColor: PropTypes.string,\n  expandable: PropTypes.bool,\n  renderExpandableInput: PropTypes.elementType,\n  renderExpandable: PropTypes.elementType,\n  onToggleExpandableModal: PropTypes.func,\n  topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n  transformer: PropTypes.func,\n  prefix: PropTypes.string,\n  prefixStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  title: PropTypes.string,\n  titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  showCharacterCounter: PropTypes.bool,\n  floatOnFocus: PropTypes.bool,\n  useTopErrors: PropTypes.bool,\n  rightIconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  rightIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  rightButtonProps: PropTypes.shape({\n    iconSource: ImagePropTypes.source,\n    iconColor: PropTypes.string,\n    onPress: PropTypes.func,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    accessibilityLabel: PropTypes.string\n  }),\n  leadingIcon: PropTypes.shape(ImagePropTypes)\n});\nTextField.defaultProps = {\n  enableErrors: true,\n  validateOnBlur: true\n};\nexport { TextField as default };\nfunction createStyles(_ref) {\n  var centered = _ref.centered,\n    multiline = _ref.multiline;\n  var rightItemTopPadding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var itemTopPadding = Constants.isIOS ? rightItemTopPadding - 3 : rightItemTopPadding - 1;\n  return StyleSheet.create({\n    container: {},\n    innerContainer: {\n      flexDirection: 'row',\n      justifyContent: centered ? 'center' : undefined,\n      borderBottomWidth: 1,\n      borderColor: Colors.grey70,\n      paddingBottom: Constants.isIOS ? 10 : 5\n    },\n    innerContainerWithoutUnderline: {\n      borderBottomWidth: 0,\n      paddingBottom: 0\n    },\n    input: {\n      flexGrow: 1,\n      textAlign: centered ? 'center' : Constants.isRTL ? 'right' : 'left',\n      backgroundColor: 'transparent',\n      padding: 0,\n      borderColor: 'transparent',\n      borderWidth: Constants.isAndroid ? 1 : undefined\n    },\n    expandableInput: {\n      flexGrow: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    expandableModalContent: {\n      flex: 1,\n      paddingTop: 15,\n      paddingHorizontal: 20\n    },\n    prefix: {\n      color: Colors.grey30,\n      marginRight: Spacings.s1,\n      textAlignVertical: 'center'\n    },\n    placeholder: {\n      textAlign: 'left'\n    },\n    errorMessage: {\n      color: Colors.red30,\n      textAlign: centered ? 'center' : 'left'\n    },\n    topLabel: {\n      marginBottom: Constants.isIOS ? multiline ? 1 : 5 : 7\n    },\n    bottomLabel: {\n      marginTop: 9\n    },\n    label: _objectSpread(_objectSpread({}, LABEL_TYPOGRAPHY), {}, {\n      height: LABEL_TYPOGRAPHY.lineHeight\n    }),\n    rightElement: {\n      paddingRight: ICON_SIZE + ICON_LEFT_PADDING\n    },\n    rightButton: {\n      position: 'absolute',\n      right: 0,\n      alignSelf: 'flex-start',\n      paddingTop: itemTopPadding\n    },\n    rightButtonImage: {\n      width: ICON_SIZE,\n      height: ICON_SIZE\n    },\n    leadingIcon: {\n      alignSelf: 'center'\n    },\n    accessibilityDummyErrorMessage: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: 1,\n      height: 1\n    }\n  });\n}","map":{"version":3,"names":["_get","_isUndefined","_isFunction","_isPlainObject","_isString","_invoke","_isEmpty","PropTypes","React","StyleSheet","Animated","RNTextInput","TextInputPropTypes","ImagePropTypes","memoize","Constants","Colors","Typography","Spacings","BaseInput","Modal","TextArea","View","Image","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","COLOR_BY_STATE","default","grey10","focus","error","disabled","grey50","UNDERLINE_COLOR_BY_STATE","$outlinePrimary","red30","PLACEHOLDER_COLOR_BY_STATE","grey30","$textPrimary","CHAR_COUNTER_COLOR_BY_STATE","LABEL_TYPOGRAPHY","text80","ICON_SIZE","ICON_LEFT_PADDING","FLOATING_PLACEHOLDER_SCALE","TextField","_BaseInput","_inherits","props","_this","_classCallCheck","_callSuper","onPlaceholderLayout","event","width","nativeEvent","layout","translate","setState","floatingPlaceholderTranslate","toggleExpandableModal","value","showExpandableModal","updateFloatingPlaceholderState","withoutAnimation","state","floatingPlaceholderState","setValue","shouldFloatPlaceholder","spring","toValue","duration","useNativeDriver","start","getPlaceholderText","placeholder","helperText","text","shouldFakePlaceholder","shouldShowHelperText","shouldShowTopError","getRequiredPlaceholder","onPressRightButton","onDoneEditingExpandableInput","expandableInputValue","expandableInput","onKeyPress","lastKey","key","setCharCountColor","onChangeText","backspaceKey","_this$props","transformer","validateOnChange","transformedText","setImmediate","validate","_objectSpread","Value","charCountColor","generatePropsWarnings","_createClass","UNSAFE_componentWillReceiveProps","nextProps","_this2","componentDidUpdate","_prevProps","prevState","focused","maxLength","console","warn","showCharacterCounter","generateStyles","styles","createStyles","getThemeProps","getTopPaddings","getAccessibilityInfo","_this$getThemeProps","floatingPlaceholder","accessibilityState","isDisabled","undefined","accessibilityLabel","isRequiredField","isIOS","getStateColor","colorProp","arguments","length","getErrorMessage","_this$getThemeProps2","disabledColor","mergedColorState","getCharCount","maxReached","isCounterLimit","color","getCharCountColor","_this$getThemeProps3","getTopErrorsPosition","title","top","editable","_this$getThemeProps4","counter","hasText","shouldFloatOnFocus","_this$getThemeProps5","floatOnFocus","_this$getThemeProps6","centered","leadingIcon","prefix","Boolean","shouldShowError","_this$getThemeProps7","enableErrors","_this$props2","_this$state","_this$getThemeProps8","useTopErrors","shouldDisplayRightButton","_this$getThemeProps9","rightButtonProps","expandable","iconSource","shouldRenderTitle","_this$getThemeProps10","renderPlaceholder","_this$state2","_this$getThemeProps11","placeholderTextColor","floatingPlaceholderColor","floatingPlaceholderStyle","typography","getTypography","placeholderColor","absF","left","children","pointerEvents","numberOfLines","suppressHighlighting","accessible","onLayout","style","lineHeight","transform","scale","interpolate","inputRange","outputRange","translateY","translateX","renderPrefix","_this$props3","prefixStyle","renderTitle","_this$getThemeProps12","titleColor","titleStyle","topLabel","label","renderCharCounter","_this$getThemeProps13","bottomLabel","renderError","visible","_this$getThemeProps14","errorColor","textColor","positionStyle","errorMessage","renderExpandableModal","_this3","_this$getThemeProps15","renderExpandable","topBarProps","textInputProps","extractOwnProps","animationType","onRequestClose","TopBar","onCancel","onDone","expandableModalContent","ref","textarea","renderExpandableInput","_this4","_this$getThemeProps16","testID","activeOpacity","onPress","renderTextInput","_this5","_this$getThemeProps17","multiline","rightIconSource","others","_objectWithoutProperties","_excluded","typographyStyle","_excluded2","extractColorValue","hasRightElement","shouldUseMultiline","inputStyle","rightElement","input","maxHeight","isAndroid","isRTL","minHeight","paddingTop","placeholderText","isEditable","underlineColorAndroid","onChange","onFocus","onBlur","renderRightButton","_this$getThemeProps18","iconColor","_excluded3","rightButton","source","resizeMode","rightButtonImage","tintColor","$iconPrimary","renderRightIcon","_this$getThemeProps19","rightIconStyle","render","_this$getThemeProps20","containerStyle","underlineColor","hideUnderline","underlineStateColor","container","collapsable","innerContainer","innerContainerWithoutUnderline","borderColor","accessibilityDummyErrorMessage","row","flex","displayName","propTypes","bool","oneOfType","string","object","number","array","elementType","onToggleExpandableModal","func","shape","defaultProps","validateOnBlur","_ref","rightItemTopPadding","itemTopPadding","create","flexDirection","justifyContent","borderBottomWidth","grey70","paddingBottom","flexGrow","textAlign","backgroundColor","padding","borderWidth","alignItems","paddingHorizontal","marginRight","s1","textAlignVertical","marginBottom","marginTop","height","paddingRight","position","right","alignSelf","bottom"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/textFieldOld/index.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nimport _invoke from \"lodash/invoke\";\nimport _isEmpty from \"lodash/isEmpty\"; // @ts-nocheck\n// TODO: hideUnderline should be true by default\n// TODO: enableErrors should be false by default\n// TODO: enableErrors should derived from errorMessage prop\n// TODO: use forwardRef to allow access to inner TextInput API\n// TODO: add trailing/leading icon props\n// TODO: support margin modifiers\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Animated, TextInput as RNTextInput } from 'react-native';\nimport { TextInputPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport memoize from 'memoize-one';\nimport { Constants } from \"../../commons/new\";\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport BaseInput from \"../baseInput\";\nimport Modal from \"../modal\";\nimport TextArea from \"../textArea\";\nimport View from \"../view\";\nimport Image from \"../image\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nconst COLOR_BY_STATE = {\n  default: Colors.grey10,\n  focus: Colors.grey10,\n  error: Colors.grey10,\n  disabled: Colors.grey50\n};\nconst UNDERLINE_COLOR_BY_STATE = {\n  default: Colors.grey50,\n  focus: Colors.$outlinePrimary,\n  error: Colors.red30\n};\nconst PLACEHOLDER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  focus: Colors.$textPrimary\n};\nconst CHAR_COUNTER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  error: Colors.red30\n};\nconst LABEL_TYPOGRAPHY = Typography.text80;\nconst ICON_SIZE = 24;\nconst ICON_LEFT_PADDING = 6;\nconst FLOATING_PLACEHOLDER_SCALE = 0.875;\n\n/**\n * @description: A wrapper for TextInput component with extra functionality like floating placeholder and validations (This is an uncontrolled component)\n * @modifiers: Typography\n * @extends: TextInput\n * @extendsLink: https://reactnative.dev/docs/textinput\n * @gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/BasicTextFieldScreen.js\n */\nexport default class TextField extends BaseInput {\n  static displayName = 'TextFieldOld';\n  static propTypes = {\n    ...TextInputPropTypes,\n    ...BaseInput.propTypes,\n    /**\n     * should placeholder have floating behavior\n     */\n    floatingPlaceholder: PropTypes.bool,\n    /**\n     * floating placeholder color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    floatingPlaceholderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * Custom style for floating placeholder\n     */\n    floatingPlaceholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * This text will appear as a placeholder when the textInput becomes focused, only when passing floatingPlaceholder\n     * as well (NOT for expandable textInputs)\n     */\n    helperText: PropTypes.string,\n    /**\n     * hide text input underline, by default false\n     */\n    hideUnderline: PropTypes.bool,\n    /**\n     * underline color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    underlineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * the color of all text when the input is disabled (if undefined will not apply color)\n     */\n    disabledColor: PropTypes.string,\n    /**\n     * should text input be align to center\n     */\n    centered: PropTypes.bool,\n    /**\n     * input error message, should be empty if no error exists\n     */\n    error: PropTypes.string,\n    /**\n     * should the input component support error messages\n     */\n    enableErrors: PropTypes.bool,\n    /**\n     * input error message's text color\n     */\n    errorColor: PropTypes.string,\n    /**\n     * should the input expand to another text area modal\n     */\n    expandable: PropTypes.bool,\n    /**\n     * Render custom expandable input (requires expandable to be true)\n     */\n    renderExpandableInput: PropTypes.elementType,\n    /**\n     * allow custom rendering of expandable content when clicking on the input (useful for pickers)\n     * accept props and state as params, ex. (props, state) => {...}\n     * use toggleExpandableModal(false) method to toggle off the expandable content\n     */\n    renderExpandable: PropTypes.elementType,\n    /**\n     * Callback for the modal toggle. Pass with renderExpandable to control the modal toggle\n     */\n    onToggleExpandableModal: PropTypes.func,\n    /**\n     * The picker modal top bar props\n     */\n    topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n    /**\n     * transform function executed on value and return transformed value\n     */\n    transformer: PropTypes.func,\n    /**\n     * Pass to render a prefix text as part of the input (doesn't work with floatingPlaceholder)\n     */\n    prefix: PropTypes.string,\n    /**\n     * The prefix style\n     */\n    prefixStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Fixed title that will displayed above the input (note: floatingPlaceholder MUST be 'false')\n     */\n    title: PropTypes.string,\n    /**\n     * The title's color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * Additional styles for the title (not including 'color')\n     */\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * should the input display a character counter (only when passing 'maxLength')\n     */\n    showCharacterCounter: PropTypes.bool,\n    /**\n     * should float the placeholder when focused (instead of when typing)\n     */\n    floatOnFocus: PropTypes.bool,\n    /**\n     * should the errors be displayed at the top\n     */\n    useTopErrors: PropTypes.bool,\n    /**\n     * Icon asset source for showing on the right side, appropriate for dropdown icon and such\n     */\n    rightIconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Pass to style the right icon source\n     */\n    rightIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Props for the right button {iconSource, onPress, style}\n     */\n    rightButtonProps: PropTypes.shape({\n      iconSource: ImagePropTypes.source,\n      iconColor: PropTypes.string,\n      onPress: PropTypes.func,\n      style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n      accessibilityLabel: PropTypes.string\n    }),\n    /**\n     * Pass to render a leading icon to the TextInput value. Accepts Image props (doesn't work with floatingPlaceholder)\n     */\n    leadingIcon: PropTypes.shape(ImagePropTypes)\n  };\n  static defaultProps = {\n    enableErrors: true,\n    validateOnBlur: true\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      value: props.value,\n      // for floatingPlaceholder functionality\n      floatingPlaceholderState: new Animated.Value(this.shouldFloatPlaceholder(props.value) ? 1 : 0),\n      showExpandableModal: false,\n      floatingPlaceholderTranslate: 0,\n      charCountColor: CHAR_COUNTER_COLOR_BY_STATE.default\n    };\n    this.generatePropsWarnings(props);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        value: nextProps.value\n      }, () => {\n        this.updateFloatingPlaceholderState();\n        if (nextProps.validateOnChange) {\n          this.validate();\n        }\n      });\n    }\n  }\n  componentDidUpdate(_prevProps, prevState) {\n    if (_isEmpty(prevState.value) !== _isEmpty(this.state.value) || prevState.focused !== this.state.focused) {\n      this.updateFloatingPlaceholderState();\n    }\n  }\n  onPlaceholderLayout = event => {\n    const {\n      width\n    } = event.nativeEvent.layout;\n    const translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    this.setState({\n      floatingPlaceholderTranslate: translate / FLOATING_PLACEHOLDER_SCALE\n    });\n  };\n\n  /** Actions */\n  generatePropsWarnings(props) {\n    if (props.maxLength === 0) {\n      console.warn('Setting maxLength to zero will block typing in this input');\n    }\n    if (props.showCharacterCounter && !props.maxLength) {\n      console.warn('In order to use showCharacterCount please pass \\'maxLength\\' prop');\n    }\n  }\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps(), this.getTopPaddings());\n  }\n  getAccessibilityInfo() {\n    const {\n      floatingPlaceholder,\n      placeholder\n    } = this.getThemeProps();\n    const accessibilityState = this.isDisabled() ? {\n      disabled: true\n    } : undefined;\n    let accessibilityLabel = floatingPlaceholder ? this.props.accessibilityLabel || placeholder : '';\n    if (this.isRequiredField()) {\n      accessibilityLabel = `${accessibilityLabel}. Mandatory`;\n    }\n    return {\n      accessibilityLabel,\n      // on Android accessibilityStates cause issues with expandable input\n      accessibilityState: Constants.isIOS ? accessibilityState : undefined\n    };\n  }\n  toggleExpandableModal = value => {\n    this.setState({\n      showExpandableModal: value\n    });\n    _invoke(this.props, 'onToggleExpandableModal', value);\n  };\n  updateFloatingPlaceholderState = withoutAnimation => {\n    if (withoutAnimation) {\n      this.state.floatingPlaceholderState.setValue(this.shouldFloatPlaceholder() ? 1 : 0);\n    } else {\n      Animated.spring(this.state.floatingPlaceholderState, {\n        toValue: this.shouldFloatPlaceholder() ? 1 : 0,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  getPlaceholderText = memoize((placeholder, helperText) => {\n    // HACK: passing whitespace instead of undefined. Issue fixed in RN56\n    const text = this.shouldFakePlaceholder() ? this.shouldShowHelperText() ? helperText : ' ' : this.shouldShowTopError() && this.shouldShowHelperText() ? helperText : this.getRequiredPlaceholder(placeholder);\n    return text;\n  });\n  getStateColor(colorProp = {}) {\n    const {\n      focused\n    } = this.state;\n    const error = this.getErrorMessage();\n    const {\n      disabledColor\n    } = this.getThemeProps();\n    if (_isString(colorProp)) {\n      return colorProp || Colors.grey10;\n    } else if (_isPlainObject(colorProp)) {\n      const mergedColorState = {\n        ...COLOR_BY_STATE,\n        ...colorProp\n      };\n      if (this.isDisabled()) {\n        return disabledColor || mergedColorState.disabled;\n      } else if (error) {\n        return mergedColorState.error;\n      } else if (focused) {\n        return mergedColorState.focus;\n      } else {\n        return mergedColorState.default;\n      }\n    }\n    return colorProp || Colors.grey10;\n  }\n  getCharCount() {\n    const {\n      value\n    } = this.state;\n    if (value) {\n      return value.length;\n    }\n    return 0;\n  }\n  setCharCountColor(key) {\n    this.maxReached = key === Constants.backspaceKey ? false : this.isCounterLimit();\n    const color = this.state.focused && this.maxReached ? CHAR_COUNTER_COLOR_BY_STATE.error : CHAR_COUNTER_COLOR_BY_STATE.default;\n    if (color !== this.state.charCountColor) {\n      this.setState({\n        charCountColor: color\n      });\n    }\n  }\n  getCharCountColor() {\n    const {\n      charCountColor\n    } = this.state;\n    const {\n      disabledColor\n    } = this.getThemeProps();\n    return this.isDisabled() && disabledColor ? disabledColor : charCountColor;\n  }\n  getTopPaddings() {\n    return this.shouldFakePlaceholder() ? this.shouldShowTopError() ? undefined : 25 : undefined;\n  }\n  getTopErrorsPosition() {\n    return !this.props.title && this.shouldShowTopError() ? {\n      top: Constants.isIOS ? -25 : -27\n    } : undefined;\n  }\n  isDisabled() {\n    return this.props.editable === false;\n  }\n  isCounterLimit() {\n    const {\n      maxLength\n    } = this.getThemeProps();\n    const counter = this.getCharCount();\n    return counter === 0 ? false : maxLength <= counter;\n  }\n  hasText(value) {\n    return !_isEmpty(value || this.state.value);\n  }\n  shouldShowHelperText() {\n    const {\n      focused\n    } = this.state;\n    const {\n      helperText\n    } = this.props;\n    return focused && helperText;\n  }\n  shouldFloatOnFocus() {\n    const {\n      focused\n    } = this.state;\n    const {\n      floatOnFocus\n    } = this.getThemeProps();\n    return focused && floatOnFocus;\n  }\n  shouldFloatPlaceholder(text) {\n    return this.hasText(text) || this.shouldShowHelperText() || this.shouldFloatOnFocus();\n  }\n  shouldFakePlaceholder() {\n    const {\n      floatingPlaceholder,\n      centered,\n      leadingIcon,\n      prefix\n    } = this.getThemeProps();\n    return !leadingIcon && !prefix && Boolean(floatingPlaceholder && !centered && !this.shouldShowTopError());\n  }\n  shouldShowError() {\n    const {\n      enableErrors\n    } = this.getThemeProps();\n    const error = this.getErrorMessage();\n    return enableErrors && error;\n  }\n  getErrorMessage() {\n    return this.props?.error || this.state?.error;\n  }\n  shouldShowTopError() {\n    const {\n      useTopErrors\n    } = this.getThemeProps();\n    return this.shouldShowError() && useTopErrors;\n  }\n  shouldDisplayRightButton() {\n    const {\n      rightButtonProps,\n      expandable\n    } = this.getThemeProps();\n    return !expandable && rightButtonProps && rightButtonProps.iconSource;\n  }\n  shouldRenderTitle() {\n    const {\n      floatingPlaceholder,\n      title\n    } = this.getThemeProps();\n    return !floatingPlaceholder && title;\n  }\n  onPressRightButton = () => {\n    _invoke(this.props, 'rightButtonProps.onPress');\n  };\n\n  /** Renders */\n  renderPlaceholder() {\n    const {\n      floatingPlaceholderState,\n      floatingPlaceholderTranslate\n    } = this.state;\n    const {\n      placeholder,\n      placeholderTextColor,\n      floatingPlaceholderColor,\n      floatingPlaceholderStyle\n    } = this.getThemeProps();\n    const typography = this.getTypography();\n    const placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n    if (this.shouldFakePlaceholder()) {\n      return <View absF left>\n          <Animated.Text pointerEvents=\"none\" numberOfLines={1} suppressHighlighting accessible={false} onLayout={this.onPlaceholderLayout} style={[this.styles.placeholder, this.getTopErrorsPosition(), typography,\n        // TODO: we need to exclude completely any dependency on line height\n        // in this component since it always breaks alignments\n        {\n          lineHeight: undefined\n        }, {\n          transform: [{\n            scale: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, FLOATING_PLACEHOLDER_SCALE]\n            })\n          }, {\n            translateY: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [25, 0]\n            })\n          }, {\n            translateX: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, -floatingPlaceholderTranslate]\n            })\n          }],\n          color: this.shouldFloatPlaceholder() ? this.getStateColor(floatingPlaceholderColor || PLACEHOLDER_COLOR_BY_STATE) : placeholderColor\n        }, floatingPlaceholderStyle]}>\n            {this.getRequiredPlaceholder(placeholder)}\n          </Animated.Text>\n        </View>;\n    }\n  }\n  renderPrefix() {\n    const {\n      prefix,\n      prefixStyle\n    } = this.props;\n    if (prefix) {\n      const typography = this.getTypography();\n      return <Text style={[this.styles.prefix, typography, {\n        lineHeight: undefined\n      }, prefixStyle]}>{prefix}</Text>;\n    }\n  }\n  renderTitle() {\n    const {\n      title,\n      titleColor,\n      titleStyle\n    } = this.getThemeProps();\n    const color = this.getStateColor(titleColor || PLACEHOLDER_COLOR_BY_STATE);\n    if (this.shouldRenderTitle()) {\n      return <Text style={[{\n        color\n      }, this.styles.topLabel, this.styles.label, titleStyle]}>{title}</Text>;\n    }\n  }\n  renderCharCounter() {\n    const {\n      maxLength,\n      showCharacterCounter\n    } = this.getThemeProps();\n    if (maxLength && showCharacterCounter) {\n      const counter = this.getCharCount();\n      const color = this.getCharCountColor();\n      return <Text style={[{\n        color\n      }, this.styles.bottomLabel, this.styles.label]} accessibilityLabel={`${counter} out of ${maxLength} max characters`}>\n          {counter} / {maxLength}\n        </Text>;\n    }\n  }\n  renderError(visible) {\n    const {\n      enableErrors,\n      useTopErrors,\n      errorColor\n    } = this.getThemeProps();\n    const textColor = errorColor ? {\n      color: errorColor\n    } : undefined;\n    const positionStyle = useTopErrors ? this.styles.topLabel : this.styles.bottomLabel;\n    const error = this.getErrorMessage();\n    if (visible && enableErrors) {\n      return <Text style={[this.styles.errorMessage, this.styles.label, positionStyle, textColor]} accessible={!_isEmpty(error) && !useTopErrors}>\n          {error}\n        </Text>;\n    }\n  }\n  renderExpandableModal() {\n    const {\n      renderExpandable,\n      topBarProps\n    } = this.getThemeProps();\n    const {\n      showExpandableModal\n    } = this.state;\n    if (_isFunction(renderExpandable) && showExpandableModal) {\n      return renderExpandable(this.getThemeProps(), this.state);\n    }\n    const textInputProps = TextField.extractOwnProps(this.props, ['error', 'testID']);\n    return <Modal animationType={'slide'} visible={showExpandableModal} onRequestClose={() => this.toggleExpandableModal(false)}>\n        <Modal.TopBar {...topBarProps} onCancel={() => this.toggleExpandableModal(false)} onDone={this.onDoneEditingExpandableInput} />\n        <View style={this.styles.expandableModalContent}>\n          <TextArea ref={textarea => {\n          this.expandableInput = textarea;\n        }} {...textInputProps} value={this.state.value} />\n        </View>\n      </Modal>;\n  }\n  renderExpandableInput() {\n    const {\n      renderExpandableInput,\n      testID\n    } = this.getThemeProps();\n    if (_isFunction(renderExpandableInput)) {\n      return renderExpandableInput(this.getThemeProps(), this.toggleExpandableModal);\n    }\n    return <TouchableOpacity style={this.styles.expandableInput} activeOpacity={1} onPress={() => !this.isDisabled() && this.toggleExpandableModal(true)} testID={`${testID}.expandable`}\n    // {...this.extractAccessibilityProps()}\n    {...this.getAccessibilityInfo()}>\n        {this.renderTextInput()}\n      </TouchableOpacity>;\n  }\n  renderTextInput() {\n    const {\n      value\n    } = this.state; // value set on state for floatingPlaceholder functionality\n    const {\n      style,\n      placeholderTextColor,\n      multiline,\n      // hideUnderline,\n      numberOfLines,\n      expandable,\n      rightIconSource,\n      color,\n      placeholder,\n      helperText,\n      ...others\n    } = this.getThemeProps();\n    const typography = this.getTypography();\n    const {\n      lineHeight,\n      ...typographyStyle\n    } = typography;\n    const textColor = this.getStateColor(color || this.extractColorValue());\n    const hasRightElement = this.shouldDisplayRightButton() || rightIconSource;\n    const shouldUseMultiline = multiline /*  || expandable */;\n    const inputStyle = [hasRightElement && this.styles.rightElement, this.styles.input,\n    // hideUnderline && this.styles.inputWithoutUnderline,\n    {\n      ...typographyStyle\n    },\n    // Constants.isAndroid && {lineHeight},\n    expandable && {\n      maxHeight: lineHeight * (Constants.isAndroid ? 3 : 3.3)\n    }, Constants.isRTL && {\n      minHeight: lineHeight + 3\n    }, Constants.isIOS && shouldUseMultiline && {\n      paddingTop: 0\n    },\n    // fix for iOS topPadding in multiline TextInput\n    {\n      color: textColor\n    }, style];\n    const placeholderText = this.getPlaceholderText(placeholder, helperText);\n    const placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n    const isEditable = !this.isDisabled() && !expandable;\n    return <RNTextInput {...this.getAccessibilityInfo()} pointerEvents={expandable ? 'none' : undefined} {...others} value={value} placeholder={placeholderText} placeholderTextColor={placeholderColor} underlineColorAndroid=\"transparent\" style={inputStyle} multiline={shouldUseMultiline} numberOfLines={numberOfLines} onKeyPress={this.onKeyPress} onChangeText={this.onChangeText} onChange={this.onChange} onFocus={this.onFocus} onBlur={this.onBlur} ref={input => {\n      this.input = input;\n    }} editable={isEditable} />;\n  }\n  renderRightButton() {\n    if (this.shouldDisplayRightButton()) {\n      const {\n        rightButtonProps\n      } = this.getThemeProps();\n      const {\n        style,\n        iconSource,\n        iconColor,\n        accessibilityLabel,\n        ...others\n      } = rightButtonProps;\n      return <TouchableOpacity {...others} accessibilityLabel={accessibilityLabel} style={[this.styles.rightButton, this.getTopErrorsPosition(), style]} onPress={this.onPressRightButton}>\n          <Image pointerEvents=\"none\" source={iconSource} resizeMode={'contain'} style={[this.styles.rightButtonImage, {\n          tintColor: iconColor || Colors.$iconPrimary\n        }]} />\n        </TouchableOpacity>;\n    }\n  }\n  renderRightIcon() {\n    const {\n      rightIconSource,\n      rightIconStyle\n    } = this.getThemeProps();\n    if (rightIconSource) {\n      return <View style={[this.styles.rightButton, this.getTopErrorsPosition()]} pointerEvents=\"none\">\n          <Image source={rightIconSource} resizeMode={'center'} style={[this.styles.rightButtonImage, rightIconStyle]} />\n        </View>;\n    }\n  }\n  render() {\n    const {\n      expandable,\n      containerStyle,\n      underlineColor,\n      useTopErrors,\n      hideUnderline,\n      leadingIcon\n    } = this.getThemeProps();\n    const underlineStateColor = this.getStateColor(underlineColor || UNDERLINE_COLOR_BY_STATE);\n    return <View style={[this.styles.container, containerStyle]} collapsable={false}>\n        {this.shouldShowTopError() ? this.renderError(useTopErrors) : this.renderTitle()}\n\n        <View style={[this.styles.innerContainer, hideUnderline && this.styles.innerContainerWithoutUnderline, {\n        borderColor: underlineStateColor\n      }, {\n        paddingTop: this.getTopPaddings()\n      }]}>\n          {leadingIcon && <Image {...leadingIcon} style={[this.styles.leadingIcon, leadingIcon.style]} />}\n          {this.renderPrefix()}\n          {this.renderPlaceholder()}\n          {expandable ? this.renderExpandableInput() : this.renderTextInput()}\n          {this.renderRightButton()}\n          {this.renderRightIcon()}\n          {expandable && this.renderExpandableModal()}\n        </View>\n\n        {!_isUndefined(this.getErrorMessage()) && useTopErrors && <View style={this.styles.accessibilityDummyErrorMessage} accessible accessibilityLabel={this.getErrorMessage()} />}\n\n        <View row>\n          <View flex>{this.renderError(!useTopErrors)}</View>\n          {this.renderCharCounter()}\n        </View>\n      </View>;\n  }\n\n  /** Events */\n  onDoneEditingExpandableInput = () => {\n    const expandableInputValue = _get(this.expandableInput, 'state.value');\n    this.setState({\n      value: expandableInputValue\n    });\n    this.state.floatingPlaceholderState.setValue(expandableInputValue ? 1 : 0);\n    _invoke(this.props, 'onChangeText', expandableInputValue);\n    this.toggleExpandableModal(false);\n  };\n  onKeyPress = event => {\n    this.lastKey = event.nativeEvent.key;\n    this.setCharCountColor(this.lastKey);\n    _invoke(this.props, 'onKeyPress', event);\n  };\n  onChangeText = text => {\n    // when character count exceeds maxLength text will be empty string.\n    // HACK: To avoid setting state value to '' we check the source of that deletion\n    if (text === '' && this.lastKey && this.lastKey !== Constants.backspaceKey) {\n      return;\n    }\n    const {\n      transformer,\n      validateOnChange\n    } = this.props;\n    let transformedText = text;\n    if (_isFunction(transformer)) {\n      transformedText = transformer(text);\n    }\n    _invoke(this.props, 'onChangeText', transformedText);\n    this.setState({\n      value: transformedText\n    }, () => {\n      if (validateOnChange) {\n        setImmediate(this.validate);\n      }\n    });\n  };\n}\nfunction createStyles({\n  centered,\n  multiline\n}, rightItemTopPadding = 0) {\n  const itemTopPadding = Constants.isIOS ? rightItemTopPadding - 3 : rightItemTopPadding - 1;\n  return StyleSheet.create({\n    container: {},\n    innerContainer: {\n      // flexGrow: 1, // create bugs with lineHeight\n      flexDirection: 'row',\n      justifyContent: centered ? 'center' : undefined,\n      borderBottomWidth: 1,\n      borderColor: Colors.grey70,\n      paddingBottom: Constants.isIOS ? 10 : 5\n    },\n    innerContainerWithoutUnderline: {\n      borderBottomWidth: 0,\n      paddingBottom: 0\n    },\n    input: {\n      flexGrow: 1,\n      textAlign: centered ? 'center' : Constants.isRTL ? 'right' : 'left',\n      backgroundColor: 'transparent',\n      // marginBottom: Constants.isIOS ? 10 : 5,\n      padding: 0,\n      // for Android\n      // textAlignVertical: 'top', // for Android\n      borderColor: 'transparent',\n      // borderColor & borderWidth is a fix for collapsing issue on Android\n      borderWidth: Constants.isAndroid ? 1 : undefined // for Android\n    },\n    expandableInput: {\n      flexGrow: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    // inputWithoutUnderline: {\n    //   marginBottom: undefined\n    // },\n    expandableModalContent: {\n      flex: 1,\n      paddingTop: 15,\n      paddingHorizontal: 20\n    },\n    prefix: {\n      color: Colors.grey30,\n      marginRight: Spacings.s1,\n      textAlignVertical: 'center'\n    },\n    placeholder: {\n      textAlign: 'left'\n    },\n    errorMessage: {\n      color: Colors.red30,\n      textAlign: centered ? 'center' : 'left'\n    },\n    topLabel: {\n      marginBottom: Constants.isIOS ? multiline ? 1 : 5 : 7\n    },\n    bottomLabel: {\n      marginTop: 9\n    },\n    label: {\n      ...LABEL_TYPOGRAPHY,\n      height: LABEL_TYPOGRAPHY.lineHeight\n    },\n    rightElement: {\n      paddingRight: ICON_SIZE + ICON_LEFT_PADDING\n    },\n    rightButton: {\n      position: 'absolute',\n      right: 0,\n      alignSelf: 'flex-start',\n      paddingTop: itemTopPadding\n    },\n    rightButtonImage: {\n      width: ICON_SIZE,\n      height: ICON_SIZE\n    },\n    leadingIcon: {\n      alignSelf: 'center'\n    },\n    accessibilityDummyErrorMessage: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: 1,\n      height: 1\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}