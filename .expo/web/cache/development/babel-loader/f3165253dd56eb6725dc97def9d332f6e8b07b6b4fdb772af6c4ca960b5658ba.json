{"ast":null,"code":"import React, { useContext } from 'react';\nimport View from \"../../components/view\";\nimport Text from \"../../components/text\";\nimport { getWeekDayNames } from \"./helpers/DateUtils\";\nimport CalendarContext from \"./CalendarContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WeekDaysNames = function WeekDaysNames(props) {\n  var containerStyle = props.containerStyle,\n    textStyle = props.textStyle,\n    format = props.format;\n  var _useContext = useContext(CalendarContext),\n    firstDayOfWeek = _useContext.firstDayOfWeek;\n  var dayNames = getWeekDayNames(firstDayOfWeek, format);\n  var renderWeekDaysNames = function renderWeekDaysNames() {\n    return dayNames.map(function (name, index) {\n      return _jsx(Text, {\n        $textNeutral: true,\n        style: textStyle,\n        numberOfLines: 1,\n        allowFontScaling: false,\n        accessibilityLabel: name,\n        children: name\n      }, index);\n    });\n  };\n  return _jsx(View, {\n    row: true,\n    spread: true,\n    style: containerStyle,\n    children: renderWeekDaysNames()\n  });\n};\nexport default WeekDaysNames;","map":{"version":3,"names":["React","useContext","View","Text","getWeekDayNames","CalendarContext","jsx","_jsx","WeekDaysNames","props","containerStyle","textStyle","format","_useContext","firstDayOfWeek","dayNames","renderWeekDaysNames","map","name","index","$textNeutral","style","numberOfLines","allowFontScaling","accessibilityLabel","children","row","spread"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/incubator/Calendar/WeekDaysNames.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport View from \"../../components/view\";\nimport Text from \"../../components/text\";\nimport { getWeekDayNames } from \"./helpers/DateUtils\";\nimport CalendarContext from \"./CalendarContext\";\nconst WeekDaysNames = props => {\n  //TODO: memoize\n  const {\n    containerStyle,\n    textStyle,\n    format\n  } = props;\n  const {\n    firstDayOfWeek\n  } = useContext(CalendarContext);\n  const dayNames = getWeekDayNames(firstDayOfWeek, format);\n  const renderWeekDaysNames = () => {\n    return dayNames.map((name, index) => <Text key={index} $textNeutral style={textStyle} numberOfLines={1} allowFontScaling={false} accessibilityLabel={name}>\n        {name}\n      </Text>);\n  };\n  return <View row spread style={containerStyle}>\n      {renderWeekDaysNames()}\n    </View>;\n};\nexport default WeekDaysNames;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,SAASC,eAAe;AACxB,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAChD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAGC,KAAK,EAAI;EAE7B,IACEC,cAAc,GAGZD,KAAK,CAHPC,cAAc;IACdC,SAAS,GAEPF,KAAK,CAFPE,SAAS;IACTC,MAAM,GACJH,KAAK,CADPG,MAAM;EAER,IAAAC,WAAA,GAEIZ,UAAU,CAACI,eAAe,CAAC;IAD7BS,cAAc,GAAAD,WAAA,CAAdC,cAAc;EAEhB,IAAMC,QAAQ,GAAGX,eAAe,CAACU,cAAc,EAAEF,MAAM,CAAC;EACxD,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC,OAAOD,QAAQ,CAACE,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OAAKZ,IAAA,CAACJ,IAAI;QAAaiB,YAAY;QAACC,KAAK,EAAEV,SAAU;QAACW,aAAa,EAAE,CAAE;QAACC,gBAAgB,EAAE,KAAM;QAACC,kBAAkB,EAAEN,IAAK;QAAAO,QAAA,EACrJP;MAAI,GADuCC,KAExC,CAAC;IAAA,EAAC;EACZ,CAAC;EACD,OAAOZ,IAAA,CAACL,IAAI;IAACwB,GAAG;IAACC,MAAM;IAACN,KAAK,EAAEX,cAAe;IAAAe,QAAA,EACzCT,mBAAmB,CAAC;EAAC,CAClB,CAAC;AACX,CAAC;AACD,eAAeR,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}