{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport IncubatorSlider from \"../../incubator/Slider\";\nimport View from \"../view\";\nimport Thumb from \"./Thumb\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TRACK_SIZE = 6;\nvar THUMB_SIZE = 24;\nvar SHADOW_RADIUS = 4;\nvar DEFAULT_COLOR = Colors.$backgroundDisabled;\nvar ACTIVE_COLOR = Colors.$backgroundPrimaryHeavy;\nvar INACTIVE_COLOR = Colors.$backgroundNeutralMedium;\nvar MIN_RANGE_GAP = 4;\nvar defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  thumbHitSlop: {\n    top: 10,\n    bottom: 10,\n    left: 24,\n    right: 24\n  },\n  useGap: true\n};\nvar Slider = function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n  function Slider(props) {\n    var _this;\n    _classCallCheck(this, Slider);\n    _this = _callSuper(this, Slider, [props]);\n    _this.thumb = React.createRef();\n    _this.minThumb = React.createRef();\n    _this.minTrack = React.createRef();\n    _this._minTrackStyles = {};\n    _this._x = 0;\n    _this._x_min = 0;\n    _this.lastDx = 0;\n    _this.initialValue = _this.getRoundedValue(_this.getInitialValue());\n    _this.minInitialValue = _this.getRoundedValue(_this.props.initialMinimumValue || _this.props.minimumValue);\n    _this.lastValue = _this.initialValue;\n    _this.lastMinValue = _this.minInitialValue;\n    _this._thumbStyles = {};\n    _this._minThumbStyles = {\n      left: _this.minInitialValue\n    };\n    _this.initialThumbSize = {\n      width: THUMB_SIZE,\n      height: THUMB_SIZE\n    };\n    _this.handleMoveShouldSetPanResponder = function () {\n      return true;\n    };\n    _this.handlePanResponderGrant = function () {\n      _this.lastDx = 0;\n      _this.onSeekStart();\n    };\n    _this.handlePanResponderMove = function (_e, gestureState) {\n      var disabled = _this.props.disabled;\n      if (disabled) {\n        return;\n      }\n      var dx = gestureState.dx * (Constants.isRTL && !_this.disableRTL ? -1 : 1);\n      _this.update(dx - _this.lastDx);\n      _this.lastDx = dx;\n    };\n    _this.handlePanResponderEnd = function () {\n      _this.bounceToStep();\n      _this.onSeekEnd();\n    };\n    _this.setActiveThumb = function (ref) {\n      _this.activeThumbRef = ref;\n    };\n    _this.updateTrackStepAndStyle = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var _this$props = _this.props,\n        step = _this$props.step,\n        useRange = _this$props.useRange;\n      var trackSize = _this.state.trackSize;\n      var newX = Constants.isRTL && !_this.disableRTL ? trackSize.width - nativeEvent.locationX : nativeEvent.locationX;\n      if (useRange) {\n        var _this$_minThumbStyles, _this$_minThumbStyles2;\n        if (_this.isDefaultThumbActive() && (_this$_minThumbStyles = _this._minThumbStyles) != null && _this$_minThumbStyles.left && newX < ((_this$_minThumbStyles2 = _this._minThumbStyles) == null ? void 0 : _this$_minThumbStyles2.left)) {\n          _this.setActiveThumb(_this.minThumb);\n        } else if (!_this.isDefaultThumbActive() && _this._thumbStyles.left && newX > _this._thumbStyles.left) {\n          _this.setActiveThumb(_this.thumb);\n        }\n      }\n      _this.set_x(newX);\n      if (!useRange) {\n        _this.updateValue(_this.get_x());\n      }\n      if (step > 0) {\n        _this.bounceToStep();\n      } else {\n        _this.moveTo(_this.get_x());\n      }\n    };\n    _this.shouldForceLTR = Constants.isRTL && _this.disableRTL;\n    _this.isDefaultThumbActive = function () {\n      return _this.activeThumbRef === _this.thumb;\n    };\n    _this.onOrientationChanged = function () {\n      _this.initialValue = _this.lastValue;\n      _this.minInitialValue = _this.lastMinValue;\n      _this.setState({\n        measureCompleted: false\n      });\n    };\n    _this.onRangeChange = function (value) {\n      if (_this.isDefaultThumbActive()) {\n        _this.lastValue = value;\n      } else {\n        _this.lastMinValue = value;\n      }\n      var values = {\n        min: _this.lastMinValue,\n        max: _this.lastValue\n      };\n      if (Constants.isRTL && _this.props.disableRTL) {\n        var maximumValue = _this.props.maximumValue;\n        values = {\n          min: maximumValue - _this.lastValue,\n          max: maximumValue - _this.lastMinValue\n        };\n      }\n      _this.props.onRangeChange == null ? void 0 : _this.props.onRangeChange(values);\n    };\n    _this.onValueChange = function (value) {\n      _this.lastValue = value;\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value);\n    };\n    _this.onContainerLayout = function (nativeEvent) {\n      _this.handleMeasure('containerSize', nativeEvent);\n    };\n    _this.onTrackLayout = function (nativeEvent) {\n      _this.setState({\n        measureCompleted: false\n      });\n      _this.handleMeasure('trackSize', nativeEvent);\n    };\n    _this.onThumbLayout = function (nativeEvent) {\n      _this.handleMeasure('thumbSize', nativeEvent);\n    };\n    _this.handleTrackPress = function (event) {\n      if (_this.props.disabled) {\n        return;\n      }\n      _this.onSeekStart();\n      _this.updateTrackStepAndStyle(event);\n      _this.onSeekEnd();\n    };\n    _this.handleMeasure = function (name, _ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var _nativeEvent$layout = nativeEvent.layout,\n        width = _nativeEvent$layout.width,\n        height = _nativeEvent$layout.height;\n      var size = {\n        width: width,\n        height: height\n      };\n      var currentSize = _this[name];\n      if (currentSize && width === currentSize.width && height === currentSize.height) {\n        return;\n      }\n      _this[name] = size;\n      if (_this.containerSize && _this.thumbSize && _this.trackSize) {\n        _this.setState({\n          containerSize: _this.containerSize,\n          trackSize: _this.trackSize,\n          thumbSize: _this.thumbSize\n        }, function () {\n          _this.setState({\n            measureCompleted: true\n          });\n        });\n      }\n    };\n    _this.onAccessibilityAction = function (event) {\n      var _this$props2 = _this.props,\n        maximumValue = _this$props2.maximumValue,\n        minimumValue = _this$props2.minimumValue,\n        step = _this$props2.step;\n      var value = _this.getValueForX(_this._x);\n      var newValue;\n      switch (event.nativeEvent.actionName) {\n        case 'increment':\n          newValue = value !== maximumValue ? value + step : value;\n          break;\n        case 'decrement':\n          newValue = value !== minimumValue ? value - step : value;\n          break;\n        default:\n          newValue = value;\n          break;\n      }\n      _this._x = _this.getXForValue(newValue);\n      _this.updateValue(_this._x);\n      _this.moveTo(_this._x);\n      AccessibilityInfo.announceForAccessibility == null ? void 0 : AccessibilityInfo.announceForAccessibility(`New value ${newValue}`);\n    };\n    _this.onMinTouchStart = function () {\n      _this.setActiveThumb(_this.minThumb);\n    };\n    _this.onTouchStart = function () {\n      _this.setActiveThumb(_this.thumb);\n    };\n    _this.getThumbProps = function () {\n      var _this$props3 = _this.props,\n        thumbStyle = _this$props3.thumbStyle,\n        activeThumbStyle = _this$props3.activeThumbStyle,\n        disableActiveStyling = _this$props3.disableActiveStyling,\n        disabled = _this$props3.disabled,\n        thumbTintColor = _this$props3.thumbTintColor,\n        thumbHitSlop = _this$props3.thumbHitSlop;\n      return {\n        disabled: disabled,\n        thumbTintColor: thumbTintColor,\n        thumbStyle: thumbStyle,\n        activeThumbStyle: activeThumbStyle,\n        disableActiveStyling: disableActiveStyling,\n        thumbHitSlop: thumbHitSlop,\n        onLayout: _this.onThumbLayout\n      };\n    };\n    _this.renderMinThumb = function () {\n      return _jsx(Thumb, _objectSpread(_objectSpread({}, _this.getThumbProps()), {}, {\n        ref: _this.minThumb,\n        onTouchStart: _this.onMinTouchStart\n      }, _this.panResponder.panHandlers));\n    };\n    _this.renderThumb = function () {\n      return _jsx(Thumb, _objectSpread(_objectSpread({}, _this.getThumbProps()), {}, {\n        ref: _this.thumb,\n        onTouchStart: _this.onTouchStart\n      }, _this.panResponder.panHandlers));\n    };\n    _this.activeThumbRef = _this.thumb;\n    _this.didMount = false;\n    _this.state = {\n      containerSize: {\n        width: 0,\n        height: 0\n      },\n      trackSize: {\n        width: 0,\n        height: 0\n      },\n      thumbSize: {\n        width: 0,\n        height: 0\n      },\n      thumbActiveAnimation: new Animated.Value(1),\n      measureCompleted: false\n    };\n    _this.checkProps(props);\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: _this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: _this.handlePanResponderGrant,\n      onPanResponderMove: _this.handlePanResponderMove,\n      onPanResponderRelease: _this.handlePanResponderEnd,\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderEnd: function onPanResponderEnd() {\n        return true;\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n        return false;\n      }\n    });\n    return _this;\n  }\n  _createClass(Slider, [{\n    key: \"reset\",\n    value: function reset() {\n      var _this$props$onReset, _this$props4;\n      this.lastValue = this.initialValue;\n      this.lastMinValue = this.minInitialValue;\n      this.lastDx = 0;\n      this.setActiveThumb(this.thumb);\n      this.set_x(this.getXForValue(this.initialValue));\n      this.moveTo(this._x);\n      if (this.props.useRange) {\n        this.setActiveThumb(this.minThumb);\n        this.set_x(this.getXForValue(this.minInitialValue));\n        this.moveMinTo(this._x_min);\n      }\n      (_this$props$onReset = (_this$props4 = this.props).onReset) == null ? void 0 : _this$props$onReset.call(_this$props4);\n    }\n  }, {\n    key: \"getInitialValue\",\n    value: function getInitialValue() {\n      var _this$props5 = this.props,\n        useRange = _this$props5.useRange,\n        initialMaximumValue = _this$props5.initialMaximumValue,\n        value = _this$props5.value,\n        maximumValue = _this$props5.maximumValue;\n      return useRange ? initialMaximumValue || maximumValue : value;\n    }\n  }, {\n    key: \"checkProps\",\n    value: function checkProps(props) {\n      var useRange = props.useRange,\n        minimumValue = props.minimumValue,\n        maximumValue = props.maximumValue,\n        value = props.value;\n      if (minimumValue >= maximumValue) {\n        console.warn('Slider minimumValue must be lower than maximumValue');\n      }\n      if (!useRange && (value < minimumValue || value > maximumValue)) {\n        console.warn('Slider value is not in range');\n      }\n    }\n  }, {\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var disabled = this.props.disabled;\n      return _objectSpread({\n        accessibilityLabel: 'Slider',\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityState: disabled ? {\n          disabled: disabled\n        } : undefined,\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }]\n      }, extractAccessibilityProps(this.props));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props6 = this.props,\n        useRange = _this$props6.useRange,\n        value = _this$props6.value,\n        initialMinimumValue = _this$props6.initialMinimumValue;\n      if (!useRange && prevProps.value !== value) {\n        this.initialValue = this.getRoundedValue(value);\n        this._x = this.getXForValue(this.initialValue);\n        this.moveTo(this._x);\n      }\n      if (prevState.measureCompleted !== this.state.measureCompleted) {\n        this.initialThumbSize = this.state.thumbSize;\n        this._x = this.getXForValue(this.initialValue);\n        this._x_min = this.getXForValue(this.minInitialValue);\n        this.moveTo(this._x);\n        if (useRange && initialMinimumValue) {\n          this.moveMinTo(this._x_min);\n        }\n        this.didMount = true;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n    }\n  }, {\n    key: \"get_x\",\n    value: function get_x() {\n      if (this.isDefaultThumbActive()) {\n        return this._x;\n      } else {\n        return this._x_min;\n      }\n    }\n  }, {\n    key: \"set_x\",\n    value: function set_x(x) {\n      if (this.isDefaultThumbActive()) {\n        this._x = x;\n      } else {\n        this._x_min = x;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dx) {\n      var x = this.get_x();\n      x += dx;\n      x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n      this.set_x(x);\n      this.moveTo(x);\n      if (!this.props.useRange) {\n        this.updateValue(x);\n      }\n    }\n  }, {\n    key: \"bounceToStep\",\n    value: function bounceToStep() {\n      if (this.props.step > 0) {\n        var value = this.getValueForX(this.get_x());\n        var roundedValue = this.getRoundedValue(value);\n        var x = this.getXForValue(roundedValue);\n        this.set_x(x);\n        this.moveTo(x);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(x) {\n      var value = this.getValueForX(x);\n      if (this.props.useRange) {\n        this.onRangeChange(value);\n      } else {\n        this.onValueChange(value);\n      }\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x) {\n      if (this.isDefaultThumbActive()) {\n        if (this.thumb.current) {\n          var _this$thumb$current, _this$minTrack$curren;\n          var _this$props7 = this.props,\n            useRange = _this$props7.useRange,\n            useGap = _this$props7.useGap;\n          var _this$state = this.state,\n            trackSize = _this$state.trackSize,\n            thumbSize = _this$state.thumbSize;\n          var nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n          var _x = this.shouldForceLTR ? trackSize.width - x : x;\n          var left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width;\n          if (useRange) {\n            var _this$_minThumbStyles3;\n            var minThumbPosition = (_this$_minThumbStyles3 = this._minThumbStyles) == null ? void 0 : _this$_minThumbStyles3.left;\n            if (useGap && left > minThumbPosition + thumbSize.width + MIN_RANGE_GAP || !useGap && left >= minThumbPosition) {\n              this._thumbStyles.left = left;\n              var width = left - minThumbPosition;\n              this._minTrackStyles.width = width;\n              if (this.didMount) {\n                this.updateValue(x);\n              }\n            }\n          } else {\n            this._thumbStyles.left = left;\n            this._minTrackStyles.width = Math.min(trackSize.width, x);\n          }\n          (_this$thumb$current = this.thumb.current) == null ? void 0 : _this$thumb$current.setNativeProps == null ? void 0 : _this$thumb$current.setNativeProps(this._thumbStyles);\n          (_this$minTrack$curren = this.minTrack.current) == null ? void 0 : _this$minTrack$curren.setNativeProps == null ? void 0 : _this$minTrack$curren.setNativeProps(this._minTrackStyles);\n        }\n      } else {\n        this.moveMinTo(x);\n      }\n    }\n  }, {\n    key: \"moveMinTo\",\n    value: function moveMinTo(x) {\n      var useGap = this.props.useGap;\n      var _this$state2 = this.state,\n        trackSize = _this$state2.trackSize,\n        thumbSize = _this$state2.thumbSize;\n      if (this.minThumb.current) {\n        var _this$_thumbStyles;\n        var nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n        var _x = this.shouldForceLTR ? nonOverlappingTrackWidth - x : x;\n        var left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width;\n        var maxThumbPosition = (_this$_thumbStyles = this._thumbStyles) == null ? void 0 : _this$_thumbStyles.left;\n        if (useGap && left < maxThumbPosition - thumbSize.width - MIN_RANGE_GAP || !useGap && left <= maxThumbPosition) {\n          var _this$minThumb$curren, _this$minTrack$curren2;\n          this._minThumbStyles.left = left;\n          this._minTrackStyles.width = maxThumbPosition - x;\n          this._minTrackStyles.left = x;\n          (_this$minThumb$curren = this.minThumb.current) == null ? void 0 : _this$minThumb$curren.setNativeProps == null ? void 0 : _this$minThumb$curren.setNativeProps(this._minThumbStyles);\n          (_this$minTrack$curren2 = this.minTrack.current) == null ? void 0 : _this$minTrack$curren2.setNativeProps == null ? void 0 : _this$minTrack$curren2.setNativeProps(this._minTrackStyles);\n          if (this.didMount) {\n            this.updateValue(x);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"disableRTL\",\n    get: function get() {\n      var _this$props8 = this.props,\n        disableRTL = _this$props8.disableRTL,\n        useRange = _this$props8.useRange;\n      if (useRange) {\n        return false;\n      }\n      return disableRTL;\n    }\n  }, {\n    key: \"getRoundedValue\",\n    value: function getRoundedValue(value) {\n      var step = this.props.step;\n      var v = this.getValueInRange(value);\n      return step > 0 ? Math.round(v / step) * step : v;\n    }\n  }, {\n    key: \"getValueInRange\",\n    value: function getValueInRange(value) {\n      var _this$props9 = this.props,\n        minimumValue = _this$props9.minimumValue,\n        maximumValue = _this$props9.maximumValue;\n      var v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n      return v;\n    }\n  }, {\n    key: \"getXForValue\",\n    value: function getXForValue(value) {\n      var minimumValue = this.props.minimumValue;\n      var range = this.getRange();\n      var relativeValue = minimumValue - value;\n      var v = minimumValue < 0 ? Math.abs(relativeValue) : value - minimumValue;\n      var ratio = v / range;\n      var x = ratio * this.state.trackSize.width;\n      return x;\n    }\n  }, {\n    key: \"getValueForX\",\n    value: function getValueForX(x) {\n      var _this$props10 = this.props,\n        maximumValue = _this$props10.maximumValue,\n        minimumValue = _this$props10.minimumValue,\n        step = _this$props10.step;\n      var ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n      var range = this.getRange();\n      if (step) {\n        return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round(ratio * range / step) * step));\n      } else {\n        return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n      }\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var _this$props11 = this.props,\n        minimumValue = _this$props11.minimumValue,\n        maximumValue = _this$props11.maximumValue;\n      var range = maximumValue - minimumValue;\n      return range;\n    }\n  }, {\n    key: \"onSeekStart\",\n    value: function onSeekStart() {\n      var _this$props$onSeekSta, _this$props12;\n      (_this$props$onSeekSta = (_this$props12 = this.props).onSeekStart) == null ? void 0 : _this$props$onSeekSta.call(_this$props12);\n    }\n  }, {\n    key: \"onSeekEnd\",\n    value: function onSeekEnd() {\n      var _this$props$onSeekEnd, _this$props13;\n      (_this$props$onSeekEnd = (_this$props13 = this.props).onSeekEnd) == null ? void 0 : _this$props$onSeekEnd.call(_this$props13);\n    }\n  }, {\n    key: \"renderTrack\",\n    value: function renderTrack() {\n      var _this$props14 = this.props,\n        trackStyle = _this$props14.trackStyle,\n        renderTrack = _this$props14.renderTrack,\n        disabled = _this$props14.disabled,\n        _this$props14$minimum = _this$props14.minimumTrackTintColor,\n        minimumTrackTintColor = _this$props14$minimum === void 0 ? ACTIVE_COLOR : _this$props14$minimum,\n        _this$props14$maximum = _this$props14.maximumTrackTintColor,\n        maximumTrackTintColor = _this$props14$maximum === void 0 ? DEFAULT_COLOR : _this$props14$maximum;\n      return _isFunction(renderTrack) ? _jsx(View, {\n        style: [styles.track, {\n          backgroundColor: maximumTrackTintColor\n        }, trackStyle],\n        onLayout: this.onTrackLayout,\n        children: renderTrack()\n      }) : _jsxs(View, {\n        children: [_jsx(View, {\n          style: [styles.track, trackStyle, {\n            backgroundColor: disabled ? INACTIVE_COLOR : maximumTrackTintColor\n          }],\n          onLayout: this.onTrackLayout\n        }), _jsx(View, {\n          ref: this.minTrack,\n          style: [styles.track, trackStyle, styles.minimumTrack, this.shouldForceLTR && styles.trackDisableRTL, {\n            backgroundColor: disabled ? DEFAULT_COLOR : minimumTrackTintColor\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"renderRangeThumb\",\n    value: function renderRangeThumb() {\n      var _this$props15 = this.props,\n        useRange = _this$props15.useRange,\n        useGap = _this$props15.useGap;\n      if (useRange) {\n        if (useGap) {\n          return this.renderMinThumb();\n        }\n        return _jsx(View, {\n          style: {\n            zIndex: this.isDefaultThumbActive() ? 0 : 1,\n            top: '-50%'\n          },\n          children: this.renderMinThumb()\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props16 = this.props,\n        containerStyle = _this$props16.containerStyle,\n        testID = _this$props16.testID,\n        migrate = _this$props16.migrate;\n      if (migrate) {\n        return _jsx(IncubatorSlider, _objectSpread({}, this.props));\n      }\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: [styles.container, containerStyle],\n        onLayout: this.onContainerLayout,\n        onAccessibilityAction: this.onAccessibilityAction,\n        testID: testID\n      }, this.getAccessibilityProps()), {}, {\n        children: [this.renderTrack(), _jsx(View, {\n          style: styles.touchArea,\n          onTouchEnd: this.handleTrackPress\n        }), this.renderRangeThumb(), this.renderThumb()]\n      }));\n    }\n  }]);\n  return Slider;\n}(PureComponent);\nSlider.displayName = 'Slider';\nSlider.defaultProps = defaultProps;\nexport { Slider as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: THUMB_SIZE + SHADOW_RADIUS,\n    justifyContent: 'center'\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n    overflow: 'hidden'\n  },\n  minimumTrack: {\n    position: 'absolute'\n  },\n  trackDisableRTL: {\n    right: 0\n  },\n  touchArea: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'transparent'\n  })\n});","map":{"version":3,"names":["_isFunction","React","PureComponent","StyleSheet","PanResponder","AccessibilityInfo","Animated","Constants","Colors","IncubatorSlider","View","Thumb","extractAccessibilityProps","jsx","_jsx","jsxs","_jsxs","TRACK_SIZE","THUMB_SIZE","SHADOW_RADIUS","DEFAULT_COLOR","$backgroundDisabled","ACTIVE_COLOR","$backgroundPrimaryHeavy","INACTIVE_COLOR","$backgroundNeutralMedium","MIN_RANGE_GAP","defaultProps","value","minimumValue","maximumValue","step","thumbHitSlop","top","bottom","left","right","useGap","Slider","_PureComponent","_inherits","props","_this","_classCallCheck","_callSuper","thumb","createRef","minThumb","minTrack","_minTrackStyles","_x","_x_min","lastDx","initialValue","getRoundedValue","getInitialValue","minInitialValue","initialMinimumValue","lastValue","lastMinValue","_thumbStyles","_minThumbStyles","initialThumbSize","width","height","handleMoveShouldSetPanResponder","handlePanResponderGrant","onSeekStart","handlePanResponderMove","_e","gestureState","disabled","dx","isRTL","disableRTL","update","handlePanResponderEnd","bounceToStep","onSeekEnd","setActiveThumb","ref","activeThumbRef","updateTrackStepAndStyle","_ref","nativeEvent","_this$props","useRange","trackSize","state","newX","locationX","_this$_minThumbStyles","_this$_minThumbStyles2","isDefaultThumbActive","set_x","updateValue","get_x","moveTo","shouldForceLTR","onOrientationChanged","setState","measureCompleted","onRangeChange","values","min","max","onValueChange","onContainerLayout","handleMeasure","onTrackLayout","onThumbLayout","handleTrackPress","event","name","_ref2","_nativeEvent$layout","layout","size","currentSize","containerSize","thumbSize","onAccessibilityAction","_this$props2","getValueForX","newValue","actionName","getXForValue","announceForAccessibility","onMinTouchStart","onTouchStart","getThumbProps","_this$props3","thumbStyle","activeThumbStyle","disableActiveStyling","thumbTintColor","onLayout","renderMinThumb","_objectSpread","panResponder","panHandlers","renderThumb","didMount","thumbActiveAnimation","Value","checkProps","create","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onStartShouldSetPanResponder","onPanResponderEnd","onPanResponderTerminationRequest","_createClass","key","reset","_this$props$onReset","_this$props4","moveMinTo","onReset","call","_this$props5","initialMaximumValue","console","warn","getAccessibilityProps","accessibilityLabel","accessible","accessibilityRole","accessibilityState","undefined","accessibilityActions","label","componentDidUpdate","prevProps","prevState","_this$props6","componentDidMount","dimensionsChangeListener","addDimensionsEventListener","componentWillUnmount","removeDimensionsEventListener","x","Math","roundedValue","current","_this$thumb$current","_this$minTrack$curren","_this$props7","_this$state","nonOverlappingTrackWidth","_this$_minThumbStyles3","minThumbPosition","setNativeProps","_this$state2","_this$_thumbStyles","maxThumbPosition","_this$minThumb$curren","_this$minTrack$curren2","get","_this$props8","v","getValueInRange","round","_this$props9","range","getRange","relativeValue","abs","ratio","_this$props10","_this$props11","_this$props$onSeekSta","_this$props12","_this$props$onSeekEnd","_this$props13","renderTrack","_this$props14","trackStyle","_this$props14$minimum","minimumTrackTintColor","_this$props14$maximum","maximumTrackTintColor","style","styles","track","backgroundColor","children","minimumTrack","trackDisableRTL","renderRangeThumb","_this$props15","zIndex","render","_this$props16","containerStyle","testID","migrate","container","touchArea","onTouchEnd","displayName","default","justifyContent","borderRadius","overflow","position","absoluteFillObject"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/slider/index.js"],"sourcesContent":["import _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, PanResponder, AccessibilityInfo, Animated } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport IncubatorSlider from \"../../incubator/Slider\";\nimport View from \"../view\";\nimport Thumb from \"./Thumb\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nconst TRACK_SIZE = 6;\nconst THUMB_SIZE = 24;\nconst SHADOW_RADIUS = 4;\nconst DEFAULT_COLOR = Colors.$backgroundDisabled;\nconst ACTIVE_COLOR = Colors.$backgroundPrimaryHeavy;\nconst INACTIVE_COLOR = Colors.$backgroundNeutralMedium;\nconst MIN_RANGE_GAP = 4;\nconst defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  thumbHitSlop: {\n    top: 10,\n    bottom: 10,\n    left: 24,\n    right: 24\n  },\n  useGap: true\n};\n\n/**\n * @description: A Slider component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Slider/Slider.gif?raw=true\n */\nexport default class Slider extends PureComponent {\n  static displayName = 'Slider';\n  static defaultProps = defaultProps;\n  thumb = React.createRef();\n  minThumb = React.createRef();\n  minTrack = React.createRef();\n  _minTrackStyles = {};\n  _x = 0;\n  _x_min = 0;\n  lastDx = 0;\n  initialValue = this.getRoundedValue(this.getInitialValue());\n  minInitialValue = this.getRoundedValue(this.props.initialMinimumValue || this.props.minimumValue);\n  lastValue = this.initialValue;\n  lastMinValue = this.minInitialValue;\n  _thumbStyles = {};\n  _minThumbStyles = {\n    left: this.minInitialValue\n  };\n  initialThumbSize = {\n    width: THUMB_SIZE,\n    height: THUMB_SIZE\n  };\n  constructor(props) {\n    super(props);\n    this.activeThumbRef = this.thumb;\n    this.didMount = false;\n    this.state = {\n      containerSize: {\n        width: 0,\n        height: 0\n      },\n      trackSize: {\n        width: 0,\n        height: 0\n      },\n      thumbSize: {\n        width: 0,\n        height: 0\n      },\n      thumbActiveAnimation: new Animated.Value(1),\n      measureCompleted: false\n    };\n    this.checkProps(props);\n    this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this.handlePanResponderGrant,\n      onPanResponderMove: this.handlePanResponderMove,\n      onPanResponderRelease: this.handlePanResponderEnd,\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderEnd: () => true,\n      onPanResponderTerminationRequest: () => false\n    });\n  }\n  reset() {\n    // NOTE: used with ref\n    this.lastValue = this.initialValue;\n    this.lastMinValue = this.minInitialValue;\n    this.lastDx = 0;\n    this.setActiveThumb(this.thumb);\n    this.set_x(this.getXForValue(this.initialValue));\n    this.moveTo(this._x);\n    if (this.props.useRange) {\n      this.setActiveThumb(this.minThumb);\n      this.set_x(this.getXForValue(this.minInitialValue));\n      this.moveMinTo(this._x_min);\n    }\n    this.props.onReset?.();\n  }\n  getInitialValue() {\n    const {\n      useRange,\n      initialMaximumValue,\n      value,\n      maximumValue\n    } = this.props;\n    return useRange ? initialMaximumValue || maximumValue : value;\n  }\n  checkProps(props) {\n    const {\n      useRange,\n      minimumValue,\n      maximumValue,\n      value\n    } = props;\n    if (minimumValue >= maximumValue) {\n      console.warn('Slider minimumValue must be lower than maximumValue');\n    }\n    if (!useRange && (value < minimumValue || value > maximumValue)) {\n      console.warn('Slider value is not in range');\n    }\n  }\n  getAccessibilityProps() {\n    const {\n      disabled\n    } = this.props;\n    return {\n      accessibilityLabel: 'Slider',\n      accessible: true,\n      accessibilityRole: 'adjustable',\n      accessibilityState: disabled ? {\n        disabled\n      } : undefined,\n      accessibilityActions: [{\n        name: 'increment',\n        label: 'increment'\n      }, {\n        name: 'decrement',\n        label: 'decrement'\n      }],\n      ...extractAccessibilityProps(this.props)\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      useRange,\n      value,\n      initialMinimumValue\n    } = this.props;\n    if (!useRange && prevProps.value !== value) {\n      this.initialValue = this.getRoundedValue(value);\n\n      // set position for new value\n      this._x = this.getXForValue(this.initialValue);\n      this.moveTo(this._x);\n    }\n    if (prevState.measureCompleted !== this.state.measureCompleted) {\n      this.initialThumbSize = this.state.thumbSize; // for thumb enlargement\n\n      // set initial position\n      this._x = this.getXForValue(this.initialValue);\n      this._x_min = this.getXForValue(this.minInitialValue);\n      this.moveTo(this._x);\n      if (useRange && initialMinimumValue) {\n        this.moveMinTo(this._x_min);\n      }\n      this.didMount = true;\n    }\n  }\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n  }\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n  }\n\n  /* Gesture Recognizer */\n\n  handleMoveShouldSetPanResponder = () => {\n    return true;\n  };\n  handlePanResponderGrant = () => {\n    this.lastDx = 0;\n    this.onSeekStart();\n  };\n  handlePanResponderMove = (_e, gestureState) => {\n    const {\n      disabled\n    } = this.props;\n    if (disabled) {\n      return;\n    }\n    // dx = accumulated distance since touch start\n    const dx = gestureState.dx * (Constants.isRTL && !this.disableRTL ? -1 : 1);\n    this.update(dx - this.lastDx);\n    this.lastDx = dx;\n  };\n  handlePanResponderEnd = () => {\n    this.bounceToStep();\n    this.onSeekEnd();\n  };\n\n  /* Actions */\n\n  setActiveThumb = ref => {\n    this.activeThumbRef = ref;\n  };\n  get_x() {\n    if (this.isDefaultThumbActive()) {\n      return this._x;\n    } else {\n      return this._x_min;\n    }\n  }\n  set_x(x) {\n    if (this.isDefaultThumbActive()) {\n      this._x = x;\n    } else {\n      this._x_min = x;\n    }\n  }\n  update(dx) {\n    // calc x in range (instead of: this._x += dx)\n    let x = this.get_x();\n    x += dx;\n    x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n    this.set_x(x);\n    this.moveTo(x);\n    if (!this.props.useRange) {\n      this.updateValue(x);\n    }\n  }\n  bounceToStep() {\n    if (this.props.step > 0) {\n      const value = this.getValueForX(this.get_x());\n      const roundedValue = this.getRoundedValue(value);\n      const x = this.getXForValue(roundedValue);\n      this.set_x(x);\n      this.moveTo(x);\n    }\n  }\n  updateValue(x) {\n    const value = this.getValueForX(x);\n    if (this.props.useRange) {\n      this.onRangeChange(value);\n    } else {\n      this.onValueChange(value);\n    }\n  }\n  moveTo(x) {\n    if (this.isDefaultThumbActive()) {\n      if (this.thumb.current) {\n        const {\n          useRange,\n          useGap\n        } = this.props;\n        const {\n          trackSize,\n          thumbSize\n        } = this.state;\n        const nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n        const _x = this.shouldForceLTR ? trackSize.width - x : x; // adjust for RTL\n        const left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width; // do not render above prefix\\suffix icon\\text\n\n        if (useRange) {\n          const minThumbPosition = this._minThumbStyles?.left;\n          if (useGap && left > minThumbPosition + thumbSize.width + MIN_RANGE_GAP || !useGap && left >= minThumbPosition) {\n            this._thumbStyles.left = left;\n            const width = left - minThumbPosition;\n            this._minTrackStyles.width = width;\n            if (this.didMount) {\n              this.updateValue(x);\n            }\n          }\n        } else {\n          this._thumbStyles.left = left;\n          this._minTrackStyles.width = Math.min(trackSize.width, x);\n        }\n        this.thumb.current?.setNativeProps?.(this._thumbStyles);\n        this.minTrack.current?.setNativeProps?.(this._minTrackStyles);\n      }\n    } else {\n      this.moveMinTo(x);\n    }\n  }\n  moveMinTo(x) {\n    const {\n      useGap\n    } = this.props;\n    const {\n      trackSize,\n      thumbSize\n    } = this.state;\n    if (this.minThumb.current) {\n      const nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n      const _x = this.shouldForceLTR ? nonOverlappingTrackWidth - x : x; // adjust for RTL\n      const left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width; // do not render above prefix\\suffix icon\\text\n\n      const maxThumbPosition = this._thumbStyles?.left;\n      if (useGap && left < maxThumbPosition - thumbSize.width - MIN_RANGE_GAP || !useGap && left <= maxThumbPosition) {\n        this._minThumbStyles.left = left;\n        this._minTrackStyles.width = maxThumbPosition - x;\n        this._minTrackStyles.left = x;\n        this.minThumb.current?.setNativeProps?.(this._minThumbStyles);\n        this.minTrack.current?.setNativeProps?.(this._minTrackStyles);\n        if (this.didMount) {\n          this.updateValue(x);\n        }\n      }\n    }\n  }\n  updateTrackStepAndStyle = ({\n    nativeEvent\n  }) => {\n    const {\n      step,\n      useRange\n    } = this.props;\n    const {\n      trackSize\n    } = this.state;\n    const newX = Constants.isRTL && !this.disableRTL ? trackSize.width - nativeEvent.locationX : nativeEvent.locationX;\n    if (useRange) {\n      if (this.isDefaultThumbActive() && this._minThumbStyles?.left && newX < this._minThumbStyles?.left) {\n        // new x is smaller then min but the active thumb is the max\n        this.setActiveThumb(this.minThumb);\n      } else if (!this.isDefaultThumbActive() && this._thumbStyles.left && newX > this._thumbStyles.left) {\n        // new x is bigger then max but the active thumb is the min\n        this.setActiveThumb(this.thumb);\n      }\n    }\n    this.set_x(newX);\n    if (!useRange) {\n      this.updateValue(this.get_x());\n    }\n    if (step > 0) {\n      this.bounceToStep();\n    } else {\n      this.moveTo(this.get_x());\n    }\n  };\n\n  /** Values */\n\n  get disableRTL() {\n    const {\n      disableRTL,\n      useRange\n    } = this.props;\n    if (useRange) {\n      // block forceRTL on range slider\n      return false;\n    }\n    return disableRTL;\n  }\n  shouldForceLTR = Constants.isRTL && this.disableRTL;\n  isDefaultThumbActive = () => {\n    return this.activeThumbRef === this.thumb;\n  };\n  getRoundedValue(value) {\n    const {\n      step\n    } = this.props;\n    const v = this.getValueInRange(value);\n    return step > 0 ? Math.round(v / step) * step : v;\n  }\n  getValueInRange(value) {\n    const {\n      minimumValue,\n      maximumValue\n    } = this.props;\n    const v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n    return v;\n  }\n  getXForValue(value) {\n    const {\n      minimumValue\n    } = this.props;\n    const range = this.getRange();\n    const relativeValue = minimumValue - value;\n    const v = minimumValue < 0 ? Math.abs(relativeValue) : value - minimumValue; // for negatives\n    const ratio = v / range;\n    const x = ratio * this.state.trackSize.width;\n    return x;\n  }\n  getValueForX(x) {\n    const {\n      maximumValue,\n      minimumValue,\n      step\n    } = this.props;\n    const ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n    const range = this.getRange();\n    if (step) {\n      return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round(ratio * range / step) * step));\n    } else {\n      return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n    }\n  }\n  getRange() {\n    const {\n      minimumValue,\n      maximumValue\n    } = this.props;\n    const range = maximumValue - minimumValue;\n    return range;\n  }\n\n  /* Events */\n\n  onOrientationChanged = () => {\n    this.initialValue = this.lastValue;\n    this.minInitialValue = this.lastMinValue;\n    this.setState({\n      measureCompleted: false\n    });\n  };\n  onRangeChange = value => {\n    if (this.isDefaultThumbActive()) {\n      this.lastValue = value;\n    } else {\n      this.lastMinValue = value;\n    }\n    let values = {\n      min: this.lastMinValue,\n      max: this.lastValue\n    };\n    if (Constants.isRTL && this.props.disableRTL) {\n      // forceRTL for range slider\n      const {\n        maximumValue\n      } = this.props;\n      values = {\n        min: maximumValue - this.lastValue,\n        max: maximumValue - this.lastMinValue\n      };\n    }\n    this.props.onRangeChange?.(values);\n  };\n  onValueChange = value => {\n    this.lastValue = value;\n    this.props.onValueChange?.(value);\n  };\n  onSeekStart() {\n    this.props.onSeekStart?.();\n  }\n  onSeekEnd() {\n    this.props.onSeekEnd?.();\n  }\n  onContainerLayout = nativeEvent => {\n    this.handleMeasure('containerSize', nativeEvent);\n  };\n  onTrackLayout = nativeEvent => {\n    this.setState({\n      measureCompleted: false\n    });\n    this.handleMeasure('trackSize', nativeEvent);\n  };\n  onThumbLayout = nativeEvent => {\n    this.handleMeasure('thumbSize', nativeEvent);\n  };\n  handleTrackPress = event => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.onSeekStart();\n    this.updateTrackStepAndStyle(event);\n    this.onSeekEnd();\n  };\n  handleMeasure = (name, {\n    nativeEvent\n  }) => {\n    const {\n      width,\n      height\n    } = nativeEvent.layout;\n    const size = {\n      width,\n      height\n    };\n    const currentSize = this[name];\n    if (currentSize && width === currentSize.width && height === currentSize.height) {\n      return;\n    }\n    this[name] = size;\n    if (this.containerSize && this.thumbSize && this.trackSize) {\n      this.setState({\n        containerSize: this.containerSize,\n        trackSize: this.trackSize,\n        thumbSize: this.thumbSize\n      }, () => {\n        this.setState({\n          measureCompleted: true\n        });\n      });\n    }\n  };\n  onAccessibilityAction = event => {\n    const {\n      maximumValue,\n      minimumValue,\n      step\n    } = this.props;\n    const value = this.getValueForX(this._x);\n    let newValue;\n    switch (event.nativeEvent.actionName) {\n      case 'increment':\n        newValue = value !== maximumValue ? value + step : value;\n        break;\n      case 'decrement':\n        newValue = value !== minimumValue ? value - step : value;\n        break;\n      default:\n        newValue = value;\n        break;\n    }\n    this._x = this.getXForValue(newValue);\n    this.updateValue(this._x);\n    this.moveTo(this._x);\n    AccessibilityInfo.announceForAccessibility?.(`New value ${newValue}`);\n  };\n  onMinTouchStart = () => {\n    this.setActiveThumb(this.minThumb);\n  };\n  onTouchStart = () => {\n    this.setActiveThumb(this.thumb);\n  };\n  getThumbProps = () => {\n    const {\n      thumbStyle,\n      activeThumbStyle,\n      disableActiveStyling,\n      disabled,\n      thumbTintColor,\n      thumbHitSlop\n    } = this.props;\n    return {\n      disabled,\n      thumbTintColor,\n      thumbStyle,\n      activeThumbStyle,\n      disableActiveStyling,\n      thumbHitSlop,\n      onLayout: this.onThumbLayout\n    };\n  };\n\n  /* Renders */\n  renderMinThumb = () => {\n    return <Thumb {...this.getThumbProps()} ref={this.minThumb} onTouchStart={this.onMinTouchStart} {...this.panResponder.panHandlers} />;\n  };\n  renderThumb = () => {\n    return <Thumb {...this.getThumbProps()} ref={this.thumb} onTouchStart={this.onTouchStart} {...this.panResponder.panHandlers} />;\n  };\n  renderTrack() {\n    const {\n      trackStyle,\n      renderTrack,\n      disabled,\n      minimumTrackTintColor = ACTIVE_COLOR,\n      maximumTrackTintColor = DEFAULT_COLOR\n    } = this.props;\n    return _isFunction(renderTrack) ? <View style={[styles.track, {\n      backgroundColor: maximumTrackTintColor\n    }, trackStyle]} onLayout={this.onTrackLayout}>\n        {renderTrack()}\n      </View> : <View>\n        <View style={[styles.track, trackStyle, {\n        backgroundColor: disabled ? INACTIVE_COLOR : maximumTrackTintColor\n      }]} onLayout={this.onTrackLayout} />\n        <View ref={this.minTrack} style={[styles.track, trackStyle, styles.minimumTrack, this.shouldForceLTR && styles.trackDisableRTL, {\n        backgroundColor: disabled ? DEFAULT_COLOR : minimumTrackTintColor\n      }]} />\n      </View>;\n  }\n  renderRangeThumb() {\n    const {\n      useRange,\n      useGap\n    } = this.props;\n    if (useRange) {\n      if (useGap) {\n        return this.renderMinThumb();\n      }\n      return <View style={{\n        zIndex: this.isDefaultThumbActive() ? 0 : 1,\n        top: '-50%'\n      }}>{this.renderMinThumb()}</View>;\n    }\n  }\n  render() {\n    const {\n      containerStyle,\n      testID,\n      migrate\n    } = this.props;\n    if (migrate) {\n      return <IncubatorSlider {...this.props} />;\n    }\n    return <View style={[styles.container, containerStyle]} onLayout={this.onContainerLayout} onAccessibilityAction={this.onAccessibilityAction} testID={testID} {...this.getAccessibilityProps()}>\n        {this.renderTrack()}\n        <View style={styles.touchArea} onTouchEnd={this.handleTrackPress} />\n        {this.renderRangeThumb()}\n        {this.renderThumb()}\n      </View>;\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    height: THUMB_SIZE + SHADOW_RADIUS,\n    justifyContent: 'center'\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n    overflow: 'hidden'\n  },\n  minimumTrack: {\n    position: 'absolute'\n  },\n  trackDisableRTL: {\n    right: 0\n  },\n  touchArea: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}