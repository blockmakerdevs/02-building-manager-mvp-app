{"ast":null,"code":"import React from 'react';\nvar useCombinedRefs = function useCombinedRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  var targetRef = React.useRef();\n  React.useEffect(function () {\n    refs.forEach(function (ref) {\n      if (!ref) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(targetRef.current);\n      } else {\n        ref.current = targetRef.current;\n      }\n    });\n  }, [refs]);\n  return targetRef;\n};\nexport default useCombinedRefs;","map":{"version":3,"names":["React","useCombinedRefs","_len","arguments","length","refs","Array","_key","targetRef","useRef","useEffect","forEach","ref","current"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/hooks/useCombinedRefs/index.js"],"sourcesContent":["import React from 'react';\nconst useCombinedRefs = (...refs) => {\n  const targetRef = React.useRef();\n  React.useEffect(() => {\n    refs.forEach(ref => {\n      if (!ref) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(targetRef.current);\n      } else {\n        // @ts-expect-error\n        ref.current = targetRef.current;\n      }\n    });\n  }, [refs]);\n  return targetRef;\n};\nexport default useCombinedRefs;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAgB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC9B,IAAMC,SAAS,GAAGR,KAAK,CAACS,MAAM,CAAC,CAAC;EAChCT,KAAK,CAACU,SAAS,CAAC,YAAM;IACpBL,IAAI,CAACM,OAAO,CAAC,UAAAC,GAAG,EAAI;MAClB,IAAI,CAACA,GAAG,EAAE;QACR;MACF;MACA,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;QAC7BA,GAAG,CAACJ,SAAS,CAACK,OAAO,CAAC;MACxB,CAAC,MAAM;QAELD,GAAG,CAACC,OAAO,GAAGL,SAAS,CAACK,OAAO;MACjC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EACV,OAAOG,SAAS;AAClB,CAAC;AACD,eAAeP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}