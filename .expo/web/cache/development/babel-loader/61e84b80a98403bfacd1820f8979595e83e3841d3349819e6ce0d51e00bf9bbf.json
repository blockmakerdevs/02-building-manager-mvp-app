{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _isEmpty from \"lodash/isEmpty\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport { extractAlignmentsValues } from \"../../commons/modifiers\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport Modal from \"../modal\";\nimport View from \"../view\";\nimport PanListenerView from \"../panningViews/panListenerView\";\nimport DialogDismissibleView from \"./DialogDismissibleView\";\nimport OverlayFadingBackground from \"./OverlayFadingBackground\";\nimport PanningProvider, { PanningDirections, PanningDirectionsEnum } from \"../panningViews/panningProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { PanningDirections as DialogDirections, PanningDirectionsEnum as DialogDirectionsEnum };\nvar DEFAULT_OVERLAY_BACKGROUND_COLOR = Colors.rgba(Colors.$backgroundInverted, 0.3);\nvar Dialog = function (_Component) {\n  _inherits(Dialog, _Component);\n  function Dialog(_props) {\n    var _this;\n    _classCallCheck(this, Dialog);\n    _this = _callSuper(this, Dialog, [_props]);\n    _this.onFadeDone = function () {\n      if (!_this.state.modalVisibility) {\n        setTimeout(function () {\n          _this.props.onDialogDismissed == null ? void 0 : _this.props.onDialogDismissed(_this.props);\n        }, 100);\n      }\n    };\n    _this._onDismiss = function () {\n      _this.setState({\n        modalVisibility: false,\n        fadeOut: false\n      }, function () {\n        var props = _this.props;\n        if (props.visible) {\n          props.onDismiss == null ? void 0 : props.onDismiss(props);\n        }\n        if (Constants.isAndroid) {\n          props.onDialogDismissed == null ? void 0 : props.onDialogDismissed(props);\n        }\n      });\n    };\n    _this.onDismiss = function () {\n      var fadeOut = Constants.isIOS && _this.props.visible;\n      if (fadeOut) {\n        _this.setState({\n          fadeOut: fadeOut\n        }, _this._onDismiss);\n      } else {\n        _this._onDismiss();\n      }\n    };\n    _this.hideDialogView = function () {\n      _this.setState({\n        dialogVisibility: false\n      });\n    };\n    _this.renderPannableHeader = function (directions) {\n      var _this$props = _this.props,\n        renderPannableHeader = _this$props.renderPannableHeader,\n        pannableHeaderProps = _this$props.pannableHeaderProps;\n      if (renderPannableHeader) {\n        return _jsx(PanListenerView, {\n          directions: directions,\n          children: renderPannableHeader(pannableHeaderProps)\n        });\n      }\n    };\n    _this.getContainerType = function () {\n      var _this$props2 = _this.props,\n        panDirection = _this$props2.panDirection,\n        renderPannableHeader = _this$props2.renderPannableHeader;\n      if (!panDirection || renderPannableHeader) {\n        return View;\n      }\n      return PanListenerView;\n    };\n    _this.renderDialogView = function () {\n      var _this$props3 = _this.props,\n        children = _this$props3.children,\n        _this$props3$panDirec = _this$props3.panDirection,\n        panDirection = _this$props3$panDirec === void 0 ? PanningProvider.Directions.DOWN : _this$props3$panDirec,\n        containerStyle = _this$props3.containerStyle,\n        testID = _this$props3.testID;\n      var dialogVisibility = _this.state.dialogVisibility;\n      var Container = _this.getContainerType();\n      return _jsx(View, {\n        testID: testID,\n        style: [_this.styles.dialogViewSize],\n        pointerEvents: \"box-none\",\n        children: _jsx(PanningProvider, {\n          children: _jsx(DialogDismissibleView, {\n            direction: panDirection,\n            visible: dialogVisibility,\n            onDismiss: _this.onDismiss,\n            containerStyle: _this.styles.flexType,\n            style: _this.styles.flexType,\n            children: _jsxs(Container, {\n              directions: [panDirection],\n              style: [_this.styles.overflow, !Constants.isWeb && _this.styles.flexType, containerStyle],\n              children: [_this.renderPannableHeader([panDirection]), children]\n            })\n          })\n        })\n      });\n    };\n    _this.renderDialogContainer = function () {\n      var _this$state = _this.state,\n        modalVisibility = _this$state.modalVisibility,\n        dialogVisibility = _this$state.dialogVisibility,\n        fadeOut = _this$state.fadeOut;\n      var _this$props4 = _this.props,\n        useSafeArea = _this$props4.useSafeArea,\n        bottom = _this$props4.bottom,\n        overlayBackgroundColor = _this$props4.overlayBackgroundColor,\n        testID = _this$props4.testID;\n      var addBottomSafeArea = Constants.isIphoneX && useSafeArea && bottom;\n      var bottomInsets = Constants.getSafeAreaInsets().bottom - 8;\n      var onFadeDone = Constants.isIOS ? _this.onFadeDone : undefined;\n      return _jsxs(View, {\n        useSafeArea: useSafeArea,\n        style: [_this.styles.centerHorizontal, _this.styles.alignments, _this.styles.container],\n        pointerEvents: \"box-none\",\n        children: [_jsx(OverlayFadingBackground, {\n          testID: `${testID}.overlayFadingBackground`,\n          modalVisibility: modalVisibility,\n          dialogVisibility: dialogVisibility,\n          overlayBackgroundColor: overlayBackgroundColor,\n          onFadeDone: onFadeDone,\n          fadeOut: fadeOut\n        }), _this.renderDialogView(), addBottomSafeArea && _jsx(View, {\n          style: {\n            marginTop: bottomInsets\n          }\n        })]\n      });\n    };\n    _this.render = function () {\n      var modalVisibility = _this.state.modalVisibility;\n      var _this$props5 = _this.props,\n        testID = _this$props5.testID,\n        supportedOrientations = _this$props5.supportedOrientations,\n        accessibilityLabel = _this$props5.accessibilityLabel,\n        ignoreBackgroundPress = _this$props5.ignoreBackgroundPress,\n        modalProps = _this$props5.modalProps;\n      var onBackgroundPress = !ignoreBackgroundPress ? _this.hideDialogView : undefined;\n      return _jsx(Modal, _objectSpread(_objectSpread({\n        testID: `${testID}.modal`,\n        transparent: true,\n        visible: modalVisibility,\n        animationType: 'none',\n        onBackgroundPress: onBackgroundPress,\n        onRequestClose: onBackgroundPress,\n        supportedOrientations: supportedOrientations,\n        accessibilityLabel: accessibilityLabel\n      }, modalProps), {}, {\n        children: _this.renderDialogContainer()\n      }));\n    };\n    _this.state = {\n      alignments: extractAlignmentsValues(_props),\n      modalVisibility: _props.visible,\n      dialogVisibility: _props.visible\n    };\n    _this.styles = createStyles(_this.props);\n    _this.setAlignment();\n    return _this;\n  }\n  _createClass(Dialog, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var nexVisible = nextProps.visible;\n      var visible = this.props.visible;\n      if (nexVisible && !visible) {\n        this.setState({\n          modalVisibility: true,\n          dialogVisibility: true\n        });\n      } else if (visible && !nexVisible) {\n        this.hideDialogView();\n      }\n    }\n  }, {\n    key: \"setAlignment\",\n    value: function setAlignment() {\n      var alignments = this.state.alignments;\n      if (_isEmpty(alignments)) {\n        this.styles.alignments = this.styles.centerContent;\n      } else {\n        this.styles.alignments = alignments;\n      }\n    }\n  }]);\n  return Dialog;\n}(Component);\nDialog.displayName = 'Dialog';\nDialog.directions = PanningDirectionsEnum;\nDialog.defaultProps = {\n  overlayBackgroundColor: DEFAULT_OVERLAY_BACKGROUND_COLOR\n};\nfunction createStyles(props) {\n  var _props$width = props.width,\n    width = _props$width === void 0 ? '90%' : _props$width,\n    height = props.height;\n  var flexType = height ? {\n    flex: 1\n  } : {\n    flex: 0\n  };\n  return StyleSheet.create({\n    dialogViewSize: {\n      width: width,\n      height: height != null ? height : undefined\n    },\n    flexType: flexType,\n    container: {\n      flex: 1\n    },\n    centerHorizontal: {\n      alignItems: 'center'\n    },\n    centerContent: {\n      justifyContent: 'center'\n    },\n    overflow: {\n      overflow: 'hidden'\n    }\n  });\n}\nexport default asBaseComponent(Dialog);","map":{"version":3,"names":["_isEmpty","React","Component","StyleSheet","Colors","extractAlignmentsValues","Constants","asBaseComponent","Modal","View","PanListenerView","DialogDismissibleView","OverlayFadingBackground","PanningProvider","PanningDirections","PanningDirectionsEnum","jsx","_jsx","jsxs","_jsxs","DialogDirections","DialogDirectionsEnum","DEFAULT_OVERLAY_BACKGROUND_COLOR","rgba","$backgroundInverted","Dialog","_Component","_inherits","props","_this","_classCallCheck","_callSuper","onFadeDone","state","modalVisibility","setTimeout","onDialogDismissed","_onDismiss","setState","fadeOut","visible","onDismiss","isAndroid","isIOS","hideDialogView","dialogVisibility","renderPannableHeader","directions","_this$props","pannableHeaderProps","children","getContainerType","_this$props2","panDirection","renderDialogView","_this$props3","_this$props3$panDirec","Directions","DOWN","containerStyle","testID","Container","style","styles","dialogViewSize","pointerEvents","direction","flexType","overflow","isWeb","renderDialogContainer","_this$state","_this$props4","useSafeArea","bottom","overlayBackgroundColor","addBottomSafeArea","isIphoneX","bottomInsets","getSafeAreaInsets","undefined","centerHorizontal","alignments","container","marginTop","render","_this$props5","supportedOrientations","accessibilityLabel","ignoreBackgroundPress","modalProps","onBackgroundPress","_objectSpread","transparent","animationType","onRequestClose","createStyles","setAlignment","_createClass","key","value","UNSAFE_componentWillReceiveProps","nextProps","nexVisible","centerContent","displayName","defaultProps","_props$width","width","height","flex","create","alignItems","justifyContent"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/dialog/index.js"],"sourcesContent":["import _isEmpty from \"lodash/isEmpty\";\nimport React, { Component } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport { extractAlignmentsValues } from \"../../commons/modifiers\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport Modal from \"../modal\";\nimport View from \"../view\";\nimport PanListenerView from \"../panningViews/panListenerView\";\nimport DialogDismissibleView from \"./DialogDismissibleView\";\nimport OverlayFadingBackground from \"./OverlayFadingBackground\";\nimport PanningProvider, { PanningDirections, PanningDirectionsEnum } from \"../panningViews/panningProvider\";\nexport { PanningDirections as DialogDirections, PanningDirectionsEnum as DialogDirectionsEnum };\n\n// TODO: KNOWN ISSUES\n// 1. iOS pressing on the background while enter animation is happening will not call onDismiss\n//    Touch events are not registered?\n// 2. SafeArea is transparent\n// 3. Check why we need the state change in DialogDismissibleView -> onLayout -> animateTo\n\nconst DEFAULT_OVERLAY_BACKGROUND_COLOR = Colors.rgba(Colors.$backgroundInverted, 0.3);\n\n/**\n * @description: Dialog component for displaying custom content inside a popup dialog\n * @notes: Use alignment modifiers to control the dialog position\n * (top, bottom, centerV, centerH, etc... by default the dialog is aligned to center)\n * @modifiers: alignment\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/DialogScreen.js\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Dialog/Dialog.gif?raw=true\n */\nclass Dialog extends Component {\n  static displayName = 'Dialog';\n  static directions = PanningDirectionsEnum;\n  static defaultProps = {\n    overlayBackgroundColor: DEFAULT_OVERLAY_BACKGROUND_COLOR\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      alignments: extractAlignmentsValues(props),\n      modalVisibility: props.visible,\n      dialogVisibility: props.visible\n    };\n    this.styles = createStyles(this.props);\n    this.setAlignment();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {\n      visible: nexVisible\n    } = nextProps;\n    const {\n      visible\n    } = this.props;\n    if (nexVisible && !visible) {\n      this.setState({\n        modalVisibility: true,\n        dialogVisibility: true\n      });\n    } else if (visible && !nexVisible) {\n      this.hideDialogView();\n    }\n  }\n  setAlignment() {\n    const {\n      alignments\n    } = this.state;\n    if (_isEmpty(alignments)) {\n      this.styles.alignments = this.styles.centerContent;\n    } else {\n      this.styles.alignments = alignments;\n    }\n  }\n\n  // TODO: revert adding this workaround once RN fixes https://github.com/facebook/react-native/issues/29455\n  onFadeDone = () => {\n    if (!this.state.modalVisibility) {\n      setTimeout(() => {\n        // unfortunately this is needed if a modal needs to open on iOS\n        this.props.onDialogDismissed?.(this.props);\n      }, 100);\n    }\n  };\n  _onDismiss = () => {\n    this.setState({\n      modalVisibility: false,\n      fadeOut: false\n    }, () => {\n      const props = this.props;\n      if (props.visible) {\n        props.onDismiss?.(props);\n      }\n      // Parity with iOS Modal's onDismiss\n      if (Constants.isAndroid) {\n        props.onDialogDismissed?.(props);\n      }\n    });\n  };\n  onDismiss = () => {\n    const fadeOut = Constants.isIOS && this.props.visible;\n    if (fadeOut) {\n      this.setState({\n        fadeOut\n      }, this._onDismiss);\n    } else {\n      this._onDismiss();\n    }\n  };\n  hideDialogView = () => {\n    this.setState({\n      dialogVisibility: false\n    });\n  };\n  renderPannableHeader = directions => {\n    const {\n      renderPannableHeader,\n      pannableHeaderProps\n    } = this.props;\n    if (renderPannableHeader) {\n      return <PanListenerView directions={directions}>{renderPannableHeader(pannableHeaderProps)}</PanListenerView>;\n    }\n  };\n  getContainerType = () => {\n    const {\n      panDirection,\n      renderPannableHeader\n    } = this.props;\n    if (!panDirection || renderPannableHeader) {\n      return View;\n    }\n    return PanListenerView;\n  };\n  renderDialogView = () => {\n    const {\n      children,\n      panDirection = PanningProvider.Directions.DOWN,\n      containerStyle,\n      testID\n    } = this.props;\n    const {\n      dialogVisibility\n    } = this.state;\n    const Container = this.getContainerType();\n    return <View testID={testID} style={[this.styles.dialogViewSize]} pointerEvents=\"box-none\">\n        <PanningProvider>\n          <DialogDismissibleView direction={panDirection} visible={dialogVisibility} onDismiss={this.onDismiss} containerStyle={this.styles.flexType} style={this.styles.flexType}>\n            <Container directions={[panDirection]} style={[this.styles.overflow, !Constants.isWeb && this.styles.flexType, containerStyle]}>\n              {this.renderPannableHeader([panDirection])}\n              {children}\n            </Container>\n          </DialogDismissibleView>\n        </PanningProvider>\n      </View>;\n  };\n\n  // TODO: renderOverlay {_.invoke(this.props, 'renderOverlay')}\n  renderDialogContainer = () => {\n    const {\n      modalVisibility,\n      dialogVisibility,\n      fadeOut\n    } = this.state;\n    const {\n      useSafeArea,\n      bottom,\n      overlayBackgroundColor,\n      testID\n    } = this.props;\n    const addBottomSafeArea = Constants.isIphoneX && useSafeArea && bottom;\n    const bottomInsets = Constants.getSafeAreaInsets().bottom - 8; // TODO: should this be here or in the input style?\n    const onFadeDone = Constants.isIOS ? this.onFadeDone : undefined;\n    return <View useSafeArea={useSafeArea} style={[this.styles.centerHorizontal, this.styles.alignments, this.styles.container]} pointerEvents=\"box-none\">\n        <OverlayFadingBackground testID={`${testID}.overlayFadingBackground`} modalVisibility={modalVisibility} dialogVisibility={dialogVisibility} overlayBackgroundColor={overlayBackgroundColor} onFadeDone={onFadeDone} fadeOut={fadeOut} />\n        {this.renderDialogView()}\n        {addBottomSafeArea && <View style={{\n        marginTop: bottomInsets\n      }} />}\n      </View>;\n  };\n  render = () => {\n    const {\n      modalVisibility\n    } = this.state;\n    const {\n      testID,\n      supportedOrientations,\n      accessibilityLabel,\n      ignoreBackgroundPress,\n      modalProps\n    } = this.props;\n    const onBackgroundPress = !ignoreBackgroundPress ? this.hideDialogView : undefined;\n    return <Modal testID={`${testID}.modal`} transparent visible={modalVisibility} animationType={'none'} onBackgroundPress={onBackgroundPress} onRequestClose={onBackgroundPress} supportedOrientations={supportedOrientations} accessibilityLabel={accessibilityLabel} {...modalProps}>\n        {this.renderDialogContainer()}\n      </Modal>;\n  };\n}\nfunction createStyles(props) {\n  const {\n    width = '90%',\n    height\n  } = props;\n  const flexType = height ? {\n    flex: 1\n  } : {\n    flex: 0\n  };\n  return StyleSheet.create({\n    dialogViewSize: {\n      width,\n      height: height ?? undefined\n    },\n    flexType,\n    container: {\n      flex: 1\n    },\n    centerHorizontal: {\n      alignItems: 'center'\n    },\n    centerContent: {\n      justifyContent: 'center'\n    },\n    overflow: {\n      overflow: 'hidden'\n    }\n  });\n}\nexport default asBaseComponent(Dialog);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}