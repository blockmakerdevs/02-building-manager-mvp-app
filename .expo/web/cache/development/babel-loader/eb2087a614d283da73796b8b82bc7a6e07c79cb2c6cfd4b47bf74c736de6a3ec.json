{"ast":null,"code":"import _get from \"lodash/get\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport { BORDER_RADIUS } from \"./ColorPickerPresenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Header = function Header(props) {\n  var onDismiss = props.onDismiss,\n    accessibilityLabels = props.accessibilityLabels,\n    testID = props.testID,\n    doneButtonColor = props.doneButtonColor,\n    valid = props.valid,\n    onDonePressed = props.onDonePressed;\n  return _jsxs(View, {\n    row: true,\n    spread: true,\n    \"bg-white\": true,\n    \"paddingH-20\": true,\n    style: styles.header,\n    children: [_jsx(Button, {\n      link: true,\n      iconSource: Assets.icons.x,\n      iconStyle: {\n        tintColor: Colors.$iconDefault\n      },\n      onPress: onDismiss,\n      accessibilityLabel: _get(accessibilityLabels, 'dismissButton'),\n      testID: `${testID}.dialog.cancel`\n    }), _jsx(Button, {\n      color: doneButtonColor,\n      disabled: !valid,\n      link: true,\n      iconSource: Assets.icons.check,\n      onPress: onDonePressed,\n      accessibilityLabel: _get(accessibilityLabels, 'doneButton'),\n      testID: `${testID}.dialog.done`\n    })]\n  });\n};\nexport default Header;\nvar styles = StyleSheet.create({\n  header: {\n    height: 56,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS,\n    backgroundColor: Colors.$backgroundDefault\n  }\n});","map":{"version":3,"names":["_get","React","StyleSheet","View","Button","Assets","Colors","BORDER_RADIUS","jsx","_jsx","jsxs","_jsxs","Header","props","onDismiss","accessibilityLabels","testID","doneButtonColor","valid","onDonePressed","row","spread","style","styles","header","children","link","iconSource","icons","x","iconStyle","tintColor","$iconDefault","onPress","accessibilityLabel","color","disabled","check","create","height","borderTopLeftRadius","borderTopRightRadius","backgroundColor","$backgroundDefault"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/colorPicker/ColorPickerDialogHeader.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport Button from \"../button\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport { BORDER_RADIUS } from \"./ColorPickerPresenter\";\nconst Header = props => {\n  const {\n    onDismiss,\n    accessibilityLabels,\n    testID,\n    doneButtonColor,\n    valid,\n    onDonePressed\n  } = props;\n  return <View row spread bg-white paddingH-20 style={styles.header}>\n      <Button link iconSource={Assets.icons.x} iconStyle={{\n      tintColor: Colors.$iconDefault\n    }} onPress={onDismiss} accessibilityLabel={_get(accessibilityLabels, 'dismissButton')} testID={`${testID}.dialog.cancel`} />\n      <Button color={doneButtonColor} disabled={!valid} link iconSource={Assets.icons.check} onPress={onDonePressed} accessibilityLabel={_get(accessibilityLabels, 'doneButton')} testID={`${testID}.dialog.done`} />\n    </View>;\n};\nexport default Header;\nconst styles = StyleSheet.create({\n  header: {\n    height: 56,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS,\n    backgroundColor: Colors.$backgroundDefault\n  }\n});"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE1B,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,SAASC,MAAM;AACf,SAASC,aAAa;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACvD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAGC,KAAK,EAAI;EACtB,IACEC,SAAS,GAMPD,KAAK,CANPC,SAAS;IACTC,mBAAmB,GAKjBF,KAAK,CALPE,mBAAmB;IACnBC,MAAM,GAIJH,KAAK,CAJPG,MAAM;IACNC,eAAe,GAGbJ,KAAK,CAHPI,eAAe;IACfC,KAAK,GAEHL,KAAK,CAFPK,KAAK;IACLC,aAAa,GACXN,KAAK,CADPM,aAAa;EAEf,OAAOR,KAAA,CAACR,IAAI;IAACiB,GAAG;IAACC,MAAM;IAAC,gBAAQ;IAAC,mBAAW;IAACC,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GAC9DhB,IAAA,CAACL,MAAM;MAACsB,IAAI;MAACC,UAAU,EAAEtB,MAAM,CAACuB,KAAK,CAACC,CAAE;MAACC,SAAS,EAAE;QACpDC,SAAS,EAAEzB,MAAM,CAAC0B;MACpB,CAAE;MAACC,OAAO,EAAEnB,SAAU;MAACoB,kBAAkB,EAAElC,IAAI,CAACe,mBAAmB,EAAE,eAAe,CAAE;MAACC,MAAM,EAAG,GAAEA,MAAO;IAAgB,CAAE,CAAC,EAC1HP,IAAA,CAACL,MAAM;MAAC+B,KAAK,EAAElB,eAAgB;MAACmB,QAAQ,EAAE,CAAClB,KAAM;MAACQ,IAAI;MAACC,UAAU,EAAEtB,MAAM,CAACuB,KAAK,CAACS,KAAM;MAACJ,OAAO,EAAEd,aAAc;MAACe,kBAAkB,EAAElC,IAAI,CAACe,mBAAmB,EAAE,YAAY,CAAE;MAACC,MAAM,EAAG,GAAEA,MAAO;IAAc,CAAE,CAAC;EAAA,CAC3M,CAAC;AACX,CAAC;AACD,eAAeJ,MAAM;AACrB,IAAMW,MAAM,GAAGrB,UAAU,CAACoC,MAAM,CAAC;EAC/Bd,MAAM,EAAE;IACNe,MAAM,EAAE,EAAE;IACVC,mBAAmB,EAAEjC,aAAa;IAClCkC,oBAAoB,EAAElC,aAAa;IACnCmC,eAAe,EAAEpC,MAAM,CAACqC;EAC1B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}