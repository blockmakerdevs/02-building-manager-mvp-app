{"ast":null,"code":"import { HapticFeedbackPackage } from \"../optionalDependencies\";\nvar options = {\n  enableVibrateFallback: false,\n  ignoreAndroidSystemSettings: false\n};\nexport var HapticType = function (HapticType) {\n  HapticType[\"selection\"] = \"selection\";\n  HapticType[\"impactLight\"] = \"impactLight\";\n  HapticType[\"impactMedium\"] = \"impactMedium\";\n  HapticType[\"impactHeavy\"] = \"impactHeavy\";\n  HapticType[\"notificationSuccess\"] = \"notificationSuccess\";\n  HapticType[\"notificationWarning\"] = \"notificationWarning\";\n  HapticType[\"notificationError\"] = \"notificationError\";\n  return HapticType;\n}({});\nfunction triggerHaptic(hapticType, componentName) {\n  if (HapticFeedbackPackage) {\n    HapticFeedbackPackage.trigger(hapticType, options);\n  } else {\n    console.error(`RNUILib ${componentName}'s requires installing \"react-native-haptic-feedback\" dependency`);\n  }\n}\nexport default {\n  HapticType: HapticType,\n  triggerHaptic: triggerHaptic\n};","map":{"version":3,"names":["HapticFeedbackPackage","options","enableVibrateFallback","ignoreAndroidSystemSettings","HapticType","triggerHaptic","hapticType","componentName","trigger","console","error"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/services/HapticService.js"],"sourcesContent":["import { HapticFeedbackPackage } from \"../optionalDependencies\";\nconst options = {\n  enableVibrateFallback: false,\n  ignoreAndroidSystemSettings: false\n};\nexport let HapticType = /*#__PURE__*/function (HapticType) {\n  HapticType[\"selection\"] = \"selection\";\n  HapticType[\"impactLight\"] = \"impactLight\";\n  HapticType[\"impactMedium\"] = \"impactMedium\";\n  HapticType[\"impactHeavy\"] = \"impactHeavy\";\n  HapticType[\"notificationSuccess\"] = \"notificationSuccess\";\n  HapticType[\"notificationWarning\"] = \"notificationWarning\";\n  HapticType[\"notificationError\"] = \"notificationError\";\n  return HapticType;\n}({});\nfunction triggerHaptic(hapticType, componentName) {\n  if (HapticFeedbackPackage) {\n    HapticFeedbackPackage.trigger(hapticType, options);\n  } else {\n    console.error(`RNUILib ${componentName}'s requires installing \"react-native-haptic-feedback\" dependency`);\n  }\n}\nexport default {\n  HapticType,\n  triggerHaptic\n};"],"mappings":"AAAA,SAASA,qBAAqB;AAC9B,IAAMC,OAAO,GAAG;EACdC,qBAAqB,EAAE,KAAK;EAC5BC,2BAA2B,EAAE;AAC/B,CAAC;AACD,OAAO,IAAIC,UAAU,GAAgB,UAAUA,UAAU,EAAE;EACzDA,UAAU,CAAC,WAAW,CAAC,GAAG,WAAW;EACrCA,UAAU,CAAC,aAAa,CAAC,GAAG,aAAa;EACzCA,UAAU,CAAC,cAAc,CAAC,GAAG,cAAc;EAC3CA,UAAU,CAAC,aAAa,CAAC,GAAG,aAAa;EACzCA,UAAU,CAAC,qBAAqB,CAAC,GAAG,qBAAqB;EACzDA,UAAU,CAAC,qBAAqB,CAAC,GAAG,qBAAqB;EACzDA,UAAU,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;EACrD,OAAOA,UAAU;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,SAASC,aAAaA,CAACC,UAAU,EAAEC,aAAa,EAAE;EAChD,IAAIP,qBAAqB,EAAE;IACzBA,qBAAqB,CAACQ,OAAO,CAACF,UAAU,EAAEL,OAAO,CAAC;EACpD,CAAC,MAAM;IACLQ,OAAO,CAACC,KAAK,CAAE,WAAUH,aAAc,kEAAiE,CAAC;EAC3G;AACF;AACA,eAAe;EACbH,UAAU,EAAVA,UAAU;EACVC,aAAa,EAAbA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}