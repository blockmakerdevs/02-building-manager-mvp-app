{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _toLower from \"lodash/toLower\";\nimport _split from \"lodash/split\";\nimport React, { useMemo, forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Colors, BorderRadiuses } from \"../../style\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport Badge from \"../badge\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport AnimatedImage from \"../animatedImage\";\nimport * as AvatarHelper from \"../../helpers/AvatarHelper\";\nimport { useThemeProps } from \"../../hooks\";\nimport { isSvg } from \"../../utils/imageUtils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var BadgePosition = function (BadgePosition) {\n  BadgePosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\n  BadgePosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\n  BadgePosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\n  BadgePosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\n  return BadgePosition;\n}({});\nvar DEFAULT_BADGE_SIZE = 10;\nvar Avatar = forwardRef(function (props, ref) {\n  var themeProps = useThemeProps(props, 'Avatar');\n  var source = themeProps.source,\n    _themeProps$size = themeProps.size,\n    size = _themeProps$size === void 0 ? 50 : _themeProps$size,\n    _themeProps$labelColo = themeProps.labelColor,\n    labelColor = _themeProps$labelColo === void 0 ? Colors.$textDefault : _themeProps$labelColo,\n    _themeProps$badgeProp = themeProps.badgeProps,\n    badgeProps = _themeProps$badgeProp === void 0 ? {} : _themeProps$badgeProp,\n    _themeProps$badgePosi = themeProps.badgePosition,\n    badgePosition = _themeProps$badgePosi === void 0 ? BadgePosition.TOP_RIGHT : _themeProps$badgePosi,\n    testID = themeProps.testID,\n    ribbonLabel = themeProps.ribbonLabel,\n    customRibbon = themeProps.customRibbon,\n    ribbonStyle = themeProps.ribbonStyle,\n    ribbonLabelStyle = themeProps.ribbonLabelStyle,\n    _themeProps$animate = themeProps.animate,\n    animate = _themeProps$animate === void 0 ? false : _themeProps$animate,\n    imageStyle = themeProps.imageStyle,\n    onImageLoadStart = themeProps.onImageLoadStart,\n    onImageLoadEnd = themeProps.onImageLoadEnd,\n    onImageLoadError = themeProps.onImageLoadError,\n    imageProps = themeProps.imageProps,\n    label = themeProps.label,\n    name = themeProps.name,\n    backgroundColor = themeProps.backgroundColor,\n    useAutoColors = themeProps.useAutoColors,\n    autoColorsConfig = themeProps.autoColorsConfig,\n    containerStyle = themeProps.containerStyle,\n    onPress = themeProps.onPress,\n    children = themeProps.children;\n  var _badgeSize = badgeProps.size,\n    _badgeProps$borderWid = badgeProps.borderWidth,\n    badgeBorderWidth = _badgeProps$borderWid === void 0 ? 0 : _badgeProps$borderWid;\n  var badgeSize = _badgeSize || DEFAULT_BADGE_SIZE;\n  var _baseContainerStyle = useMemo(function () {\n    return {\n      width: size,\n      height: size,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: BorderRadiuses.br100\n    };\n  }, [size]);\n  var initialsStyle = useMemo(function () {\n    return {\n      color: labelColor,\n      backgroundColor: 'transparent',\n      lineHeight: undefined\n    };\n  }, [labelColor]);\n  var _baseRibbonStyle = useMemo(function () {\n    return {\n      position: 'absolute',\n      top: '10%',\n      left: size / 1.7,\n      borderRadius: size / 2\n    };\n  }, [size]);\n  var _ribbonStyle = useMemo(function () {\n    return [_baseRibbonStyle, styles.ribbon, ribbonStyle];\n  }, [_baseRibbonStyle, ribbonStyle]);\n  var _badgePosition = useMemo(function () {\n    var radius = size / 2;\n    var x = Math.sqrt(radius ** 2 * 2);\n    var y = x - radius;\n    var shift = Math.sqrt(y ** 2 / 2) - (badgeSize + badgeBorderWidth * 2) / 2;\n    var badgeLocation = _split(_toLower(badgePosition), '_', 2);\n    return _defineProperty(_defineProperty({\n      position: 'absolute'\n    }, badgeLocation[0], shift), badgeLocation[1], shift);\n  }, [size, badgeBorderWidth, badgeSize, badgePosition]);\n  var text = useMemo(function () {\n    var text = label;\n    if (_isNil(label) && !_isNil(name)) {\n      text = AvatarHelper.getInitials(name);\n    }\n    return text;\n  }, [label, name]);\n  var _backgroundColor = useMemo(function () {\n    if (backgroundColor) {\n      return backgroundColor;\n    }\n    var _ref2 = autoColorsConfig || {},\n      _ref2$avatarColors = _ref2.avatarColors,\n      avatarColors = _ref2$avatarColors === void 0 ? AvatarHelper.getAvatarColors() : _ref2$avatarColors,\n      _ref2$hashFunction = _ref2.hashFunction,\n      hashFunction = _ref2$hashFunction === void 0 ? AvatarHelper.hashStringToNumber : _ref2$hashFunction,\n      _ref2$defaultColor = _ref2.defaultColor,\n      defaultColor = _ref2$defaultColor === void 0 ? Colors.$backgroundNeutralLight : _ref2$defaultColor;\n    if (useAutoColors) {\n      return AvatarHelper.getBackgroundColor(name, avatarColors, hashFunction, defaultColor);\n    } else {\n      return defaultColor;\n    }\n  }, [backgroundColor, autoColorsConfig, useAutoColors, name]);\n  var _containerStyle = useMemo(function () {\n    return [_baseContainerStyle, containerStyle];\n  }, [_baseContainerStyle, containerStyle]);\n  var textStyle = useMemo(function () {\n    var typography = AvatarHelper.getInitialsTypography(size);\n    return [typography, initialsStyle, {\n      color: labelColor\n    }];\n  }, [size, initialsStyle, labelColor]);\n  var textContainerStyle = useMemo(function () {\n    var hasImage = !_isUndefined(source);\n    return [styles.initialsContainer, {\n      backgroundColor: _backgroundColor\n    }, hasImage && styles.initialsContainerWithInset];\n  }, [source, _backgroundColor]);\n  var accessibilityProps = useMemo(function () {\n    return extractAccessibilityProps(props);\n  }, [props]);\n  var _imageStyle = useMemo(function () {\n    return [_baseContainerStyle, StyleSheet.absoluteFillObject, imageStyle];\n  }, [_baseContainerStyle, imageStyle]);\n  var renderImage = function renderImage() {\n    if (source !== undefined) {\n      var ImageContainer = animate && !isSvg(source) ? AnimatedImage : Image;\n      return _jsx(ImageContainer, _objectSpread({\n        style: _imageStyle,\n        source: source,\n        onLoadStart: onImageLoadStart,\n        onLoadEnd: onImageLoadEnd,\n        onError: onImageLoadError,\n        testID: `${testID}.image`,\n        width: size,\n        height: size,\n        containerStyle: _baseContainerStyle\n      }, imageProps));\n    }\n  };\n  var renderBadge = function renderBadge() {\n    if (!_isEmpty(badgeProps)) {\n      return _jsx(Badge, _objectSpread(_objectSpread({\n        testID: `${testID}.onlineBadge`,\n        iconProps: {\n          tintColor: null\n        }\n      }, badgeProps), {}, {\n        size: badgeSize,\n        containerStyle: _badgePosition\n      }));\n    }\n  };\n  var renderRibbon = function renderRibbon() {\n    if (!customRibbon && ribbonLabel) {\n      return _jsx(View, {\n        style: _ribbonStyle,\n        children: _jsx(Text, {\n          numberOfLines: 1,\n          text100: true,\n          $textDefaultLight: true,\n          style: ribbonLabelStyle,\n          children: ribbonLabel\n        })\n      });\n    }\n  };\n  var renderCustomRibbon = function renderCustomRibbon() {\n    if (customRibbon) {\n      return _jsx(View, {\n        style: _baseRibbonStyle,\n        children: customRibbon\n      });\n    }\n  };\n  var Container = onPress ? TouchableOpacity : View;\n  return _jsxs(Container, _objectSpread(_objectSpread({\n    style: _containerStyle,\n    ref: ref,\n    testID: testID,\n    onPress: onPress,\n    accessible: !_isUndefined(onPress),\n    accessibilityLabel: 'Avatar',\n    accessibilityRole: onPress ? 'button' : 'image'\n  }, accessibilityProps), {}, {\n    children: [_jsx(View, {\n      testID: `${testID}.container`,\n      style: textContainerStyle,\n      children: !_isUndefined(text) && _jsx(Text, {\n        numberOfLines: 1,\n        style: textStyle,\n        testID: `${testID}.label`,\n        children: text\n      })\n    }), renderImage(), renderBadge(), renderCustomRibbon(), renderRibbon(), children]\n  }));\n});\nvar styles = StyleSheet.create({\n  initialsContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100\n  }),\n  initialsContainerWithInset: {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  },\n  ribbon: {\n    backgroundColor: Colors.$backgroundPrimaryHeavy,\n    paddingHorizontal: 6,\n    paddingVertical: 3\n  }\n});\nAvatar.badgePosition = BadgePosition;\nexport { Avatar };\nexport default Avatar;","map":{"version":3,"names":["_isEmpty","_isUndefined","_isNil","_toLower","_split","React","useMemo","forwardRef","StyleSheet","TouchableOpacity","Colors","BorderRadiuses","extractAccessibilityProps","Badge","View","Text","Image","AnimatedImage","AvatarHelper","useThemeProps","isSvg","jsx","_jsx","jsxs","_jsxs","BadgePosition","DEFAULT_BADGE_SIZE","Avatar","props","ref","themeProps","source","_themeProps$size","size","_themeProps$labelColo","labelColor","$textDefault","_themeProps$badgeProp","badgeProps","_themeProps$badgePosi","badgePosition","TOP_RIGHT","testID","ribbonLabel","customRibbon","ribbonStyle","ribbonLabelStyle","_themeProps$animate","animate","imageStyle","onImageLoadStart","onImageLoadEnd","onImageLoadError","imageProps","label","name","backgroundColor","useAutoColors","autoColorsConfig","containerStyle","onPress","children","_badgeSize","_badgeProps$borderWid","borderWidth","badgeBorderWidth","badgeSize","_baseContainerStyle","width","height","alignItems","justifyContent","borderRadius","br100","initialsStyle","color","lineHeight","undefined","_baseRibbonStyle","position","top","left","_ribbonStyle","styles","ribbon","_badgePosition","radius","x","Math","sqrt","y","shift","badgeLocation","_defineProperty","text","getInitials","_backgroundColor","_ref2","_ref2$avatarColors","avatarColors","getAvatarColors","_ref2$hashFunction","hashFunction","hashStringToNumber","_ref2$defaultColor","defaultColor","$backgroundNeutralLight","getBackgroundColor","_containerStyle","textStyle","typography","getInitialsTypography","textContainerStyle","hasImage","initialsContainer","initialsContainerWithInset","accessibilityProps","_imageStyle","absoluteFillObject","renderImage","ImageContainer","_objectSpread","style","onLoadStart","onLoadEnd","onError","renderBadge","iconProps","tintColor","renderRibbon","numberOfLines","text100","$textDefaultLight","renderCustomRibbon","Container","accessible","accessibilityLabel","accessibilityRole","create","right","bottom","$backgroundPrimaryHeavy","paddingHorizontal","paddingVertical"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/avatar/index.js"],"sourcesContent":["import _isEmpty from \"lodash/isEmpty\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _toLower from \"lodash/toLower\";\nimport _split from \"lodash/split\";\nimport React, { useMemo, forwardRef } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { Colors, BorderRadiuses } from \"../../style\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport Badge from \"../badge\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\n// @ts-ignore\nimport AnimatedImage from \"../animatedImage\";\nimport * as AvatarHelper from \"../../helpers/AvatarHelper\";\nimport { useThemeProps } from \"../../hooks\";\nimport { isSvg } from \"../../utils/imageUtils\";\nexport let BadgePosition = /*#__PURE__*/function (BadgePosition) {\n  BadgePosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\n  BadgePosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\n  BadgePosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\n  BadgePosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\n  return BadgePosition;\n}({});\nconst DEFAULT_BADGE_SIZE = 10;\n/**\n * @description: Avatar component for displaying user profile images\n * @extends: TouchableOpacity, Image\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Avatar/Avarat_1.png?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Avatar/Avarat_2.png?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.tsx\n */\nconst Avatar = forwardRef((props, ref) => {\n  const themeProps = useThemeProps(props, 'Avatar');\n  const {\n    source,\n    size = 50,\n    labelColor = Colors.$textDefault,\n    badgeProps = {},\n    badgePosition = BadgePosition.TOP_RIGHT,\n    testID,\n    ribbonLabel,\n    customRibbon,\n    ribbonStyle,\n    ribbonLabelStyle,\n    animate = false,\n    imageStyle,\n    onImageLoadStart,\n    onImageLoadEnd,\n    onImageLoadError,\n    imageProps,\n    label,\n    name,\n    backgroundColor,\n    useAutoColors,\n    autoColorsConfig,\n    containerStyle,\n    onPress,\n    children\n  } = themeProps;\n  const {\n    size: _badgeSize,\n    borderWidth: badgeBorderWidth = 0\n  } = badgeProps;\n  const badgeSize = _badgeSize || DEFAULT_BADGE_SIZE;\n  const _baseContainerStyle = useMemo(() => {\n    return {\n      width: size,\n      height: size,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: BorderRadiuses.br100\n    };\n  }, [size]);\n  const initialsStyle = useMemo(() => {\n    return {\n      color: labelColor,\n      backgroundColor: 'transparent',\n      lineHeight: undefined\n    };\n  }, [labelColor]);\n  const _baseRibbonStyle = useMemo(() => {\n    return {\n      position: 'absolute',\n      top: '10%',\n      left: size / 1.7,\n      borderRadius: size / 2\n    };\n  }, [size]);\n  const _ribbonStyle = useMemo(() => {\n    return [_baseRibbonStyle, styles.ribbon, ribbonStyle];\n  }, [_baseRibbonStyle, ribbonStyle]);\n  const _badgePosition = useMemo(() => {\n    const radius = size / 2;\n    const x = Math.sqrt(radius ** 2 * 2);\n    const y = x - radius;\n    const shift = Math.sqrt(y ** 2 / 2) - (badgeSize + badgeBorderWidth * 2) / 2;\n    const badgeLocation = _split(_toLower(badgePosition), '_', 2);\n    return {\n      position: 'absolute',\n      [badgeLocation[0]]: shift,\n      [badgeLocation[1]]: shift\n    };\n  }, [size, badgeBorderWidth, badgeSize, badgePosition]);\n  const text = useMemo(() => {\n    let text = label;\n    if (_isNil(label) && !_isNil(name)) {\n      text = AvatarHelper.getInitials(name);\n    }\n    return text;\n  }, [label, name]);\n  const _backgroundColor = useMemo(() => {\n    if (backgroundColor) {\n      return backgroundColor;\n    }\n    const {\n      avatarColors = AvatarHelper.getAvatarColors(),\n      hashFunction = AvatarHelper.hashStringToNumber,\n      defaultColor = Colors.$backgroundNeutralLight\n    } = autoColorsConfig || {};\n    if (useAutoColors) {\n      return AvatarHelper.getBackgroundColor(name, avatarColors, hashFunction, defaultColor);\n    } else {\n      return defaultColor;\n    }\n  }, [backgroundColor, autoColorsConfig, useAutoColors, name]);\n  const _containerStyle = useMemo(() => {\n    return [_baseContainerStyle, containerStyle];\n  }, [_baseContainerStyle, containerStyle]);\n  const textStyle = useMemo(() => {\n    const typography = AvatarHelper.getInitialsTypography(size);\n    return [typography, initialsStyle, {\n      color: labelColor\n    }];\n  }, [size, initialsStyle, labelColor]);\n  const textContainerStyle = useMemo(() => {\n    const hasImage = !_isUndefined(source);\n    return [styles.initialsContainer, {\n      backgroundColor: _backgroundColor\n    }, hasImage && styles.initialsContainerWithInset];\n  }, [source, _backgroundColor]);\n  const accessibilityProps = useMemo(() => {\n    return extractAccessibilityProps(props);\n  }, [props]);\n  const _imageStyle = useMemo(() => {\n    return [_baseContainerStyle, StyleSheet.absoluteFillObject, imageStyle];\n  }, [_baseContainerStyle, imageStyle]);\n  const renderImage = () => {\n    if (source !== undefined) {\n      // Looks like reanimated does not support SVG\n      const ImageContainer = animate && !isSvg(source) ? AnimatedImage : Image;\n      return <ImageContainer style={_imageStyle} source={source} onLoadStart={onImageLoadStart} onLoadEnd={onImageLoadEnd} onError={onImageLoadError} testID={`${testID}.image`} width={size} height={size} containerStyle={_baseContainerStyle} {...imageProps} />;\n    }\n  };\n  const renderBadge = () => {\n    if (!_isEmpty(badgeProps)) {\n      return <Badge testID={`${testID}.onlineBadge`} iconProps={{\n        tintColor: null\n      }} {...badgeProps} size={badgeSize} containerStyle={_badgePosition} />;\n    }\n  };\n  const renderRibbon = () => {\n    if (!customRibbon && ribbonLabel) {\n      return <View style={_ribbonStyle}>\n          <Text numberOfLines={1} text100 $textDefaultLight style={ribbonLabelStyle}>\n            {ribbonLabel}\n          </Text>\n        </View>;\n    }\n  };\n  const renderCustomRibbon = () => {\n    if (customRibbon) {\n      return <View style={_baseRibbonStyle}>{customRibbon}</View>;\n    }\n  };\n  const Container = onPress ? TouchableOpacity : View;\n  return <Container style={_containerStyle} ref={ref} testID={testID} onPress={onPress} accessible={!_isUndefined(onPress)} accessibilityLabel={'Avatar'} accessibilityRole={onPress ? 'button' : 'image'} {...accessibilityProps}>\n      <View testID={`${testID}.container`} style={textContainerStyle}>\n        {!_isUndefined(text) && <Text numberOfLines={1} style={textStyle} testID={`${testID}.label`}>\n            {text}\n          </Text>}\n      </View>\n      {renderImage()}\n      {renderBadge()}\n      {renderCustomRibbon()}\n      {renderRibbon()}\n      {children}\n    </Container>;\n});\nconst styles = StyleSheet.create({\n  initialsContainer: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100\n  },\n  initialsContainerWithInset: {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  },\n  ribbon: {\n    backgroundColor: Colors.$backgroundPrimaryHeavy,\n    paddingHorizontal: 6,\n    paddingVertical: 3\n  }\n});\n\n// @ts-expect-error\nAvatar.badgePosition = BadgePosition;\nexport { Avatar }; // For tests\n\nexport default Avatar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}