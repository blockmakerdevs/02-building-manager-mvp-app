{"ast":null,"code":"import { Easing, useSharedValue } from 'react-native-reanimated';\nimport Constants from \"../../commons/Constants\";\nexport var WINDOW_WIDTH = Constants.windowWidth;\nexport var DEFAULT_NO_OF_COLUMNS = 3;\nexport var getItemSize = function getItemSize(numOfColumns, viewWidth) {\n  return viewWidth / numOfColumns;\n};\nexport var animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350\n};\nvar usePresenter = function usePresenter(numOfColumns, itemSpacing) {\n  var itemLayout = useSharedValue(undefined);\n  var itemSize = getItemSize(numOfColumns, Constants.screenWidth);\n  return {\n    updateItemLayout: function updateItemLayout(layout) {\n      'worklet';\n\n      if (itemLayout.value === undefined) {\n        itemLayout.value = layout;\n      }\n    },\n    getTranslationByOrderChange: function getTranslationByOrderChange(newOrder, oldOrder) {\n      'worklet';\n\n      var _itemLayout$value$wid, _itemLayout$value, _itemLayout$value$hei, _itemLayout$value2;\n      var oldRow = Math.floor(oldOrder / numOfColumns);\n      var oldColumn = oldOrder % numOfColumns;\n      var newRow = Math.floor(newOrder / numOfColumns);\n      var newColumn = newOrder % numOfColumns;\n      var translation = {\n        x: (Constants.isRTL ? -1 : 1) * (newColumn - oldColumn) * (((_itemLayout$value$wid = (_itemLayout$value = itemLayout.value) == null ? void 0 : _itemLayout$value.width) != null ? _itemLayout$value$wid : 0) + itemSpacing),\n        y: (newRow - oldRow) * (((_itemLayout$value$hei = (_itemLayout$value2 = itemLayout.value) == null ? void 0 : _itemLayout$value2.height) != null ? _itemLayout$value$hei : 0) + itemSpacing)\n      };\n      return translation;\n    },\n    getOrderByPosition: function getOrderByPosition(positionX, positionY) {\n      'worklet';\n\n      var _itemLayout$value3, _itemLayout$value4;\n      var width = ((_itemLayout$value3 = itemLayout.value) == null ? void 0 : _itemLayout$value3.width) || itemSize;\n      var height = ((_itemLayout$value4 = itemLayout.value) == null ? void 0 : _itemLayout$value4.height) || itemSize;\n      var col = (Constants.isRTL ? -1 : 1) * Math.round(positionX / width);\n      var row = Math.round(positionY / height);\n      return row * numOfColumns + col;\n    },\n    getItemOrderById: function getItemOrderById(itemsOrder, itemId) {\n      'worklet';\n\n      return itemsOrder.indexOf(itemId);\n    },\n    getIdByItemOrder: function getIdByItemOrder(itemsOrder, orderIndex) {\n      'worklet';\n\n      return itemsOrder[orderIndex];\n    }\n  };\n};\nexport default usePresenter;","map":{"version":3,"names":["Easing","useSharedValue","Constants","WINDOW_WIDTH","windowWidth","DEFAULT_NO_OF_COLUMNS","getItemSize","numOfColumns","viewWidth","animationConfig","easing","inOut","ease","duration","usePresenter","itemSpacing","itemLayout","undefined","itemSize","screenWidth","updateItemLayout","layout","value","getTranslationByOrderChange","newOrder","oldOrder","_itemLayout$value$wid","_itemLayout$value","_itemLayout$value$hei","_itemLayout$value2","oldRow","Math","floor","oldColumn","newRow","newColumn","translation","x","isRTL","width","y","height","getOrderByPosition","positionX","positionY","_itemLayout$value3","_itemLayout$value4","col","round","row","getItemOrderById","itemsOrder","itemId","indexOf","getIdByItemOrder","orderIndex"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/sortableGridList/usePresenter.js"],"sourcesContent":["import { Easing, useSharedValue } from 'react-native-reanimated';\nimport Constants from \"../../commons/Constants\";\nexport const WINDOW_WIDTH = Constants.windowWidth;\nexport const DEFAULT_NO_OF_COLUMNS = 3;\nexport const getItemSize = (numOfColumns, viewWidth) => viewWidth / numOfColumns;\nexport const animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350\n};\nconst usePresenter = (numOfColumns, itemSpacing) => {\n  const itemLayout = useSharedValue(undefined);\n  const itemSize = getItemSize(numOfColumns, Constants.screenWidth);\n  return {\n    updateItemLayout: layout => {\n      'worklet';\n\n      if (itemLayout.value === undefined) {\n        itemLayout.value = layout;\n      }\n    },\n    getTranslationByOrderChange: (newOrder, oldOrder) => {\n      'worklet';\n\n      const oldRow = Math.floor(oldOrder / numOfColumns);\n      const oldColumn = oldOrder % numOfColumns;\n      const newRow = Math.floor(newOrder / numOfColumns);\n      const newColumn = newOrder % numOfColumns;\n      const translation = {\n        x: (Constants.isRTL ? -1 : 1) * (newColumn - oldColumn) * ((itemLayout.value?.width ?? 0) + itemSpacing),\n        y: (newRow - oldRow) * ((itemLayout.value?.height ?? 0) + itemSpacing)\n      };\n      return translation;\n    },\n    getOrderByPosition: (positionX, positionY) => {\n      'worklet';\n\n      const width = itemLayout.value?.width || itemSize;\n      const height = itemLayout.value?.height || itemSize;\n      const col = (Constants.isRTL ? -1 : 1) * Math.round(positionX / width);\n      const row = Math.round(positionY / height);\n      return row * numOfColumns + col;\n    },\n    getItemOrderById: (itemsOrder, itemId) => {\n      'worklet';\n\n      return itemsOrder.indexOf(itemId);\n    },\n    getIdByItemOrder: (itemsOrder, orderIndex) => {\n      'worklet';\n\n      return itemsOrder[orderIndex];\n    }\n  };\n};\nexport default usePresenter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}