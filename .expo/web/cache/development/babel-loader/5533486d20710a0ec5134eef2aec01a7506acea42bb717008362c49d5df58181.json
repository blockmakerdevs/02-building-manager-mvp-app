{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useMemo } from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ExpandableSection(props) {\n  var expanded = props.expanded,\n    sectionHeader = props.sectionHeader,\n    children = props.children,\n    top = props.top,\n    testID = props.testID;\n  var animate = function animate() {\n    LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.easeInEaseOut), {}, {\n      duration: 300\n    }));\n  };\n  var onPress = function onPress() {\n    props.onPress == null ? void 0 : props.onPress();\n    animate();\n  };\n  useDidUpdate(function () {\n    animate();\n  }, [expanded]);\n  var accessibilityState = useMemo(function () {\n    return {\n      expanded: expanded\n    };\n  }, [expanded]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [top && expanded && children, _jsx(TouchableOpacity, {\n      onPress: onPress,\n      testID: testID,\n      accessibilityState: accessibilityState,\n      children: sectionHeader\n    }), !top && expanded && children]\n  });\n}\nexport default ExpandableSection;\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["React","useMemo","LayoutAnimation","StyleSheet","View","TouchableOpacity","useDidUpdate","jsx","_jsx","jsxs","_jsxs","ExpandableSection","props","expanded","sectionHeader","children","top","testID","animate","configureNext","_objectSpread","Presets","easeInEaseOut","duration","onPress","accessibilityState","style","styles","container","create","overflow"],"sources":["/Users/mac/Repositories/BlockmakerIT/02-building-manager-mvp-app/node_modules/react-native-ui-lib/src/components/expandableSection/index.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { LayoutAnimation, StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { useDidUpdate } from \"../../hooks\";\n/**\n * @description: ExpandableSection component to render expanded section below or above the sectionHeader\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ExpandableSectionScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ExpandableSection/ExpandableSection.gif?raw=true\n */\n\nfunction ExpandableSection(props) {\n  const {\n    expanded,\n    sectionHeader,\n    children,\n    top,\n    testID\n  } = props;\n\n  /**\n   * TODO: move to reanimated LayoutAnimation after updating to version 2.3.0\n   * after migration, trigger the animation only in useDidUpdate.\n   */\n  const animate = () => {\n    LayoutAnimation.configureNext({\n      ...LayoutAnimation.Presets.easeInEaseOut,\n      duration: 300\n    });\n  };\n  const onPress = () => {\n    props.onPress?.();\n    animate();\n  };\n  useDidUpdate(() => {\n    animate();\n  }, [expanded]);\n  const accessibilityState = useMemo(() => {\n    return {\n      expanded\n    };\n  }, [expanded]);\n  return <View style={styles.container}>\n      {top && expanded && children}\n      <TouchableOpacity onPress={onPress} testID={testID} accessibilityState={accessibilityState}>\n        {sectionHeader}\n      </TouchableOpacity>\n      {!top && expanded && children}\n    </View>;\n}\nexport default ExpandableSection;\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAEvC,OAAOC,IAAI;AACX,OAAOC,gBAAgB;AACvB,SAASC,YAAY;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO3C,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC,IACEC,QAAQ,GAKND,KAAK,CALPC,QAAQ;IACRC,aAAa,GAIXF,KAAK,CAJPE,aAAa;IACbC,QAAQ,GAGNH,KAAK,CAHPG,QAAQ;IACRC,GAAG,GAEDJ,KAAK,CAFPI,GAAG;IACHC,MAAM,GACJL,KAAK,CADPK,MAAM;EAOR,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBhB,eAAe,CAACiB,aAAa,CAAAC,aAAA,CAAAA,aAAA,KACxBlB,eAAe,CAACmB,OAAO,CAACC,aAAa;MACxCC,QAAQ,EAAE;IAAG,EACd,CAAC;EACJ,CAAC;EACD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBZ,KAAK,CAACY,OAAO,oBAAbZ,KAAK,CAACY,OAAO,CAAG,CAAC;IACjBN,OAAO,CAAC,CAAC;EACX,CAAC;EACDZ,YAAY,CAAC,YAAM;IACjBY,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EACd,IAAMY,kBAAkB,GAAGxB,OAAO,CAAC,YAAM;IACvC,OAAO;MACLY,QAAQ,EAARA;IACF,CAAC;EACH,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,OAAOH,KAAA,CAACN,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAb,QAAA,GAChCC,GAAG,IAAIH,QAAQ,IAAIE,QAAQ,EAC5BP,IAAA,CAACH,gBAAgB;MAACmB,OAAO,EAAEA,OAAQ;MAACP,MAAM,EAAEA,MAAO;MAACQ,kBAAkB,EAAEA,kBAAmB;MAAAV,QAAA,EACxFD;IAAa,CACE,CAAC,EAClB,CAACE,GAAG,IAAIH,QAAQ,IAAIE,QAAQ;EAAA,CACzB,CAAC;AACX;AACA,eAAeJ,iBAAiB;AAChC,IAAMgB,MAAM,GAAGxB,UAAU,CAAC0B,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}